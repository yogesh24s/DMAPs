{"version":3,"file":"static/js/34.6787bb9c.chunk.js","mappings":"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","sources":["components/LandingLayOuts/Administrator/AdministratorLayOuts/CompanyUnitTable.js","services/adminService.js","components/LandingLayOuts/Administrator/AdministratorLayOuts/UnitFormModal.js","components/LandingLayOuts/Administrator/AdministratorLayOuts/UnitSetUp.js","services/userService.js","components/LandingLayOuts/Administrator/AdministratorLayOuts/CompanyUserTable.js","components/LandingLayOuts/Administrator/AdministratorLayOuts/UserSetUp.js","services/buyerService.js","components/LandingLayOuts/Administrator/AdministratorLayOuts/DMAPs_Data/BuyerGroupTable.js","components/LandingLayOuts/Administrator/AdministratorLayOuts/DMAPs_Data/BuyerGroup.js","services/genderService.js","components/LandingLayOuts/Administrator/AdministratorLayOuts/DMAPs_Data/Gender/GenderTable.js","components/LandingLayOuts/Administrator/AdministratorLayOuts/DMAPs_Data/Gender/Gender.js","services/productTypeService.js","components/LandingLayOuts/Administrator/AdministratorLayOuts/DMAPs_Data/ProductType/ProductTypeTable.js","components/LandingLayOuts/Administrator/AdministratorLayOuts/DMAPs_Data/ProductType/ProductType.js","services/seasonService.js","components/LandingLayOuts/Administrator/AdministratorLayOuts/DMAPs_Data/SEASON/SeasonTable.js","components/LandingLayOuts/Administrator/AdministratorLayOuts/DMAPs_Data/SEASON/Season.js","services/sizeGridService.js","components/LandingLayOuts/Administrator/AdministratorLayOuts/DMAPs_Data/SizeGrid/SizeGridTable.js","components/LandingLayOuts/Administrator/AdministratorLayOuts/DMAPs_Data/SizeGrid/SizeGrid.js","services/printtypeService.js","components/LandingLayOuts/Administrator/AdministratorLayOuts/DMAPs_Data/PrintType/PrintTypeTable.js","components/LandingLayOuts/Administrator/AdministratorLayOuts/DMAPs_Data/PrintType/PrintType.js","components/LandingLayOuts/Administrator/AdministratorLayOuts/DMAPs_Data/WashingType/WashingTypeTable.js","services/washingtypeService.js","components/LandingLayOuts/Administrator/AdministratorLayOuts/DMAPs_Data/WashingType/WashingType.js","services/embService.js","components/LandingLayOuts/Administrator/AdministratorLayOuts/DMAPs_Data/EmbType/EmbTypeTable.js","components/LandingLayOuts/Administrator/AdministratorLayOuts/DMAPs_Data/EmbType/EmbType.js","components/LandingLayOuts/Administrator/AdministratorLayOuts/DataSetUp.js","components/LandingLayOuts/Administrator/Administrator.js","services/styleStoreService.js","components/LandingLayOuts/StyleStore/StyleStoreLayOuts/StyleEntryTable.js","components/LandingLayOuts/StyleStore/StyleStoreLayOuts/PO_Details/ProductionOrderTable.js","components/LandingLayOuts/StyleStore/StyleStoreLayOuts/PO_Details/OrderModal.js","components/LandingLayOuts/StyleStore/StyleStoreLayOuts/PO_Details/EditOrderModal.js","components/LandingLayOuts/StyleStore/StyleStoreLayOuts/PO_Details/ProductionOrder.js","components/LandingLayOuts/StyleStore/StyleStoreLayOuts/StyleModal.js","components/LandingLayOuts/StyleStore/StyleStoreLayOuts/StyleEntry.js","components/LandingLayOuts/StyleStore/StyleStoreLayOuts/StyleLookupTable.js","components/LandingLayOuts/StyleStore/StyleStoreLayOuts/StyleLookup.js","components/LandingLayOuts/StyleStore/StyleStoreLayOuts/StyleDashboard.js","components/LandingLayOuts/StyleStore/StyleStore.js","components/LandingPage.js"],"sourcesContent":["import React from 'react'\r\nimport unitService from \"../../../../services/unitService\"\r\nimport { trackPromise } from 'react-promise-tracker';\r\nimport { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport { useTable } from 'react-table';\r\n\r\nexport default function CompanyUnitTable(props) {\r\n    //const [data, setData] = useState([]);\r\n    let data = props.data\r\n\tconst columns = React.useMemo(\r\n\t\t() => [\r\n\t\t  {\r\n\t\t\tHeader: 'Full Name',\r\n\t\t\taccessor: 'Unit_Full_Name',\r\n\t\t  },\r\n\t\t  {\r\n\t\t\tHeader: 'Short Name',\r\n\t\t\taccessor: 'Unit_Short_Name',\r\n\t\t  },\r\n\t\t  {\r\n\t\t\tHeader: 'Registration No.',\r\n\t\t\taccessor: 'Reg_Num',\r\n\t\t  },\r\n\t\t  {\r\n\t\t\tHeader: 'Address',\r\n\t\t\taccessor: 'Address_Line_1',\r\n\t\t  },\r\n\t\t  {\r\n\t\t\tHeader: 'City',\r\n\t\t\taccessor: 'City',\r\n\t\t  },\r\n\t\t  {\r\n\t\t\tHeader: 'State',\r\n\t\t\taccessor: 'State',\r\n\t\t  },\r\n\t\t  {\r\n\t\t\tHeader: 'Pincode',\r\n\t\t\taccessor: 'Pin_Code',\r\n\t\t  },\r\n\t\t  {\r\n\t\t\tHeader: 'Contact No.',\r\n\t\t\taccessor: 'Contact_No',\r\n\t\t  },\r\n\t\t  {\r\n\t\t\tHeader: 'E-mail ID',\r\n\t\t\taccessor: 'Email_Id',\r\n\t\t  },\r\n\t\t  {\r\n\t\t\tHeader: 'Actions',\r\n\t\t\taccessor: 'action', // You can set a dummy accessor for the action column\r\n\t\t\tCell: ({ row }) => ([\r\n\t\t\t\t<i className='fa fa-edit pointer' onClick={(data) => {\r\n\t\t\t\t  props.openEditForm(row.original)\r\n\t\t\t\t}} title='Edit'> </i>,  <i className='fa fa-trash ml-15 pointer' onClick={(data) => {\r\n\t\t\t\t\tprops.deleteUnitRecord(row.original)\r\n\t\t\t\t  }} title='Delete' > </i>]\r\n\t\t\t),\r\n\t\t  },\r\n\t\t],\r\n\t\t[]\r\n\t  );\r\n\t\t\r\n\t  const {\r\n\t\tgetTableProps,\r\n\t\tgetTableBodyProps,\r\n\t\theaderGroups,\r\n\t\trows,\r\n\t\tprepareRow,\r\n\t  } = useTable({\r\n\t\tcolumns,\r\n\t\tdata,\r\n\t  });\r\n\t\r\n  return (\r\n    <div className='mt-4'>\r\n      <table {...getTableProps()} className=\"table striped\" striped>\r\n        <thead>\r\n          {headerGroups.map((headerGroup) => (\r\n            <tr {...headerGroup.getHeaderGroupProps()}>\r\n              {headerGroup.headers.map((column) => (\r\n                <th {...column.getHeaderProps()}>{column.render('Header')}</th>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </thead>\r\n        <tbody {...getTableBodyProps()}>\r\n          {rows.map((row) => {\r\n            prepareRow(row);\r\n            return (\r\n              <tr {...row.getRowProps()}>\r\n                {row.cells.map((cell) => {\r\n                  return (\r\n                    <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\r\n                  );\r\n                })}\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n\r\n  )\r\n}\r\n","// import api from \"./interceptor\";\r\nimport api from \"./interceptor\";\r\n\r\nclass adminService {\r\n  getBasicDetails() {\r\n    const apiUrl = 'http://3.92.91.120:4000'; // Read base URL from environment\r\n    return api\r\n      .get(`${apiUrl}/api/basicDetails`)\r\n      .then((response) => {\r\n        return response;\r\n      })\r\n      .catch((err) => {\r\n        // Handle errors and show meaningful messages\r\n        if (err.response && err.response.data && err.response.data.message) {\r\n          alert(err.response.data.message);\r\n        } else {\r\n          alert(\"An error occurred. Please try again.\");\r\n        }\r\n      });\r\n  }\r\n}\r\n\r\nexport default new adminService();\r\n","import React from 'react';\r\nimport { MDBInput } from 'mdb-react-ui-kit';\r\nimport { Form, Button, Modal } from 'react-bootstrap';\r\n\r\nconst UnitForm = ({\r\n\tshow,\r\n\thandleClose,\r\n\thandleSubmit,\r\n\tunitName, setUnitName, unitNameError,\r\n\taddressLine1, setAddressLine1, addressLine1Error,\r\n\tstate, setState, stateList,\r\n\tdivision, setDivision, divisionError,\r\n\ttinNo, setTinNo, tinNoError,\r\n\tregNo, setRegNo, regNoError,\r\n\tshortName, setShortName, shortNameError,\r\n\tcity, setCity, cityError,\r\n\tpinNo, setPinNO, pinNoError,\r\n\tgroup, setGroup, groupError,\r\n\tmailId, setMailId, mailIdError,\r\n\tcontactNo, setContactNo, contactNoError\r\n}) => {\r\n\treturn (\r\n\t\t<Modal\r\n\t\t\tshow={show}\r\n\t\t\tonHide={handleClose}\r\n\t\t\tdialogClassName=\"modal-50w\"\r\n\t\t\tbackdrop=\"static\"\r\n\t\t\tkeyboard={false}>\r\n\t\t\t<Modal.Header closeButton>\r\n\t\t\t\t<Modal.Title>Add New Unit</Modal.Title>\r\n\t\t\t</Modal.Header>\r\n\t\t\t<Modal.Body>\r\n\t\t\t\t<form onSubmit={handleSubmit}>\r\n\t\t\t\t\t<div className='row'>\r\n\t\t\t\t\t\t<div className='col-6'>\r\n\t\t\t\t\t\t\t<MDBInput wrapperClass='mb-3' type='text' tabindex=\"1\" label='Name of Unit' onChange={(e) => setUnitName(e.target.value)} value={unitName} name='unitName' />\r\n\t\t\t\t\t\t\t{unitNameError && <p style={{ color: 'red' }}>{unitNameError}</p>}\r\n\r\n\t\t\t\t\t\t\t<MDBInput label='Address' type='text' tabindex=\"3\" wrapperClass='mb-3' onChange={(e) => setAddressLine1(e.target.value)} value={addressLine1} name='addressLine1' />\r\n\t\t\t\t\t\t\t{addressLine1Error && <p style={{ color: 'red' }}>{addressLine1Error}</p>}\r\n\r\n\t\t\t\t\t\t\t<Form.Select className='mb-3' tabindex=\"5\" label='State' onChange={(e) => setState(e.target.value)} value={state} name='state'>\r\n\t\t\t\t\t\t\t\t<option>Select State</option>\r\n\t\t\t\t\t\t\t\t{stateList.map((item) => (\r\n\t\t\t\t\t\t\t\t\t<option key={item.State_Name} value={item.State_Name}>{item.State_Name}</option>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t</Form.Select>\r\n\r\n\t\t\t\t\t\t\t<MDBInput wrapperClass='mb-3' tabindex=\"7\" type='text' label='Division' onChange={(e) => setDivision(e.target.value)} value={division} name='division' />\r\n\t\t\t\t\t\t\t{divisionError && <p style={{ color: 'red' }}>{divisionError}</p>}\r\n\r\n\t\t\t\t\t\t\t<MDBInput wrapperClass='mb-3' type='number' tabindex=\"9\" label='TIN No.' onChange={(e) => setTinNo(e.target.value)} value={tinNo} name='tinNo' />\r\n\t\t\t\t\t\t\t{tinNoError && <p style={{ color: 'red' }}>{tinNoError}</p>}\r\n\r\n\t\t\t\t\t\t\t<MDBInput wrapperClass='mb-3' type='text' tabindex=\"11\" label='Registration No.' onChange={(e) => setRegNo(e.target.value)} value={regNo} name='regNo' />\r\n\t\t\t\t\t\t\t{regNoError && <p style={{ color: 'red' }}>{regNoError}</p>}\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div className='col-6'>\r\n\t\t\t\t\t\t\t<MDBInput wrapperClass='mb-3' type='text' tabindex=\"2\" label='Short Name' onChange={(e) => setShortName(e.target.value)} value={shortName} name='shortName' />\r\n\t\t\t\t\t\t\t{shortNameError && <p style={{ color: 'red' }}>{shortNameError}</p>}\r\n\r\n\t\t\t\t\t\t\t<MDBInput wrapperClass='mb-3' tabindex=\"4\" type='text' label='City' onChange={(e) => setCity(e.target.value)} value={city} name='city' />\r\n\t\t\t\t\t\t\t{cityError && <p style={{ color: 'red' }}>{cityError}</p>}\r\n\r\n\t\t\t\t\t\t\t<MDBInput wrapperClass='mb-3' tabindex=\"6\" type='number' label='Pincode' onChange={(e) => setPinNO(e.target.value)} value={pinNo} name='pinNo' />\r\n\t\t\t\t\t\t\t{pinNoError && <p style={{ color: 'red' }}>{pinNoError}</p>}\r\n\r\n\t\t\t\t\t\t\t<MDBInput wrapperClass='mb-3' tabindex=\"8\" type='text' label='Group' onChange={(e) => setGroup(e.target.value)} value={group} name='group' />\r\n\t\t\t\t\t\t\t{groupError && <p style={{ color: 'red' }}>{groupError}</p>}\r\n\r\n\t\t\t\t\t\t\t<MDBInput wrapperClass='mb-3' type='email' tabindex=\"10\" label='Admin E-Mail ID' onChange={(e) => setMailId(e.target.value)} value={mailId} name='mailId' />\r\n\t\t\t\t\t\t\t{mailIdError && <p style={{ color: 'red' }}>{mailIdError}</p>}\r\n\r\n\t\t\t\t\t\t\t<MDBInput wrapperClass='mb-3' type='number' tabindex=\"12\" label='Admin Contact No.' onChange={(e) => setContactNo(e.target.value)} value={contactNo} name='contactNo' />\r\n\t\t\t\t\t\t\t{contactNoError && <p style={{ color: 'red' }}>{contactNoError}</p>}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</form>\r\n\t\t\t</Modal.Body>\r\n\t\t\t<Modal.Footer>\r\n\t\t\t\t<Button variant=\"secondary\" onClick={handleClose} style={{ width: '15%' }}>Cancel</Button>\r\n\t\t\t\t<Button variant=\"primary\" type='submit' onClick={handleSubmit} style={{ width: '15%' }}>Save</Button>\r\n\t\t\t</Modal.Footer>\r\n\t\t</Modal>\r\n\t);\r\n};\r\n\r\nexport default UnitForm;\r\n","/**\r\n * owner : \r\n * author :\r\n */\r\n\r\nimport { useEffect, useState } from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Form from 'react-bootstrap/Form';\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\r\nimport Tooltip from 'react-bootstrap/Tooltip';\r\n\r\nimport './UnitSetUp.scss';\r\n\r\nimport {\r\n\tMDBTabs,\r\n\tMDBTabsItem,\r\n\tMDBTabsLink,\r\n\tMDBTabsContent,\r\n\tMDBTabsPane,\r\n\tMDBCol,\r\n\tMDBInput\r\n} from 'mdb-react-ui-kit';\r\n\r\nimport unitService from \"../../../../services/unitService\";\r\nimport { trackPromise } from 'react-promise-tracker';\r\nimport CompanyUnitTable from './CompanyUnitTable';\r\nimport adminService from \"../../../../services/adminService\"\r\nimport UnitForm from './UnitFormModal';\r\n\r\n\r\nexport default function UnitSetUp() {\r\n\r\n\tconst [show, setShow] = useState(false);\r\n\tconst handleClose = () => setShow(false);\r\n\r\n\tconst [verticalActive, setVerticalActive] = useState('tabV1');\r\n\tconst [unitNameLogo, setUnitNameLogo] = useState(\"\")\r\n\tconst [unitName, setunitName] = useState('')\r\n\tconst [unitNameError, setUnitNameError] = useState(\"\")\r\n\tconst [shortName, setShortName] = useState('')\r\n\tconst [shortNameError, setShortNameError] = useState('');\r\n\tconst [group, setGroup] = useState('')\r\n\tconst [groupError, setGroupError] = useState('');\r\n\tconst [division, setdivision] = useState('')\r\n\tconst [divisionError, setDivisionError] = useState('');\r\n\tconst [tinNo, setTinNo] = useState('')\r\n\tconst [tinNoError, setTinNoError] = useState('');\r\n\tconst [regNo, setRegNo] = useState('')\r\n\tconst [regNoError, setRegNoError] = useState('');\r\n\tconst [addressLine1, setAddressLine1] = useState('')\r\n\tconst [addressLine1Error, setAddressLine1Error] = useState('');\r\n\tconst [city, setCity] = useState('')\r\n\tconst [cityError, setCityError] = useState('');\r\n\tconst [pinNo, setPinNO] = useState('')\r\n\tconst [pinNoError, setPinNoError] = useState('');\r\n\tconst [contactNo, setContactNo] = useState('');\r\n\tconst [contactNoError, setContactNoError] = useState('');\r\n\tconst [mailId, setMailId] = useState('')\r\n\tconst [mailIdError, setMailIdError] = useState('');\r\n\tconst [state, setState] = useState('');\r\n\tconst [stateList, setStateList] = useState([]);\r\n\tconst [stateError, setStateError] = useState('');\r\n\tconst [data, setData] = useState([]);\r\n\tconst [isEditFormOpen, setIsEditFormOpen] = useState(false);\r\n\tconst [unitId, setUnitId] = useState(\"\");\r\n\tconst handleVerticalClick = (value) => {\r\n\t\tif (value === verticalActive) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tsetVerticalActive(value);\r\n\t};\r\n\r\n\tconst handleTinValidation = (value) => {\r\n\t\t// Define a regular expression pattern for a 11-digit TIN\r\n\t\tconst tinPattern = /^$|^\\d{11}$/;\r\n\r\n\t\t// Return whether the value matches the pattern\r\n\t\treturn tinPattern.test(value);\r\n\t};\r\n\r\n\r\n\tconst handleUnitSetup = (e) => {\r\n\t\te.preventDefault();\r\n\t\t\r\n\t\tlet isValid = true;\r\n\r\n\t\tif (!unitName) {\r\n\t\t\tsetUnitNameError('Unit Name is required');\r\n\t\t\tisValid = false;\r\n\t\t} else {\r\n\t\t\tsetUnitNameError('');\r\n\t\t}\r\n\r\n\t\tif (!shortName) {\r\n\t\t\tsetShortNameError('Short Name is required');\r\n\t\t\tisValid = false;\r\n\t\t} else if (/[^a-zA-Z0-9]/.test(shortName)) {\r\n\t\t\tsetShortNameError('Short Name cannot contain spaces or special characters');\r\n\t\t\tisValid = false;\r\n\t\t} else {\r\n\t\t\tsetShortNameError('');\r\n\t\t}\r\n\r\n\t\tif (!group) {\r\n\t\t\tsetGroupError('Group is required');\r\n\t\t\tisValid = false;\r\n\t\t} else {\r\n\t\t\tsetGroupError('');\r\n\t\t}\r\n\r\n\t\tif (!division) {\r\n\t\t\tsetDivisionError('Division is required');\r\n\t\t\tisValid = false;\r\n\t\t} else {\r\n\t\t\tsetDivisionError('');\r\n\t\t}\r\n\r\n\t\tif (!tinNo) {\r\n\t\t\tsetTinNoError('TIN NO. should be 11 digits');\r\n\t\t\tisValid = false;\r\n\t\t} else if (!handleTinValidation(tinNo) && tinNo.length != '11') {\r\n\t\t\tsetTinNoError('TIN NO. should be 11 digits');\r\n\t\t\tisValid = false;\r\n\t\t} else {\r\n\t\t\tsetTinNoError('');\r\n\t\t}\r\n\r\n\t\tif (!regNo) {\r\n\t\t\tsetRegNoError('Registration No is required');\r\n\t\t\tisValid = false;\r\n\t\t} else if (!/^[a-zA-Z0-9]+$/.test(regNo)) {\r\n\t\t\tsetRegNoError('Registration No must contain only alphanumeric characters');\r\n\t\t\tisValid = false;\r\n\t\t} else {\r\n\t\t\tsetRegNoError('');\r\n\t\t}\r\n\r\n\t\tif (!addressLine1) {\r\n\t\t\tsetAddressLine1Error('Address is required');\r\n\t\t\tisValid = false;\r\n\t\t} else {\r\n\t\t\tsetAddressLine1Error('');\r\n\t\t}\r\n\r\n\t\tif (!city) {\r\n\t\t\tsetCityError('City is required');\r\n\t\t\tisValid = false;\r\n\t\t} else {\r\n\t\t\tsetCityError('');\r\n\t\t}\r\n\r\n\t\tif (!state) {\r\n\t\t\tsetStateError('State is required');\r\n\t\t\tisValid = false;\r\n\t\t} else {\r\n\t\t\tsetStateError('');\r\n\t\t}\r\n\r\n\t\tif (!pinNo) {\r\n\t\t\tsetPinNoError('Pin Number is required');\r\n\t\t\tisValid = false;\r\n\t\t} else if (!/^\\d{6}$/.test(pinNo)) {\r\n\t\t\tsetPinNoError('Pin Number must be a 6-digit number');\r\n\t\t\tisValid = false;\r\n\t\t} else {\r\n\t\t\tsetPinNoError('');\r\n\t\t}\r\n\r\n\t\tif (!contactNo) {\r\n\t\t\t\r\n\t\t\tsetContactNoError('Contact Number is required');\r\n\t\t\tisValid = false;\r\n\t\t} else if (!/^[6789]\\d{9}$/.test(contactNo)) {\r\n\t\t\tsetContactNoError('Please enter a valid 10-digit Indian mobile number');\r\n\t\t\tisValid = false;\r\n\t\t} else {\r\n\t\t\tsetContactNoError('');\r\n\t\t}\r\n\r\n\r\n\r\n\t\tif (!mailId) {\r\n\t\t\tsetMailIdError('Mail id is required');\r\n\t\t\tisValid = false;\r\n\t\t} else if (!/\\S+@\\S+\\.\\S+/.test(mailId)) { // Check if email format is invalid\r\n\t\t\tsetMailIdError('Invalid email format');\r\n\t\t\tisValid = false;\r\n\t\t} else {\r\n\t\t\tsetMailIdError('');\r\n\t\t}\r\n\r\n\t\tif (!isValid) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tlet payload = {\r\n\t\t\t\"Unit_Full_Name\": unitName,\r\n\t\t\t\"Unit_Short_Name\": shortName,\r\n\t\t\t\"Group_Id\": group,\r\n\t\t\t\"Division_Id\": division,\r\n\t\t\t\"Tin_Num\": tinNo,\r\n\t\t\t\"Reg_Num\": regNo,\r\n\t\t\t\"Address_Line_1\": addressLine1,\r\n\t\t\t\"City\": city,\r\n\t\t\t\"State\": state,\r\n\t\t\t\"Pin_Code\": pinNo,\r\n\t\t\t\"Contact_No\": contactNo,\r\n\t\t\t\"Email_Id\": mailId\r\n\t\t}\r\n\r\n\t\ttrackPromise(unitService.saveCompanyUnits({ \"data\": [payload] }).then((response) => {\r\n\t\t\t//check login response\r\n\t\t\tif (response.status === 200 && response.data.data.status == \"success\") {\r\n\t\t\t\t// alert(response.data.result);\r\n\t\t\t\tstateValues()\r\n\t\t\t\tgetCompanyUnitData()\r\n\t\t\t\thandleClose()\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\talert(response.data.data.result);\r\n\t\t\t}\r\n\r\n\t\t}).catch((error) => {\r\n\t\t\t//console.log(error.response.data.error)\r\n\t\t\talert(error.response.data.error);\r\n\t\t})\r\n\t\t);\r\n\r\n\t}\r\n\tconst getCompanyUnitData = () => {\r\n\t\ttrackPromise(\r\n\t\t\tunitService.getCompanyUnits().then((response) => {\r\n\t\t\t\tsetData(response.data.Company_Units)\r\n\t\t\t})\r\n\t\t);\r\n\t}\r\n\r\n\tconst getBasicDetails = () => {\r\n\t\ttrackPromise(\r\n\t\t\tadminService.getBasicDetails().then((response) => {\r\n\t\t\t\tsetStateList(response.data[0].data[0].data.states)\r\n\t\t\t})\r\n\t\t);\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tgetBasicDetails();\r\n\t\tgetCompanyUnitData()\r\n\t}, [])\r\n\r\n\r\n\tfunction stateValues() {\r\n\r\n\t\tsetUnitNameError('');\r\n\t\tsetShortNameError('');\r\n\t\tsetGroupError('');\r\n\t\tsetDivisionError('');\r\n\t\tsetTinNoError('');\r\n\t\tsetRegNoError('');\r\n\t\tsetAddressLine1Error('');\r\n\t\tsetCityError('');\r\n\t\tsetStateError('');\r\n\t\tsetPinNoError('');\r\n\t\tsetContactNoError('');\r\n\t\tsetMailIdError('');\r\n\r\n\t\tsetunitName('')\r\n\t\tsetShortName('')\r\n\t\tsetGroup('')\r\n\t\tsetdivision('')\r\n\t\tsetTinNo('')\r\n\t\tsetRegNo('')\r\n\t\tsetAddressLine1('')\r\n\t\tsetCity('')\r\n\t\tsetState('')\r\n\t\tsetPinNO('')\r\n\t\tsetContactNo('')\r\n\t\tsetMailId('')\r\n\t}\r\n\r\n\tuseEffect((\r\n\r\n\t) => { }, [])\r\n\r\n\r\n\tconst iconActionHandler = (cell, row, rowIndex) => {\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<i className=\"fas fa-edit action-icon\" title=\"Edit\" > </i>\r\n\t\t\t</>\r\n\t\t);\r\n\t};\r\n\tconst openEditForm = (data) => {\r\n\t\teditFormDetails(data)\r\n\t\tsetIsEditFormOpen(true);\r\n\t};\r\n\tfunction editFormDetails(data) {\r\n\r\n\t\tsetUnitNameError('');\r\n\t\tsetShortNameError('');\r\n\t\tsetGroupError('');\r\n\t\tsetDivisionError('');\r\n\t\tsetTinNoError('');\r\n\t\tsetRegNoError('');\r\n\t\tsetAddressLine1Error('');\r\n\t\tsetCityError('');\r\n\t\tsetStateError('');\r\n\t\tsetPinNoError('');\r\n\t\tsetContactNoError('');\r\n\t\tsetMailIdError('');\r\n\r\n\r\n\r\n\t\tsetunitName(data.Unit_Full_Name)\r\n\t\tsetShortName(data.Unit_Short_Name)\r\n\t\tsetGroup(data.Group_Id)\r\n\t\tsetdivision(data.Division_Id)\r\n\t\tsetTinNo(data.Tin_Num)\r\n\t\tsetRegNo(data.Reg_Num)\r\n\t\tsetAddressLine1(data.Address_Line_1)\r\n\t\tsetCity(data.City)\r\n\t\tsetState(data.State)\r\n\t\tsetPinNO(data.Pin_Code)\r\n\t\tsetContactNo(data.Contact_No)\r\n\t\tsetMailId(data.Email_Id)\r\n\t\tsetUnitId(data.Unit_Id)\r\n\t}\r\n\tconst closeEditForm = () => {\r\n\t\tsetIsEditFormOpen(false);\r\n\t};\r\n\r\n\t// Delete Unit Records\r\n\r\n\tconst deleteUnitRecord = (data) => {\r\n\t\tif (window.confirm(\"Are you sure to delete the Company Unit ?\")) {\r\n\t\t\tlet payload = {\r\n\t\t\t\t\"Unit_Short_Name\": data.Unit_Short_Name,\r\n\t\t\t\t\"Unit_Id\": data.Unit_Id\r\n\t\t\t}\r\n\t\t\ttrackPromise(unitService.deleteCompanyUnits({ \"data\": [payload] }).then((response) => {\r\n\t\t\t\t//check login response\r\n\t\t\t\tif (response.status === 200) {\r\n\t\t\t\t\tgetCompanyUnitData()\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\talert(response.data.message);\r\n\t\t\t\t}\r\n\r\n\t\t\t}).catch((error) => {\r\n\t\t\t\t//console.log(error.response.data.error)\r\n\t\t\t\talert(error.response.data.error);\r\n\t\t\t})\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tconst handleEditUnit = (e) => {\r\n\r\n\t\te.preventDefault();\r\n\t\tlet isValid = true;\r\n\r\n\t\tif (!unitName) {\r\n\t\t\tsetUnitNameError('Unit Name is required');\r\n\t\t\tisValid = false;\r\n\t\t} else {\r\n\t\t\tsetUnitNameError('');\r\n\t\t}\r\n\r\n\t\tif (!shortName) {\r\n\t\t\tsetShortNameError('Short Name is required');\r\n\t\t\tisValid = false;\r\n\t\t} else if (/[^a-zA-Z0-9]/.test(shortName)) {\r\n\t\t\tsetShortNameError('Short Name cannot contain spaces or special characters');\r\n\t\t\tisValid = false;\r\n\t\t} else {\r\n\t\t\tsetShortNameError('');\r\n\t\t}\r\n\r\n\t\tif (!group) {\r\n\t\t\tsetGroupError('Group is required');\r\n\t\t\tisValid = false;\r\n\t\t} else {\r\n\t\t\tsetGroupError('');\r\n\t\t}\r\n\r\n\t\tif (!division) {\r\n\t\t\tsetDivisionError('Division is required');\r\n\t\t\tisValid = false;\r\n\t\t} else {\r\n\t\t\tsetDivisionError('');\r\n\t\t}\r\n\r\n\t\tif (!tinNo) {\r\n\t\t\tsetTinNoError('TIN NO. should be 11 digits');\r\n\t\t\tisValid = false;\r\n\t\t} else if (!handleTinValidation(tinNo) && tinNo.length != '11') {\r\n\t\t\tsetTinNoError('TIN NO. should be 11 digits');\r\n\t\t\tisValid = false;\r\n\t\t} else {\r\n\t\t\tsetTinNoError('');\r\n\t\t}\r\n\r\n\t\tif (!regNo) {\r\n\t\t\tsetRegNoError('Registration No is required');\r\n\t\t\tisValid = false;\r\n\t\t} else if (!/^[a-zA-Z0-9]+$/.test(regNo)) {\r\n\t\t\tsetRegNoError('Registration No must contain only alphanumeric characters');\r\n\t\t\tisValid = false;\r\n\t\t} else {\r\n\t\t\tsetRegNoError('');\r\n\t\t}\r\n\r\n\t\tif (!addressLine1) {\r\n\t\t\tsetAddressLine1Error('Address is required');\r\n\t\t\tisValid = false;\r\n\t\t} else {\r\n\t\t\tsetAddressLine1Error('');\r\n\t\t}\r\n\r\n\t\tif (!city) {\r\n\t\t\tsetCityError('City is required');\r\n\t\t\tisValid = false;\r\n\t\t} else {\r\n\t\t\tsetCityError('');\r\n\t\t}\r\n\r\n\t\tif (!state) {\r\n\t\t\tsetStateError('State is required');\r\n\t\t\tisValid = false;\r\n\t\t} else {\r\n\t\t\tsetStateError('');\r\n\t\t}\r\n\r\n\t\tif (!pinNo) {\r\n\t\t\tsetPinNoError('Pin Number is required');\r\n\t\t\tisValid = false;\r\n\t\t} else if (!/^\\d{6}$/.test(pinNo)) {\r\n\t\t\tsetPinNoError('Pin Number must be a 6-digit number');\r\n\t\t\tisValid = false;\r\n\t\t} else {\r\n\t\t\tsetPinNoError('');\r\n\t\t}\r\n\r\n\t\tif (!contactNo) {\r\n\t\t\tsetContactNoError('Contact Number is required');\r\n\t\t\tisValid = false;\r\n\t\t} else if (!/^[6789]\\d{9}$/.test(contactNo)) {\r\n\t\t\tsetContactNoError('Please enter a valid 10-digit Indian mobile number');\r\n\t\t\tisValid = false;\r\n\t\t} else {\r\n\t\t\tsetContactNoError('');\r\n\t\t}\r\n\r\n\r\n\r\n\t\tif (!mailId) {\r\n\t\t\tsetMailIdError('Mail id is required');\r\n\t\t\tisValid = false;\r\n\t\t} else if (!/\\S+@\\S+\\.\\S+/.test(mailId)) { // Check if email format is invalid\r\n\t\t\tsetMailIdError('Invalid email format');\r\n\t\t\tisValid = false;\r\n\t\t} else {\r\n\t\t\tsetMailIdError('');\r\n\t\t}\r\n\r\n\t\tif (!isValid) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tlet payload = {\r\n\t\t\t\"Unit_Full_Name\": unitName,\r\n\t\t\t\"Unit_Short_Name\": shortName,\r\n\t\t\t\"Group_Id\": group,\r\n\t\t\t\"Division_Id\": division,\r\n\t\t\t\"Tin_Num\": tinNo,\r\n\t\t\t\"Reg_Num\": regNo,\r\n\t\t\t\"Address_Line_1\": addressLine1,\r\n\t\t\t\"City\": city,\r\n\t\t\t\"State\": state,\r\n\t\t\t\"Pin_Code\": pinNo,\r\n\t\t\t\"Contact_No\": contactNo,\r\n\t\t\t\"Email_Id\": mailId,\r\n\t\t\t\"Unit_Id\": unitId\r\n\t\t}\r\n\r\n\t\ttrackPromise(unitService.editCompanyUnits({ \"data\": [payload] }).then((response) => {\r\n\t\t\t//check login response\r\n\t\t\tif (response.status === 200 && response.data.data.status == \"success\") {\r\n\t\t\t\t// alert(response.data.result)\r\n\t\t\t\tgetCompanyUnitData()\r\n\t\t\t\tcloseEditForm()\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\talert(response.data.data.result);\r\n\t\t\t}\r\n\r\n\t\t}).catch((error) => {\r\n\t\t\t//console.log(error.response.data.error)\r\n\t\t\talert(error.response.data.error);\r\n\t\t})\r\n\t\t);\r\n\r\n\t}\r\n\r\n\treturn <>\r\n\t\t<MDBCol size='1' style={{ width: \"13%\" }} className='no-pad-right'>\r\n\t\t\t<MDBTabs className='flex-column text-center vertical-tab'>\r\n\t\t\t\t<MDBTabsItem className=\"vertical-link\">\r\n\t\t\t\t\t<MDBTabsLink onClick={() => handleVerticalClick('tabV1')} active={verticalActive === 'tabV1'}>\r\n\t\t\t\t\t\tBaseline\r\n\t\t\t\t\t</MDBTabsLink>\r\n\t\t\t\t</MDBTabsItem>\r\n\t\t\t</MDBTabs>\r\n\t\t</MDBCol>\r\n\t\t<MDBCol size='11' style={{ width: \"87%\" }} className='no-pad-left'>\r\n\t\t\t<MDBTabsContent className='unit-tab-content'>\r\n\t\t\t\t<MDBTabsPane show={verticalActive === 'tabV1'}>\r\n\t\t\t\t\t<div className='row'>\r\n\t\t\t\t\t\t<div className='col-8'>\r\n\t\t\t\t\t\t\t<h1 className='h1'> Company Units </h1>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='col-4 text-right'>\r\n\t\t\t\t\t\t\t<Button className='primary-btn mt-10' onClick={() => { setShow(true); stateValues() }}>\r\n\t\t\t\t\t\t\t\t<i className='fa fa-plus fa-white'> </i> Unit\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t<UnitForm\r\n\t\t\t\t\t\t\t\tshow={show}\r\n\t\t\t\t\t\t\t\thandleClose={handleClose}\r\n\t\t\t\t\t\t\t\thandleSubmit={handleUnitSetup}\r\n\t\t\t\t\t\t\t\tunitName={unitName} setUnitName={setunitName} unitNameError={unitNameError}\r\n\t\t\t\t\t\t\t\taddressLine1={addressLine1} setAddressLine1={setAddressLine1} addressLine1Error={addressLine1Error}\r\n\t\t\t\t\t\t\t\tstate={state} setState={setState} stateList={stateList}\r\n\t\t\t\t\t\t\t\tdivision={division} setDivision={setdivision} divisionError={divisionError}\r\n\t\t\t\t\t\t\t\ttinNo={tinNo} setTinNo={setTinNo} tinNoError={tinNoError}\r\n\t\t\t\t\t\t\t\tregNo={regNo} setRegNo={setRegNo} regNoError={regNoError}\r\n\t\t\t\t\t\t\t\tshortName={shortName} setShortName={setShortName} shortNameError={shortNameError}\r\n\t\t\t\t\t\t\t\tcity={city} setCity={setCity} cityError={cityError}\r\n\t\t\t\t\t\t\t\tpinNo={pinNo} setPinNO={setPinNO} pinNoError={pinNoError}\r\n\t\t\t\t\t\t\t\tgroup={group} setGroup={setGroup} groupError={groupError}\r\n\t\t\t\t\t\t\t\tmailId={mailId} setMailId={setMailId} mailIdError={mailIdError}\r\n\t\t\t\t\t\t\t\tcontactNo={contactNo} setContactNo={setContactNo} contactNoError={contactNoError}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='col-12'>\r\n\r\n\t\t\t\t\t\t\t<CompanyUnitTable defaultPageSize={10} data={data} openEditForm={openEditForm} deleteUnitRecord={deleteUnitRecord} />\r\n\t\t\t\t\t\t\t<UnitForm\r\n\t\t\t\t\t\t\t\tshow={isEditFormOpen}\r\n\t\t\t\t\t\t\t\thandleClose={closeEditForm}\r\n\t\t\t\t\t\t\t\thandleSubmit={handleEditUnit}\r\n\t\t\t\t\t\t\t\tunitName={unitName} setUnitName={setunitName} unitNameError={unitNameError}\r\n\t\t\t\t\t\t\t\taddressLine1={addressLine1} setAddressLine1={setAddressLine1} addressLine1Error={addressLine1Error}\r\n\t\t\t\t\t\t\t\tstate={state} setState={setState} stateList={stateList}\r\n\t\t\t\t\t\t\t\tdivision={division} setDivision={setdivision} divisionError={divisionError}\r\n\t\t\t\t\t\t\t\ttinNo={tinNo} setTinNo={setTinNo} tinNoError={tinNoError}\r\n\t\t\t\t\t\t\t\tregNo={regNo} setRegNo={setRegNo} regNoError={regNoError}\r\n\t\t\t\t\t\t\t\tshortName={shortName} setShortName={setShortName} shortNameError={shortNameError}\r\n\t\t\t\t\t\t\t\tcity={city} setCity={setCity} cityError={cityError}\r\n\t\t\t\t\t\t\t\tpinNo={pinNo} setPinNO={setPinNO} pinNoError={pinNoError}\r\n\t\t\t\t\t\t\t\tgroup={group} setGroup={setGroup} groupError={groupError}\r\n\t\t\t\t\t\t\t\tmailId={mailId} setMailId={setMailId} mailIdError={mailIdError}\r\n\t\t\t\t\t\t\t\tcontactNo={contactNo} setContactNo={setContactNo} contactNoError={contactNoError}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</MDBTabsPane>\r\n\t\t\t</MDBTabsContent>\r\n\t\t</MDBCol>\r\n\r\n\t</>\r\n}","/**\r\n * owner : \r\n * author : \r\n */\r\nimport api from \"./interceptor\";\r\n\r\nclass userService {\r\n\r\n    saveCompanyUsers(payload) {\r\n      const apiUrl = 'http://3.92.91.120:4000'; // Read base URL from environment\r\n      return api.post(`${apiUrl}/api/saveCompanyUsers`, payload);\r\n    }\r\n\r\n    editCompanyUsers(payload) {\r\n      const apiUrl = 'http://3.92.91.120:4000'; // Read base URL from environment\r\n      return api.post(`${apiUrl}/api/editCompanyUsers`, payload);\r\n    }\r\n\r\n    deleteCompanyUsers(payload) {\r\n      const apiUrl = 'http://3.92.91.120:4000'; // Read base URL from environment\r\n      return api.post(`${apiUrl}/api/deleteCompanyUsers`, payload);\r\n    }\r\n\r\n    getCompanyUsers() {\r\n      const apiUrl = 'http://3.92.91.120:4000'; // Read base URL from environment\r\n      return api\r\n        .get(`${apiUrl}/api/getCompanyUsers`)\r\n        .then((response) => {\r\n          return response;\r\n        })\r\n        .catch((err) => {\r\n          console.error(\"Error fetching company users:\", err);\r\n        });\r\n    }\r\n}\r\n\r\nexport default new userService();\r\n","import React from 'react'\r\nimport userService from \"../../../../services/userService\";\r\nimport { trackPromise } from 'react-promise-tracker';\r\nimport { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport { useTable } from 'react-table';\r\n\r\nexport default function CompanyUserTable(props) {\r\n\t//const [data, setData] = useState([])\r\n    let data = props.data\r\n\t\r\n\tconst columns = React.useMemo(\r\n\t\t() => [\r\n\t\t  \r\n\t\t  {\r\n\t\t\tHeader: 'User Name',\r\n\t\t\taccessor: 'User_Name',\r\n\t\t  },\r\n\t\t  {\r\n\t\t\tHeader: 'Employee ID',\r\n\t\t\taccessor: 'User_Employee_Id',\r\n\t\t  },\r\n\t\t  {\r\n\t\t\tHeader: 'Unit Name',\r\n\t\t\taccessor: 'Unit_Short_Name',\r\n\t\t  },\r\n\t\t  {\r\n\t\t\tHeader: 'Department',\r\n\t\t\taccessor: 'Department_Id',\r\n\t\t  },\r\n\t\t  {\r\n\t\t\tHeader: 'Designation',\r\n\t\t\taccessor: 'Designation_Id',\r\n\t\t  },\r\n\t\t  {\r\n\t\t\tHeader: 'Contact No.',\r\n\t\t\taccessor: 'Mobile_Num',\r\n\t\t  },\r\n\t\t  {\r\n\t\t\tHeader: 'E-Mail',\r\n\t\t\taccessor: 'Mail_Id',\r\n\t\t  },\r\n\t\t  {\r\n\t\t\tHeader: 'Role',\r\n\t\t\taccessor: 'User_Role',\r\n\t\t  },\r\n\t\t  {\r\n\t\t\tHeader: 'Actions',\r\n\t\t\taccessor: 'action', // You can set a dummy accessor for the action column\r\n\t\t\tCell: ({ row }) => (\r\n\t\t\t\t[\r\n\t\t\t\t\t<i className='fa fa-edit pointer' onClick={(data) => {\r\n\t\t\t\t\t  props.openEditForm(row.original)\r\n\t\t\t\t\t}} title='Edit'> </i>,  \r\n\t\t\t\t\t<i className='fa fa-trash ml-15 pointer' onClick={(data) => {\r\n\t\t\t\t\t\tprops.deleteUserRecord(row.original)\r\n\t\t\t\t\t  }} title='Delete' > </i>\r\n\t\t\t\t]\r\n\t\t\t),\r\n\t\t  },\r\n\t\t],\r\n\t\t[]\r\n\t  );\r\n\t\t\r\n\t  const {\r\n\t\tgetTableProps,\r\n\t\tgetTableBodyProps,\r\n\t\theaderGroups,\r\n\t\trows,\r\n\t\tprepareRow,\r\n\t  } = useTable({\r\n\t\tcolumns,\r\n\t\tdata,\r\n\t  });\r\n\t\r\n\t\r\n  return (\r\n    <div className='mt-4'>\r\n      <table {...getTableProps()} className=\"table\">\r\n        <thead>\r\n          {headerGroups.map((headerGroup) => (\r\n            <tr {...headerGroup.getHeaderGroupProps()}>\r\n              {headerGroup.headers.map((column) => (\r\n                <th {...column.getHeaderProps()}>{column.render('Header')}</th>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </thead>\r\n        <tbody {...getTableBodyProps()}>\r\n          {rows.map((row) => {\r\n            prepareRow(row);\r\n            return (\r\n              <tr {...row.getRowProps()}>\r\n                {row.cells.map((cell) => {\r\n                  return (\r\n                    <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\r\n                  );\r\n                })}\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  )\r\n}\r\n","/**\r\n * owner : \r\n * author :\r\n */\r\n\r\nimport { useEffect, useState } from 'react';\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\nimport Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Form from 'react-bootstrap/Form';\r\n\r\nimport './UserSetUp.scss';\r\n\r\nimport {\r\n    MDBTabs,\r\n    MDBTabsItem,\r\n    MDBTabsLink,\r\n    MDBTabsContent,\r\n    MDBTabsPane,\r\n    MDBRow,\r\n    MDBCol,\r\n    MDBInput\r\n} from 'mdb-react-ui-kit';\r\n\r\n\r\nimport userService from \"../../../../services/userService\";\r\nimport { trackPromise } from 'react-promise-tracker';\r\nimport CompanyUserTable from './CompanyUserTable';\r\nimport adminService from \"../../../../services/adminService\"\r\n\r\nexport default function UserSetUp() {\r\n\r\n    const [show, setShow] = useState(false);\r\n    const handleClose = () => setShow(false);\r\n\r\n    const [verticalActive, setVerticalActive] = useState('tabV1');\r\n    const [userName, setUserName] = useState(\"\")\r\n    const [userNameError, setUserNameError] = useState(\"\")\r\n\r\n    const [empId, setEmpId] = useState(\"\")\r\n    const [empIdError, setEmpIdError] = useState(\"\")\r\n\r\n    const [department, setDepartment] = useState(\"\")\r\n    const [departmentError, setDepartmentError] = useState(\"\")\r\n    \r\n    const [designation, setDesignation] = useState(\"\")\r\n    const [designationError, setDesignationError] = useState(\"\")\r\n\r\n    const [mobileNumber, setMobileNumber] = useState(\"\")\r\n    const [mobileNumberError, setMobileNumberError] = useState(\"\")\r\n\r\n    const [personalMaildId, setPersonalMaildId] = useState(\"\")\r\n    const [personalMaildIdError, setPersonalMaildIdError] = useState(\"\")\r\n\r\n    const [userLevel, setUserLevel] = useState(\"\")\r\n    const [userLevelError, setUserLevelError] = useState(\"\")\r\n\r\n    const [status, setStatus] = useState(\"\")\r\n    const [statusError, setStatusError] = useState(\"\")\r\n\r\n    const [loginId, setLoginId] = useState(\"\")\r\n    const [loginIdError, setLoginIdError] = useState(\"\")\r\n\r\n    const [basicData, setBasicData] = useState([])\r\n    const [basicDesgination, setbasicDesgination] = useState([])\r\n    const [basicDepartment, setBasicDepartment] = useState([])\r\n\r\n    const [selectedUnit, setSelectedUnit] = useState('');\r\n    const [selectedUnitError, setSelectedUnitError] = useState('');\r\n\r\n    const [data, setData] = useState([])\r\n    const [isEditFormOpen, setIsEditFormOpen] = useState(false);\r\n\r\n    const handleVerticalClick = (value) => {\r\n        if (value === verticalActive) {\r\n            return;\r\n        }\r\n        setVerticalActive(value);\r\n    };\r\n\r\n    const getBasicDetails = () => {\r\n        trackPromise(\r\n            adminService.getBasicDetails().then((response) => {\r\n                setBasicData(response.data[0].data[0].data.units)\r\n                setbasicDesgination(response.data[0].data[0].data.designation)\r\n                setBasicDepartment(response.data[0].data[0].data.department)\r\n            })\r\n        );\r\n    }\r\n\r\n    useEffect(() => {\r\n        getBasicDetails()\r\n    }, [])\r\n    // function stateValues() {\r\n\r\n    // }\r\n\r\n\r\n    const handleUnitSetup = (e) => {\r\n        e.preventDefault();\r\n        let isValid = true;\r\n\t\tif (!selectedUnit) {\r\n\t\t\tsetSelectedUnitError('Unit is required');\r\n\t\t\tisValid = false;\r\n\t\t} else {\r\n\t\t\tsetSelectedUnitError('');\r\n\t\t}\r\n\r\n\t\tif (!userName) {\r\n            setUserNameError('User Name is required');\r\n            isValid = false;\r\n        } else if (!/^[a-zA-Z0-9_ ]{3,20}$/.test(userName)) {\r\n            setUserNameError('User Name must be between 3 and 20 characters long and can only contain letters, numbers, underscores, and spaces');\r\n            isValid = false;\r\n        } else {\r\n            setUserNameError('');\r\n        }\r\n        \r\n\r\n\t\tif (!empId) {\r\n            setEmpIdError('Employee ID is required');\r\n            isValid = false;\r\n        } else if (!/^[a-zA-Z0-9]+$/.test(empId)) {\r\n            setEmpIdError('Employee ID must contain only alphanumeric characters');\r\n            isValid = false;\r\n        } else {\r\n            setEmpIdError('');\r\n        }\r\n\r\n\t\tif (!loginId) {\r\n\t\t\tsetLoginIdError('Login Id is required');\r\n\t\t\tisValid = false;\r\n\t\t} else {\r\n\t\t\tsetLoginIdError('');\r\n\t\t}\r\n\r\n        if (!department) {\r\n\t\t\tsetDepartmentError('Department is required');\r\n\t\t\tisValid = false;\r\n\t\t} else {\r\n\t\t\tsetDepartmentError('');\r\n\t\t}\r\n\r\n\t\tif (!designation) {\r\n\t\t\tsetDesignationError('Designation is required');\r\n\t\t\tisValid = false;\r\n\t\t} else {\r\n\t\t\tsetDesignationError('');\r\n\t\t}\r\n\r\n\t\tif (!mobileNumber) {\r\n            setMobileNumberError('Mobile Number is required');\r\n            isValid = false;\r\n        } else if (!/^[6-9]\\d{9}$/.test(mobileNumber)) {\r\n            setMobileNumberError('Invalid Indian mobile number');\r\n            isValid = false;\r\n        } else {\r\n            setMobileNumberError('');\r\n        }\r\n\r\n\t\tif (!personalMaildId) {\r\n            setPersonalMaildIdError('Mail ID is required');\r\n            isValid = false;\r\n        } else if (!/\\S+@\\S+\\.\\S+/.test(personalMaildId)) { // Check if email format is invalid\r\n            setPersonalMaildIdError('Invalid email format');\r\n            isValid = false;\r\n        } else {\r\n            setPersonalMaildIdError('');\r\n        }\r\n\r\n        if (!status) {\r\n\t\t\tsetStatusError('Status is required');\r\n\t\t\tisValid = false;\r\n\t\t} else {\r\n\t\t\tsetStatusError('');\r\n\t\t}\r\n\r\n\t\tif (!userLevel) {\r\n\t\t\tsetUserLevelError('User Level is required');\r\n\t\t\tisValid = false;\r\n\t\t} else {\r\n\t\t\tsetUserLevelError('');\r\n\t\t}\r\n\r\n\t\tif (!isValid) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n        let payload = {\r\n            \"Unit_Short_Name\": selectedUnit,\r\n            \"User_Name\": userName,\r\n            \"User_Employee_Id\": empId,\r\n            \"User_Login_ID\": loginId,\r\n            \"Department_Id\": department,\r\n            \"Designation_Id\": designation,\r\n            \"Mobile_Num\": mobileNumber,\r\n            \"Mail_Id\": personalMaildId,\r\n            \"status\": status,\r\n            \"User_Role\": userLevel\r\n        }\r\n        trackPromise(userService.saveCompanyUsers({ \"data\": [payload] }).then((response) => {\r\n            //check login response\r\n            if (response.status == 200 && response.data.data.status == \"success\") {\r\n                // alert(response.data.result);\r\n                getCompanyUserData()\r\n                handleClose()\r\n            }\r\n            else {\r\n                alert(response.data.data.result);\r\n            }\r\n\r\n        }).catch((error) => {\r\n            //console.log(error.response.data.error)\r\n            alert(error.response.data.error);\r\n        })\r\n        );\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n    }, [])\r\n\r\n    const getCompanyUserData = () => {\r\n        trackPromise(\r\n            userService.getCompanyUsers().then((response) => {\r\n                setData(response.data.Company_Users)\r\n            })\r\n        );\r\n    }\r\n    useEffect(() => {\r\n        getCompanyUserData()\r\n    }, [])\r\n\r\n    const pagination = paginationFactory({\r\n        page: 1,\r\n        sizePerPage: 10,\r\n        lastPageText: \">>\",\r\n        firstPageText: \"<<\",\r\n        nextPageText: \">\",\r\n        prePageText: \"<\",\r\n        showTotal: true,\r\n        alwaysShowAllBtns: true,\r\n        hideSizePerPage: true,\r\n        onPageChange: function (page, sizePerPage) { },\r\n        onSizePerPageChange: function (page, sizePerPage) { },\r\n    });\r\n    const iconActionHandler = (cell, row, rowIndex) => {\r\n        return (\r\n            <>\r\n                <i className=\"fas fa-edit action-icon\" title=\"Edit\" > </i>\r\n            </>\r\n        );\r\n    };\r\n\r\n   \r\n\r\n    const handleUserLevel = (e) => {\r\n        setUserLevel(e.target.value);\r\n    };\r\n\r\n    const handleStatus = (e) => {\r\n        setStatus(e.target.value);\r\n    };\r\n    function editFormDetails (data) {\r\n        setSelectedUnit(data.Unit_Short_Name)\r\n        setUserName(data.User_Name)\r\n        setEmpId(data.User_Employee_Id)\r\n        setDepartment(data.Department_Id)\r\n        setDesignation(data.Designation_Id)\r\n        setMobileNumber(data.Mobile_Num)\r\n        setPersonalMaildId(data.Mail_Id)\r\n        setUserLevel(data.User_Role)\r\n        setStatus(data.Status)\r\n        setLoginId(data.User_Login_ID)\r\n        \r\n    }\r\n    function settingValuesToEmpty () {\r\n        setSelectedUnit(\"\")\r\n        setUserName(\"\")\r\n        setEmpId(\"\")\r\n        setDepartment(\"\")\r\n        setDesignation(\"\")\r\n        setMobileNumber(\"\")\r\n        setPersonalMaildId(\"\")\r\n        setUserLevel()\r\n        setStatus(\"\")\r\n        setLoginId(\"\")\r\n\r\n        setSelectedUnitError('');\r\n        setUserNameError('');\r\n        setEmpIdError('');\r\n        setLoginIdError('');\r\n\t\tsetDepartmentError('');\r\n        setDesignationError('');\r\n        setMobileNumberError('');\r\n        setPersonalMaildIdError('');\r\n        setStatusError('');\r\n\t\tsetUserLevelError('');\r\n    }\r\n    const openEditForm = (data) => {\r\n        \r\n        setSelectedUnitError('');\r\n        setUserNameError('');\r\n        setEmpIdError('');\r\n        setLoginIdError('');\r\n\t\tsetDepartmentError('');\r\n        setDesignationError('');\r\n        setMobileNumberError('');\r\n        setPersonalMaildIdError('');\r\n        setStatusError('');\r\n\t\tsetUserLevelError('');\r\n\r\n        editFormDetails(data)\r\n        setIsEditFormOpen(true);\r\n    };\r\n\r\n    const closeEditForm = () => {\r\n        setIsEditFormOpen(false);\r\n    };\r\n    function handleForm() {\r\n        settingValuesToEmpty()\r\n        setShow(true)\r\n    }\r\n\r\n    const handleEditUserDetails = (e) => {\r\n        e.preventDefault();\r\n        let isValid = true;\r\n\t\tif (!selectedUnit) {\r\n\t\t\tsetSelectedUnitError('Unit is required');\r\n\t\t\tisValid = false;\r\n\t\t} else {\r\n\t\t\tsetSelectedUnitError('');\r\n\t\t}\r\n\r\n\t\tif (!userName) {\r\n            setUserNameError('User Name is required');\r\n            isValid = false;\r\n        } else if (!/^[a-zA-Z0-9_ ]{3,20}$/.test(userName)) {\r\n            setUserNameError('User Name must be between 3 and 20 characters long and can only contain letters, numbers, underscores, and spaces');\r\n            isValid = false;\r\n        } else {\r\n            setUserNameError('');\r\n        }\r\n        \r\n\r\n\t\tif (!empId) {\r\n            setEmpIdError('Employee ID is required');\r\n            isValid = false;\r\n        } else if (!/^[a-zA-Z0-9]+$/.test(empId)) {\r\n            setEmpIdError('Employee ID must contain only alphanumeric characters');\r\n            isValid = false;\r\n        } else {\r\n            setEmpIdError('');\r\n        }\r\n\r\n\t\tif (!loginId) {\r\n\t\t\tsetLoginIdError('Login Id is required');\r\n\t\t\tisValid = false;\r\n\t\t} else {\r\n\t\t\tsetLoginIdError('');\r\n\t\t}\r\n\r\n        if (!department) {\r\n\t\t\tsetDepartmentError('Department is required');\r\n\t\t\tisValid = false;\r\n\t\t} else {\r\n\t\t\tsetDepartmentError('');\r\n\t\t}\r\n\r\n\t\tif (!designation) {\r\n\t\t\tsetDesignationError('Designation is required');\r\n\t\t\tisValid = false;\r\n\t\t} else {\r\n\t\t\tsetDesignationError('');\r\n\t\t}\r\n\r\n\t\tif (!mobileNumber) {\r\n            setMobileNumberError('Mobile Number is required');\r\n            isValid = false;\r\n        } else if (!/^[6-9]\\d{9}$/.test(mobileNumber)) {\r\n            setMobileNumberError('Invalid Indian mobile number');\r\n            isValid = false;\r\n        } else {\r\n            setMobileNumberError('');\r\n        }\r\n\r\n\t\tif (!personalMaildId) {\r\n            setPersonalMaildIdError('Mail ID is required');\r\n            isValid = false;\r\n        } else if (!/\\S+@\\S+\\.\\S+/.test(personalMaildId)) { // Check if email format is invalid\r\n            setPersonalMaildIdError('Invalid email format');\r\n            isValid = false;\r\n        } else {\r\n            setPersonalMaildIdError('');\r\n        }\r\n\r\n        if (!status) {\r\n\t\t\tsetStatusError('Status is required');\r\n\t\t\tisValid = false;\r\n\t\t} else {\r\n\t\t\tsetStatusError('');\r\n\t\t}\r\n\r\n\t\tif (!userLevel) {\r\n\t\t\tsetUserLevelError('User Level is required');\r\n\t\t\tisValid = false;\r\n\t\t} else {\r\n\t\t\tsetUserLevelError('');\r\n\t\t}\r\n\r\n\t\tif (!isValid) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n        let payload = {\r\n            \"Unit_Short_Name\": selectedUnit,\r\n            \"User_Name\": userName,\r\n            \"User_Employee_Id\": empId,\r\n            \"User_Login_ID\": loginId,\r\n            \"Department_Id\": department,\r\n            \"Designation_Id\": designation,\r\n            \"Mobile_Num\": mobileNumber,\r\n            \"Mail_Id\": personalMaildId,\r\n            \"status\": status,\r\n            \"User_Role\": userLevel\r\n        }\r\n        trackPromise(userService.editCompanyUsers({ \"data\": [payload] }).then((response) => {\r\n            //check login response\r\n            if (response.status == 200 && response.data.data.status == \"success\") {\r\n                // alert(response.data.result);\r\n                getCompanyUserData()\r\n                closeEditForm()\r\n            }\r\n            else {\r\n                alert(response.data.data.result);\r\n            }\r\n\r\n        }).catch((error) => {\r\n            //console.log(error.response.data.error)\r\n            alert(error.response.data.error);\r\n        })\r\n        );\r\n    }\r\n\r\n    const deleteUserRecord = (data) => {\r\n      \r\n        if (window.confirm(\"Are you sure to delete the Company User ?\"))\r\n        { \r\n            let payload = {\r\n                \"User_Employee_Id\":data.User_Employee_Id\r\n                }\r\n                trackPromise(userService.deleteCompanyUsers({ \"data\": [payload] }).then((response) => {\r\n                //check login response\r\n                if (response.status === 200) {\r\n                    getCompanyUserData()\r\n                }\r\n                else {\r\n                    alert(response.data.message);\r\n                }\r\n                \r\n                }).catch((error) => {\r\n                //console.log(error.response.data.error)\r\n                alert(error.response.data.error);\r\n                })\r\n                );   \r\n        }\r\n    };\r\n    \r\n    return <>\r\n        <MDBRow>\r\n            <MDBCol size='1' style={{ width : \"13%\" }} className='no-pad-right'>\r\n                <MDBTabs className='flex-column text-center vertical-tab'>\r\n                    <MDBTabsItem className=\"vertical-link\">\r\n                        <MDBTabsLink onClick={() => handleVerticalClick('tabV1')} active={verticalActive === 'tabV1'}>\r\n                            Baseline\r\n                        </MDBTabsLink>\r\n                    </MDBTabsItem>\r\n                </MDBTabs>\r\n            </MDBCol>\r\n            <MDBCol size='11' style={{ width : \"87%\" }} className='no-pad-left'>\r\n                <MDBTabsContent className='unit-tab-content'>\r\n                    <MDBTabsPane show={verticalActive === 'tabV1'}>\r\n                        <div className='row'>\r\n                        <div className='col-8'>\r\n\t\t\t\t\t\t\t\t<h1 className='h1'> Company Users </h1>\r\n\t\t\t\t\t\t\t</div>\r\n                            <div className='col-4 text-right '>\r\n                                <Button className='primary-btn mt-10' onClick={handleForm}>\r\n                                <i className='fa fa-plus fa-white'> </i> User \r\n                                </Button>\r\n                                <Modal\r\n                                    show={show}\r\n                                    onHide={() => setShow(false)}\r\n                                    dialogClassName=\"modal-50w\"\r\n                                    backdrop=\"static\"\r\n                                    keyboard={false}>\r\n\r\n                                    <Modal.Header closeButton style={{color:'white'}}>\r\n                                        <Modal.Title> Add New User </Modal.Title>\r\n                                    </Modal.Header>\r\n                                    <Modal.Body>\r\n                                        <form onSubmit={handleUnitSetup}>\r\n                                            <div className='row' >\r\n                                        \r\n                                                <div className='col-6'>\r\n\r\n                                                <MDBInput wrapperClass='mb-3' type='text' label='Name' tabindex=\"1\" onChange={(e) => { setUserName(e.target.value) }} value={userName} name=' username' />\r\n                                                {userNameError && <p style={{ color: 'red' }}>{userNameError}</p>}\r\n\r\n                                                <MDBInput wrapperClass='mb-3' type='email' label='E-Mail ID' tabindex=\"3\" onChange={(e) => { setPersonalMaildId(e.target.value) }} value={personalMaildId} name='PersonalMaildId' />\r\n                                                { personalMaildIdError && <p style={{ color: 'red' }}>{personalMaildIdError}</p>}\r\n\r\n                                                <Form.Select className='mb-3' tabindex=\"5\" onChange={(e) => { setSelectedUnit(e.target.value) }} value={selectedUnit} name=\"selectedUnit\" >\r\n                                                        <option value=''>Select Unit</option>\r\n                                                        {basicData.map((item) => (\r\n                                                            <option key={item.Unit_Id} value={item.Unit_Short_Name}>\r\n                                                                {item.Unit_Full_Name}\r\n                                                            </option>\r\n                                                        ))}\r\n                                                    </Form.Select>\r\n                                                    { selectedUnitError && <p style={{ color: 'red' }}>{selectedUnitError}</p>}\r\n                                                    \r\n                                                <Form.Select className='mb-3' tabindex=\"7\" onChange={(e) => { setDepartment(e.target.value) }} value={department} name=' department' >\r\n                                                        <option> Select Department </option>\r\n                                                        {basicDepartment.map((item) => (\r\n                                                            <option key={item.Department_Id} value={item.Department_Name}>\r\n                                                                {item.Department_Name}\r\n                                                            </option>\r\n                                                        ))}\r\n                                                    </Form.Select>\r\n                                                    { departmentError && <p style={{ color: 'red' }}>{departmentError}</p>}\r\n\r\n                                                    <Form.Select className='mb-3' tabindex=\"9\" onChange={handleStatus} value={status}>\r\n                                                        <option> Select Status </option>\r\n                                                        <option value=\"active\">Active</option>\r\n                                                        <option value=\"inactive\">InActive</option>\r\n                                                    </Form.Select>\r\n                                                    { statusError && <p style={{ color: 'red' }}>{statusError}</p>}\r\n\r\n                                                </div> \r\n\r\n                                                <div className='col-6'>\r\n\r\n                                                <MDBInput wrapperClass='mb-3' type='text' label='Login ID' tabindex=\"2\" onChange={(e) => { setLoginId(e.target.value) }} value={loginId} name='LoginId' />\r\n                                                { loginIdError && <p style={{ color: 'red' }}>{loginIdError}</p>}\r\n                                                  \r\n                                                <MDBInput wrapperClass='mb-3' type='text' tabindex=\"4\" label='Employee ID' onChange={(e) => { setEmpId(e.target.value) }} value={empId} name=' EmpId' />\r\n                                                { empIdError && <p style={{ color: 'red' }}>{empIdError}</p>}\r\n\r\n                                                    <Form.Select className='mb-3' tabindex=\"6\" onChange={(e) => { setDesignation(e.target.value) }} value={designation} name=' designation' >\r\n                                                        <option> Select Designation </option>\r\n                                                        {basicDesgination.map((item) => (\r\n                                                            <option key={item.Devision_Id} value={item.Devision_Name}>\r\n                                                                {item.Devision_Name}\r\n                                                            </option>\r\n                                                        ))}\r\n                                                    </Form.Select>\r\n                                                    { designationError && <p style={{ color: 'red' }}>{designationError}</p>}\r\n\r\n                                                    <Form.Select className='mb-3' tabindex=\"8\" onChange={handleUserLevel} value={userLevel}>\r\n                                                        <option> Select Role </option>\r\n                                                        <option value=\"general\">General</option>\r\n                                                        <option value=\"admin\">Admin</option>\r\n                                                        <option value=\"superAdmin\">Super Admin</option>\r\n                                                    </Form.Select>\r\n                                                    { userLevelError && <p style={{ color: 'red' }}>{userLevelError}</p>}\r\n                                                \r\n                                                    <MDBInput wrapperClass='mb-3' type='number' tabindex=\"10\" label='Contact No.' onChange={(e) => { setMobileNumber(e.target.value) }} value={mobileNumber} name=' mobileNumber' />\r\n                                                    { mobileNumberError && <p style={{ color: 'red' }}>{mobileNumberError}</p>}\r\n                                                </div>\r\n                                            </div>\r\n                                        </form>\r\n\r\n                                    </Modal.Body>\r\n                                    <Modal.Footer>\r\n                                    <Button variant=\"secondary\" onClick={handleClose} style={{ width: '15%' }}>\r\n                                             Cancel \r\n                                        </Button>\r\n                                    <Button variant=\"primary\" type='submit' block onClick={handleUnitSetup} style={{ width: '15%' }}>\r\n                                            Save\r\n                                        </Button>\r\n\r\n                                        \r\n                                        \r\n                                    </Modal.Footer>\r\n                                </Modal>\r\n                            </div>\r\n                            <div className='col-12'>\r\n                                <CompanyUserTable data={data} openEditForm={openEditForm} deleteUserRecord = {deleteUserRecord}/>\r\n                                <Modal show={isEditFormOpen} onHide={closeEditForm} dialogClassName=\"modal-50w\"\r\n                                    backdrop=\"static\">\r\n                                    <Modal.Header closeButton>\r\n                                        <Modal.Title>Edit Company Users </Modal.Title>\r\n                                    </Modal.Header>\r\n                                    <Modal.Body>\r\n                                        <form onSubmit={handleEditUserDetails}>\r\n                                            <div className='row'>\r\n                                                <div className='col-6'>\r\n                                                \r\n                                                <MDBInput wrapperClass='mb-3' label='Name' onChange={(e) => { setUserName(e.target.value) }} value={userName} name=' username' />\r\n                                                {userNameError && <p style={{ color: 'red' }}>{userNameError}</p>}\r\n\r\n                                                <MDBInput wrapperClass='mb-3' label='E-Mail ID' onChange={(e) => { setPersonalMaildId(e.target.value) }} value={personalMaildId} name='PersonalMaildId' />\r\n                                                { personalMaildIdError && <p style={{ color: 'red' }}>{personalMaildIdError}</p>}\r\n\r\n                                                <Form.Select className='mb-3' label='Unit' name=\"Unit\" onChange={(e) => { setSelectedUnit(e.target.value) }} value={selectedUnit}>\r\n                                                    <option value=''>Select Unit</option>\r\n                                                    {basicData.map((item) => (\r\n                                                        <option key={item.Unit_Id} value={item.Unit_Short_Name}>\r\n                                                            {item.Unit_Full_Name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </Form.Select>\r\n                                                { selectedUnitError && <p style={{ color: 'red' }}>{selectedUnitError}</p>}\r\n\r\n                                                    <Form.Select className='mb-3' onChange={(e) => { setDepartment(e.target.value) }} value={department} name='department' >\r\n                                                        <option> Select Department </option>\r\n                                                        {basicDepartment.map((item) => (\r\n                                                            <option key={item.Department_Id} value={item.Department_Name}>\r\n                                                                {item.Department_Name}\r\n                                                            </option>\r\n                                                        ))}\r\n                                                    </Form.Select>\r\n                                                    { departmentError && <p style={{ color: 'red' }}>{departmentError}</p>}\r\n\r\n                                                    <Form.Select className='mb-3' onChange={(e) => { setStatus(e.target.value) }} value={status}>\r\n                                                        <option> Status </option>\r\n                                                        <option value=\"active\">Active</option>\r\n                                                        <option value=\"inactive\">InActive</option>\r\n                                                    </Form.Select>\r\n\r\n                                            \r\n\r\n                                                </div>\r\n                                                <div className='col-6'>\r\n                                                \r\n                                                <MDBInput wrapperClass='mb-3' label='Login ID' onChange={(e) => { setLoginId(e.target.value) }} value={loginId} name='LoginId' />\r\n                                                { loginIdError && <p style={{ color: 'red' }}>{loginIdError}</p>}\r\n\r\n                                                \r\n                                                <MDBInput wrapperClass='mb-3' label='Employee ID' onChange={(e) => { setEmpId(e.target.value) }} value={empId} name=' EmpId' />\r\n                                                { empIdError && <p style={{ color: 'red' }}>{empIdError}</p>}\r\n\r\n                                                \r\n                                                <Form.Select className='mb-3' onChange={(e) => { setDesignation(e.target.value) }} value={designation} name='designation' >\r\n                                                        <option> Select Designation </option>\r\n                                                        {basicDesgination.map((item) => (\r\n                                                            <option key={item.Devision_Id} value={item.Devision_Name}>\r\n                                                                {item.Devision_Name}\r\n                                                            </option>\r\n                                                        ))}\r\n                                                    </Form.Select>\r\n\r\n                                                    { designationError && <p style={{ color: 'red' }}>{designationError}</p>}\r\n\r\n                                                    <Form.Select className='mb-3' onChange={handleUserLevel} value={userLevel}>\r\n                                                        <option> Role </option>\r\n                                                        <option value=\"general\">General</option>\r\n                                                        <option value=\"admin\">Admin</option>\r\n                                                        <option value=\"superAdmin\">Super Admin</option>\r\n                                                    </Form.Select>\r\n                                                    { userLevelError && <p style={{ color: 'red' }}>{userLevelError}</p>}\r\n\r\n                                                    <MDBInput wrapperClass='mb-3' label='Contact No.' onChange={(e) => { setMobileNumber(e.target.value) }} value={mobileNumber} name=' mobileNumber' />\r\n                                                    { mobileNumberError && <p style={{ color: 'red' }}>{mobileNumberError}</p>}\r\n\r\n                                                </div>\r\n                                            </div>\r\n                                        </form>\r\n\r\n                                    </Modal.Body>\r\n                                    <Modal.Footer>\r\n                                        <Button variant=\"secondary\" onClick={closeEditForm}>\r\n                                            Cancel\r\n                                        </Button>\r\n                                        <Button variant=\"primary\" onClick={handleEditUserDetails}>\r\n                                            Save\r\n                                        </Button>\r\n                                    </Modal.Footer>\r\n                                </Modal>\r\n                            </div>\r\n                        </div>\r\n                    </MDBTabsPane>\r\n                </MDBTabsContent>\r\n            </MDBCol>\r\n        </MDBRow>\r\n    </>\r\n}","/**\r\n * owner : \r\n * author :\r\n */\r\nimport api from \"./interceptor\";\r\n\r\nclass buyerService {\r\n\r\n    saveCompanyBuyers(payload) {\r\n      const apiUrl = 'http://3.92.91.120:4000'; // Read base URL from environment\r\n      return api.post(`${apiUrl}/api/saveBuyers`, payload);\r\n    }\r\n\r\n    editCompanyBuyers(payload) {\r\n      const apiUrl = 'http://3.92.91.120:4000'; // Read base URL from environment\r\n      return api.post(`${apiUrl}/api/editBuyers`, payload);\r\n    }\r\n\r\n    deleteCompanyBuyers(payload) {\r\n      const apiUrl = 'http://3.92.91.120:4000'; // Read base URL from environment\r\n      return api.post(`${apiUrl}/api/deleteBuyers`, payload);\r\n    }\r\n\r\n    getCompanyBuyers() {\r\n      const apiUrl = 'http://3.92.91.120:4000'; // Read base URL from environment\r\n      return api\r\n        .get(`${apiUrl}/api/getBuyers`)\r\n        .then((response) => {\r\n          return response;\r\n        })\r\n        .catch((err) => {\r\n          console.error(\"Error fetching buyers:\", err);\r\n        });\r\n    }\r\n}\r\n\r\nexport default new buyerService();\r\n","import React from 'react'\r\nimport { useTable } from 'react-table';\r\n\r\nexport default function BuyerGroupTable(props) {\r\n\t\r\n\t// const [data, setData] = useState([])\r\n    let data = props.data\r\n\t\r\n\tconst columns = React.useMemo(\r\n\t\t() => [\r\n\t\t  {\r\n\t\t\tHeader: 'Buyer Group Name',\r\n\t\t\taccessor: 'Buyer_Group_Name',\r\n\t\t  },\r\n\t\t  {\r\n\t\t\tHeader: 'Buyer',\r\n\t\t\taccessor: 'Buyer_Name',\r\n\t\t  },\r\n\t\t  {\r\n\t\t\tHeader: 'E-Mail',\r\n\t\t\taccessor: 'Buyer_Email_Id',\r\n\t\t  },\r\n\t\t  {\r\n\t\t\tHeader: 'Contact No.',\r\n\t\t\taccessor: 'Buyer_Contact_No',\r\n\t\t  },\r\n\t\t  {\r\n\t\t\tHeader: 'Actions',\r\n\t\t\taccessor: 'action', // You can set a dummy accessor for the action column\r\n\t\t\tCell: ({ row }) => (\r\n\t\t\t\t[\r\n\t\t\t\t\t<i className='fa fa-edit pointer' onClick={(data) => {\r\n\t\t\t\t\t  props.openEditForm(row.original)\r\n\t\t\t\t\t}} title='Edit'> </i>,  \r\n\t\t\t\t\t<i className='fa fa-trash ml-15 pointer' onClick={(data) => {\r\n\t\t\t\t\t\tprops.deleteBuyerGroupRecord(row.original)\r\n\t\t\t\t\t  }} title='Delete' > </i>\r\n\t\t\t\t]\r\n\t\t\t),\r\n\t\t  },\r\n\t\t],\r\n\t\t[]\r\n\t  );\r\n\t\t\r\n\t  const {\r\n\t\tgetTableProps,\r\n\t\tgetTableBodyProps,\r\n\t\theaderGroups,\r\n\t\trows,\r\n\t\tprepareRow,\r\n\t  } = useTable({\r\n\t\tcolumns,\r\n\t\tdata,\r\n\t  });\r\n\t\r\n\t\r\n  return (\r\n    <div className='mt-4'>\r\n      <table {...getTableProps()} className=\"table\">\r\n        <thead>\r\n          {headerGroups.map((headerGroup) => (\r\n            <tr {...headerGroup.getHeaderGroupProps()}>\r\n              {headerGroup.headers.map((column) => (\r\n                <th {...column.getHeaderProps()}>{column.render('Header')}</th>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </thead>\r\n        <tbody {...getTableBodyProps()}>\r\n          {rows.map((row) => {\r\n            prepareRow(row);\r\n            return (\r\n              <tr {...row.getRowProps()}>\r\n                {row.cells.map((cell) => {\r\n                  return (\r\n                    <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\r\n                  );\r\n                })}\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  )\r\n}\r\n","/**\r\n * owner : \r\n * author :\r\n */\r\n\r\nimport { useEffect, useState } from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Form from 'react-bootstrap/Form';\r\n\r\nimport './dataSet.scss';\r\n\r\nimport buyerService from \"../../../../../services/buyerService\";\r\nimport { trackPromise } from 'react-promise-tracker';\r\nimport BuyerGroupTable from './BuyerGroupTable';\r\nimport adminService from '../../../../../services/adminService';\r\n\r\nimport {\r\n\tMDBInput\r\n} from 'mdb-react-ui-kit';\r\n\r\nexport default function BuyerGroup() {\r\n\r\n\tconst [show, setShow] = useState(false);\r\n\tconst handleClose = () => setShow(false);\r\n\r\n\tconst [selectedBuyerGroup, setSelectedBuyerGroup] = useState('');\r\n\tconst [selectedBuyerGroupError, setSelectedBuyerGroupError] = useState('');\r\n\tconst [buyerId, setBuyerId] = useState('');\r\n\r\n\tconst [buyerName, setBuyerName] = useState(\"\");\r\n\tconst [buyerNameError, setBuyerNameError] = useState(\"\");\r\n\r\n\tconst [contactNumber, setcontactNumber] = useState(\"\");\r\n\tconst [contactNumberError, setContactNumberError] = useState(\"\");\r\n\r\n\tconst [mailId, setMailId] = useState(\"\");\r\n\tconst [mailIdError, setMailIdError] = useState(\"\");\r\n\r\n\tconst [buyerGroupData, setBuyerGroupData] = useState([]);\r\n\tconst [data, setData] = useState([]);\r\n\r\n\tconst [isEditFormOpen, setIsEditFormOpen] = useState(false);\r\n\r\n\tconst closeEditForm = () => {\r\n        setIsEditFormOpen(false);\r\n    };\r\n\r\n\tconst getBasicDetails = () => {\r\n\t\ttrackPromise(\r\n\t\t\tadminService.getBasicDetails().then((response) => {\r\n\t\t\t\tsetBuyerGroupData(response.data[0].data[0].data.buyerGroups)\r\n\t\t\t})\r\n\t\t);\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tgetBasicDetails()\r\n\t}, [])\r\n\r\n\tconst handleBuyerGroupSetup = (e) => {\r\n\t\te.preventDefault();\r\n\t\tlet isValid = true;\r\n\r\n\t\tif (!selectedBuyerGroup) {\r\n\t\t\tsetSelectedBuyerGroupError('Buyer Group is required');\r\n\t\t\tisValid = false;\r\n\t\t} else {\r\n\t\t\tsetSelectedBuyerGroupError('');\r\n\t\t}\r\n\r\n\t\tif (!mailId) {\r\n\t\t\tsetMailIdError('Mail ID is required');\r\n\t\t\tisValid = false;\r\n\t\t} else if (!/^[\\w-]+(\\.[\\w-]+)*@([\\w-]+\\.)+[a-zA-Z]{2,7}$/.test(mailId)) { // Check email format\r\n\t\t\tsetMailIdError('Invalid email format');\r\n\t\t\tisValid = false;\r\n\t\t} else {\r\n\t\t\tsetMailIdError('');\r\n\t\t}\r\n\r\n\t\tif (!buyerName) {\r\n\t\t\tsetBuyerNameError('Buyer Name is required');\r\n\t\t\tisValid = false;\r\n\t\t} else {\r\n\t\t\tsetBuyerNameError('');\r\n\t\t}\r\n\r\n\t\tif (!contactNumber) {\r\n\t\t\tsetContactNumberError('Contact Number is required');\r\n\t\t\tisValid = false;\r\n\t\t} else if (!/^[0-9]{10}$/.test(contactNumber)) {\r\n\t\t\tsetContactNumberError('Contact Number must be a 10-digit number');\r\n\t\t\tisValid = false;\r\n\t\t} else {\r\n\t\t\tsetContactNumberError('');\r\n\t\t}\r\n\t\t\r\n\t\tif (!isValid) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tlet payload = {\r\n\t\t\t\"Buyer_Group_Name\": selectedBuyerGroup,\r\n\t\t\t\"Buyer_Name\": buyerName,\r\n\t\t\t\"Buyer_Contact_No\": contactNumber,\r\n\t\t\t\"Buyer_Email_Id\": mailId\r\n\t\t}\r\n\t\ttrackPromise(buyerService.saveCompanyBuyers({ \"data\": [payload] }).then((response) => {\r\n\t\t\t//check login response\r\n\t\t\tif (response.status == 200) {\r\n\t\t\t\t// alert(response.data.result);\r\n\t\t\t\tgetCompanyBuyersData()\r\n\t\t\t\thandleClose()\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\talert(response.data.result);\r\n\t\t\t}\r\n\r\n\t\t}).catch((error) => {\r\n\t\t\t//console.log(error.response.data.error)\r\n\t\t\talert(error.response.data.error);\r\n\t\t})\r\n\t\t);\r\n\t}\r\n\r\n\tconst handleEditBuyer = (e) => {\r\n\t\te.preventDefault();\r\n\t\t\r\n\t\tlet isValid = true;\r\n\r\n\t\tif (!selectedBuyerGroup) {\r\n\t\t\tsetSelectedBuyerGroupError('Buyer Group is required');\r\n\t\t\tisValid = false;\r\n\t\t} else {\r\n\t\t\tsetSelectedBuyerGroupError('');\r\n\t\t}\r\n\r\n\t\tif (!mailId) {\r\n\t\t\tsetMailIdError('Mail ID is required');\r\n\t\t\tisValid = false;\r\n\t\t} else if (!/^[\\w-]+(\\.[\\w-]+)*@([\\w-]+\\.)+[a-zA-Z]{2,7}$/.test(mailId)) { // Check email format\r\n\t\t\tsetMailIdError('Invalid email format');\r\n\t\t\tisValid = false;\r\n\t\t} else {\r\n\t\t\tsetMailIdError('');\r\n\t\t}\r\n\r\n\t\tif (!buyerName) {\r\n\t\t\tsetBuyerNameError('Buyer Name is required');\r\n\t\t\tisValid = false;\r\n\t\t} else {\r\n\t\t\tsetBuyerNameError('');\r\n\t\t}\r\n\r\n\t\tif (!contactNumber) {\r\n\t\t\tsetContactNumberError('Contact Number is required');\r\n\t\t\tisValid = false;\r\n\t\t} else if (!/^[0-9]{10}$/.test(contactNumber)) {\r\n\t\t\tsetContactNumberError('Contact Number must be a 10-digit number');\r\n\t\t\tisValid = false;\r\n\t\t} else {\r\n\t\t\tsetContactNumberError('');\r\n\t\t}\r\n\r\n\t\tif (!isValid) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tlet payload = {\r\n\t\t\t\"Buyer_Id\" : buyerId,\r\n\t\t\t\"Buyer_Group_Name\": selectedBuyerGroup,\r\n\t\t\t\"Buyer_Name\": buyerName,\r\n\t\t\t\"Buyer_Contact_No\": contactNumber,\r\n\t\t\t\"Buyer_Email_Id\": mailId\r\n\t\t}\r\n\r\n\t\ttrackPromise(buyerService.editCompanyBuyers({ \"data\": [payload] }).then((response) => {\r\n\t\t\t//check login response\r\n\t\t\tif (response.status === 200) {\r\n\t\t\t\t// alert(response.data.result)\r\n\t\t\t\tgetCompanyBuyersData()\r\n\t\t\t\tcloseEditForm()\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\talert(response.data.message);\r\n\t\t\t}\r\n\r\n\t\t}).catch((error) => {\r\n\t\t\t//console.log(error.response.data.error)\r\n\t\t\talert(error.response.data.error);\r\n\t\t})\r\n\t\t);\r\n\r\n\t}\r\n\r\n\tconst getCompanyBuyersData = () => {\r\n\t\ttrackPromise(\r\n\t\t\tbuyerService.getCompanyBuyers().then((response) => {\r\n\t\t\t\tsetData(response.data.Company_Buyers)\r\n\t\t\t})\r\n\t\t);\r\n\t}\r\n\tuseEffect(() => {\r\n\t\tgetCompanyBuyersData()\r\n\t}, [])\r\n\r\n\tfunction editFormDetails(data) {\r\n\t\t\r\n\t\tsetSelectedBuyerGroupError('');\r\n\t\tsetMailIdError('');\r\n\t\tsetBuyerNameError('');\r\n\t\tsetContactNumberError('');\r\n\r\n\t\tsetSelectedBuyerGroup(data.Buyer_Group_Name);\r\n\t\tsetcontactNumber(data.Buyer_Contact_No);\r\n\t\tsetMailId(data.Buyer_Email_Id);\r\n\t\tsetBuyerName(data.Buyer_Name);\r\n\t\tsetBuyerId(data.Buyer_Id);\r\n\t}\r\n\tfunction settingValuesToEmpty() {\r\n\r\n\t\tsetSelectedBuyerGroupError('');\r\n\t\tsetMailIdError('');\r\n\t\tsetBuyerNameError('');\r\n\t\tsetContactNumberError('');\r\n\r\n\t\tsetBuyerId(\"\");\r\n\t\tsetSelectedBuyerGroup(\"\");\r\n\t\tsetcontactNumber(\"\");\r\n\t\tsetMailId(\"\");\r\n\t\tsetBuyerName(\"\");\r\n\t}\r\n\tconst openEditForm = (data) => {\r\n\t\teditFormDetails(data)\r\n\t\tsetIsEditFormOpen(true);\r\n\r\n\t};\r\n\r\n\tfunction handleForm() {\r\n\t\tsettingValuesToEmpty()\r\n\t\tsetShow(true)\r\n\t}\r\n\r\n\r\n\tconst deleteBuyerGroupRecord = (data) => {\r\n\t\tif (window.confirm(\"Are you sure to delete the Company Buyer ?\")) {\r\n\t\t\tlet payload = {\r\n\t\t\t\t\"Buyer_Id\": data.Buyer_Id\r\n\t\t\t}\r\n\t\t\ttrackPromise(buyerService.deleteCompanyBuyers({ \"data\": [payload] }).then((response) => {\r\n\t\t\t\t//check login response\r\n\t\t\t\tif (response.status === 200) {\r\n\t\t\t\t\tgetCompanyBuyersData()\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\talert(response.data.message);\r\n\t\t\t\t}\r\n\r\n\t\t\t}).catch((error) => {\r\n\t\t\t\t//console.log(error.response.data.error)\r\n\t\t\t\talert(error.response.data.error);\r\n\t\t\t})\r\n\t\t\t);\r\n\t\t}\r\n\t};\r\n\r\n\treturn <>\r\n\t\t<div className='row'>\r\n\t\t\t<div className='col-8'>\r\n\t\t\t\t<h1 className='h1'> Buyer Group </h1>\r\n\t\t\t</div>\r\n\t\t\t<div className='col-4 text-right '>\r\n\t\t\t\t<Button className='primary-btn mt-10' onClick={handleForm}>\r\n\t\t\t\t<i className='fa fa-plus fa-white'> </i> Buyer \r\n\t\t\t\t</Button>\r\n\t\t\t\t<Modal\r\n\t\t\t\t\tshow={show}\r\n\t\t\t\t\tonHide={() => setShow(false)}\r\n\t\t\t\t\tdialogClassName=\"modal-50w\"\r\n\t\t\t\t\tbackdrop=\"static\"\r\n\t\t\t\t\tkeyboard={false}>\r\n\r\n\t\t\t\t\t<Modal.Header closeButton style={{ color: 'white' }}>\r\n\t\t\t\t\t\t<Modal.Title> Add New Buyer </Modal.Title>\r\n\t\t\t\t\t</Modal.Header>\r\n\t\t\t\t\t<Modal.Body>\r\n\t\t\t\t\t\t<form onSubmit={handleBuyerGroupSetup}>\r\n\t\t\t\t\t\t\t<div className='row' >\r\n\t\t\t\t\t\t\t\t<div className='col-6'>\r\n\t\t\t\t\t\t\t\t\t<Form.Select className='mb-3' tabindex=\"1\" required onChange={(e) => { setSelectedBuyerGroup(e.target.value) }} value={selectedBuyerGroup} name=\"selectedBuyerGroup\" >\r\n\t\t\t\t\t\t\t\t\t\t<option > Select Buyer Group</option>\r\n\t\t\t\t\t\t\t\t\t\t{buyerGroupData.map((item) => (\r\n\t\t\t\t\t\t\t\t\t\t\t<option key={item.Buyer_Group_Id} value={item.Buyer_Group_Name}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{item.Buyer_Group_Name}\r\n\t\t\t\t\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t</Form.Select>\r\n\t\t\t\t\t\t\t\t\t{selectedBuyerGroupError && <p style={{ color: 'red' }}>{selectedBuyerGroupError}</p>}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t<MDBInput wrapperClass='mb-3' type='email' required label='E-Mail ID' tabindex=\"3\" onChange={(e) => { setMailId(e.target.value) }} value={mailId} name='mailId' />\r\n\r\n\t\t\t\t\t\t\t\t\t{mailIdError && <p style={{ color: 'red' }}>{mailIdError}</p>}\r\n\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t<div className='col-6'>\r\n\r\n\t\t\t\t\t\t\t\t\t<MDBInput wrapperClass='mb-3' required type='text' label='Buyer' tabindex=\"2\" onChange={(e) => { setBuyerName(e.target.value) }} value={buyerName} name='Buyer' />\r\n\r\n\t\t\t\t\t\t\t\t\t{buyerNameError && <p style={{ color: 'red' }}>{buyerNameError}</p>}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t<MDBInput wrapperClass='mb-3' required type='number' tabindex=\"4\" label='Contact No.' onChange={(e) => { setcontactNumber(e.target.value) }} value={contactNumber} name=' contactNumber' />\r\n\r\n\t\t\t\t\t\t\t\t\t{contactNumberError && <p style={{ color: 'red' }}>{contactNumberError}</p>}\r\n\r\n\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</form>\r\n\r\n\t\t\t\t\t</Modal.Body>\r\n\t\t\t\t\t<Modal.Footer>\r\n\t\t\t\t\t\t<Button variant=\"secondary\" onClick={handleClose} style={{ width: '15%' }}>\r\n\t\t\t\t\t\t\tCancel\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t<Button variant=\"primary\" onClick={handleBuyerGroupSetup} style={{ width: '15%' }}>\r\n\t\t\t\t\t\t\tSave\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</Modal.Footer>\r\n\t\t\t\t</Modal>\r\n\t\t\t</div>\r\n\t\t\t<div className='col-12'>\r\n\r\n\t\t\t\t<BuyerGroupTable data={data} openEditForm={openEditForm} deleteBuyerGroupRecord={deleteBuyerGroupRecord} />\r\n\r\n\t\t\t\t<Modal show={isEditFormOpen} onHide={closeEditForm} dialogClassName=\"modal-50w\"\r\n\t\t\t\t\tbackdrop=\"static\">\r\n\t\t\t\t\t<Modal.Header closeButton>\r\n\t\t\t\t\t\t<Modal.Title>Edit Company Buyer</Modal.Title>\r\n\t\t\t\t\t</Modal.Header>\r\n\t\t\t\t\t<Modal.Body>\r\n\t\t\t\t\t\t<form onSubmit={handleEditBuyer}>\r\n\t\t\t\t\t\t<div className='row' >\r\n\t\t\t\t\t\t\t\t<div className='col-6'>\r\n\t\t\t\t\t\t\t\t\t<Form.Select className='mb-3' tabindex=\"5\" onChange={(e) => { setSelectedBuyerGroup(e.target.value) }} value={selectedBuyerGroup} name=\"selectedBuyerGroup\" >\r\n\t\t\t\t\t\t\t\t\t\t<option > Select Buyer Group</option>\r\n\t\t\t\t\t\t\t\t\t\t{buyerGroupData.map((item) => (\r\n\t\t\t\t\t\t\t\t\t\t\t<option key={item.Buyer_Group_Id} value={item.Buyer_Group_Name}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{item.Buyer_Group_Name}\r\n\t\t\t\t\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t</Form.Select>\r\n\t\t\t\t\t\t\t\t\t{selectedBuyerGroupError && <p style={{ color: 'red' }}>{selectedBuyerGroupError}</p>}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t<MDBInput wrapperClass='mb-3' type='email' label='E-Mail ID' tabindex=\"3\" onChange={(e) => { setMailId(e.target.value) }} value={mailId} name='mailId' />\r\n\r\n\t\t\t\t\t\t\t\t\t{mailIdError && <p style={{ color: 'red' }}>{mailIdError}</p>}\r\n\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t<div className='col-6'>\r\n\r\n\t\t\t\t\t\t\t\t\t<MDBInput wrapperClass='mb-3' type='text' label='Buyer' tabindex=\"2\" onChange={(e) => { setBuyerName(e.target.value) }} value={buyerName} name='Buyer' />\r\n\t\t\t\t\t\t\t\t\t{buyerNameError && <p style={{ color: 'red' }}>{buyerNameError}</p>}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t<MDBInput wrapperClass='mb-3' type='number' tabindex=\"10\" label='Contact No.' onChange={(e) => { setcontactNumber(e.target.value) }} value={contactNumber} name=' contactNumber' />\r\n\r\n\t\t\t\t\t\t\t\t\t{contactNumberError && <p style={{ color: 'red' }}>{contactNumberError}</p>}\r\n\r\n\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</form>\r\n\r\n\t\t\t\t\t</Modal.Body>\r\n\t\t\t\t\t<Modal.Footer>\r\n\t\t\t\t\t\t<Button variant=\"secondary\" onClick={closeEditForm} style={{ width: '15%' }}>\r\n\t\t\t\t\t\t\tCancel\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t<Button variant=\"primary\" onClick={handleEditBuyer} style={{ width: '15%' }}>\r\n\t\t\t\t\t\t{buyerId ? \"Update\" : \"Save\"}\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</Modal.Footer>\r\n\t\t\t\t</Modal>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</>\r\n}","/**\r\n * owner : \r\n * author :\r\n */\r\nimport api from \"./interceptor\";\r\n\r\nclass buyerService {\r\n\r\n    saveGender(payload) {\r\n      \r\n      const apiUrl = 'http://3.92.91.120:4000'; // Read base URL from environment\r\n      console.log(payload)\r\n      return api.post(`${apiUrl}/api/saveGender`, payload);\r\n    }\r\n\r\n    getGender() {\r\n      const apiUrl = 'http://3.92.91.120:4000'; // Read base URL from environment\r\n      return api\r\n        .get(`${apiUrl}/api/getGender`)\r\n        .then((response) => {\r\n          return response;\r\n        })\r\n        .catch((err) => {\r\n          console.error(\"Error fetching buyers:\", err);\r\n        });\r\n    }\r\n\r\n    updateGender(payload) {\r\n      const apiUrl = 'http://3.92.91.120:4000'; // Read base URL from environment\r\n      return api.post(`${apiUrl}/api/updateGender`, payload);\r\n    }\r\n\r\n\r\n    // editCompanyBuyers(payload) {\r\n    //   const apiUrl = 'http://3.92.91.120:4000'; // Read base URL from environment\r\n    //   return api.post(`${apiUrl}/api/editBuyers`, payload);\r\n    // }\r\n\r\n    deleteGender(payload) {\r\n      const apiUrl = 'http://3.92.91.120:4000'; // Read base URL from environment\r\n      return api.post(`${apiUrl}/api/deleteGender`, payload);\r\n    }\r\n\r\n    // getCompanyBuyers() {\r\n    //   const apiUrl = 'http://3.92.91.120:4000'; // Read base URL from environment\r\n    //   return api\r\n    //     .get(`${apiUrl}/api/getBuyers`)\r\n    //     .then((response) => {\r\n    //       return response;\r\n    //     })\r\n    //     .catch((err) => {\r\n    //       console.error(\"Error fetching buyers:\", err);\r\n    //     });\r\n    // }\r\n}\r\n\r\nexport default new buyerService();\r\n","import React from 'react';\r\nimport { useTable } from 'react-table';\r\n\r\nexport default function GenderTable(props) {\r\n    // Log data to verify the structure\r\n    const data = props.data || []; // Default to empty array if data is undefined\r\n\r\n    console.log('Data received in GenderTable:', data);\r\n\r\n    const columns = React.useMemo(\r\n        () => [\r\n            {\r\n                Header: 'Gender',\r\n                accessor: 'Gender', // Adjust if 'gender' is the correct field name\r\n            },\r\n            {\r\n                Header: 'Actions',\r\n                accessor: 'action', // Dummy accessor for action column\r\n                Cell: ({ row }) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t<i\r\n\t\t\t\t\t\tclassName=\"fa fa-edit pointer\"\r\n\t\t\t\t\t\tonClick={() => props.openEditForm(row.original)}\r\n\t\t\t\t\t\ttitle=\"Edit\"\r\n\t\t\t\t\t></i>\r\n\t\t\t\t\t<i\r\n\t\t\t\t\t\tclassName=\"fa fa-trash ml-15 pointer\"\r\n\t\t\t\t\t\tonClick={() => props.deleteGender(row.original)}\r\n\t\t\t\t\t\ttitle=\"Delete\"\r\n\t\t\t\t\t></i>\r\n\t\t\t\t\t</>\r\n                ),\r\n            },\r\n        ],\r\n\t\t[props] // Ensure `props` dependencies are included\r\n\r\n    );\r\n\r\n    const {\r\n        getTableProps,\r\n        getTableBodyProps,\r\n        headerGroups,\r\n        rows,\r\n        prepareRow,\r\n    } = useTable({\r\n        columns,\r\n        data,\r\n    });\r\n\r\n    return (\r\n        <div className='mt-4'>\r\n            <table {...getTableProps()} className=\"table\">\r\n                <thead>\r\n                    {headerGroups.map((headerGroup) => (\r\n                        <tr {...headerGroup.getHeaderGroupProps()}>\r\n                            {headerGroup.headers.map((column) => (\r\n                                <th {...column.getHeaderProps()}>{column.render('Header')}</th>\r\n                            ))}\r\n                        </tr>\r\n                    ))}\r\n                </thead>\r\n                <tbody {...getTableBodyProps()}>\r\n                    {rows.map((row) => {\r\n                        prepareRow(row);\r\n                        return (\r\n                            <tr {...row.getRowProps()}>\r\n                                {row.cells.map((cell) => (\r\n                                    <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\r\n                                ))}\r\n                            </tr>\r\n                        );\r\n                    })}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport { MDBInput } from 'mdb-react-ui-kit';\r\nimport genderService from '../../../../../../services/genderService';\r\nimport { trackPromise } from 'react-promise-tracker';\r\nimport GenderTable from './GenderTable';\r\n\r\nexport default function Gender() {\r\n    const [show, setShow] = useState(false);\r\n    const [gender, setGender] = useState([]);\r\n    const [genderData, setGenderData] = useState([]);\r\n    const [genderId, setGenderId] = useState(null); // State for edit mode\r\n\r\n    const handleClose = () => {\r\n        setShow(false);\r\n        setGenderId(null); // Reset edit data on close\r\n        setGender(''); // Clear input field\r\n    };\r\n\r\n    const handleForm = () => {\r\n        setShow(true);\r\n    };\r\n\r\n    function handleGender() {\r\n        let payload = {\r\n            \"Gender\": gender,\r\n            ...(genderId && { \"id\": genderId }) // Include id if editing\r\n        };\r\n\r\n        const apiCall = genderId\r\n            ? genderService.updateGender({ data: [payload] }) // Update if editing\r\n            : genderService.saveGender({ data: [payload] }); // Save if new entry\r\n\r\n        trackPromise(\r\n            apiCall\r\n                .then(response => {\r\n                    if (response.status === 200) {\r\n                        alert(genderId ? \"Gender updated successfully\" : \"Gender added successfully\");\r\n                        getGender(); // Refresh data\r\n                        handleClose(); // Close modal\r\n                    } else {\r\n                        alert(response.data.result);\r\n                    }\r\n                })\r\n                .catch(error => {\r\n                    alert(error.response?.data?.error || error.message);\r\n                })\r\n        );\r\n    }\r\n\r\n    const getGender = () => {\r\n        trackPromise(\r\n            genderService.getGender().then((response) => {\r\n                setGenderData(response.data.gender);\r\n            })\r\n        );\r\n    };\r\n\r\n    useEffect(() => {\r\n        getGender();\r\n    }, []);\r\n\r\n    const openEditForm = (data) => {\r\n        setGenderId(data.id); // Set data for editing or null for new entry\r\n        setGender(data.Gender); \r\n        setShow(true);\r\n    };\r\n\r\n    const deleteGender = (data) => {\r\n        if (window.confirm(\"Are you sure to delete the  Gender?\")) {\r\n            const payload = { \"id\": data.id };\r\n            trackPromise(\r\n                genderService.deleteGender({ \"data\": [payload] })\r\n                    .then(response => {\r\n                        if (response.status === 200) {\r\n                            getGender();\r\n                        } else {\r\n                            alert(response.data.message);\r\n                        }\r\n                    })\r\n                    .catch(error => {\r\n                        alert(error.response?.data?.error || error.message);\r\n                    })\r\n            );\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='row'>\r\n            <div className='col-8'>\r\n                <h1 className='h1'>Gender</h1>\r\n            </div>\r\n            <div className='col-4 text-right'>\r\n                <Button className='primary-btn mt-10' onClick={handleForm}>\r\n                    <i className='fa fa-plus fa-white'> </i> Gender\r\n                </Button>\r\n                <Modal\r\n                    show={show}\r\n                    onHide={handleClose}\r\n                    dialogClassName=\"modal-50w\"\r\n                    backdrop=\"static\"\r\n                    keyboard={false}\r\n                >\r\n                    <Modal.Header closeButton style={{ color: 'white' }}>\r\n                        <Modal.Title>{genderId ? \"Edit Gender\" : \"Add New Gender\"}</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <form onSubmit={(e) => { e.preventDefault(); handleGender(); }}>\r\n                            <div className='row'>\r\n                                <div className='col-6'>\r\n                                    <div className=\"mb-3\">\r\n                                        <MDBInput\r\n                                            wrapperClass='mb-3'\r\n                                            type='text'\r\n                                            required\r\n                                            label='Gender'\r\n                                            tabIndex=\"3\"\r\n                                            onChange={(e) => setGender(e.target.value)}\r\n                                            value={gender}\r\n                                            name='gender'\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"secondary\" onClick={handleClose} style={{ width: '15%' }}>\r\n                            Cancel\r\n                        </Button>\r\n                        <Button variant=\"primary\" onClick={handleGender} style={{ width: '15%' }}>\r\n                        {genderId ? \"Update\" : \"Save\"}\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n            </div>\r\n            <div className='col-12'>\r\n                <GenderTable data={genderData} openEditForm={openEditForm} deleteGender={deleteGender}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","/**\r\n * owner : \r\n * author :\r\n */\r\nimport api from \"./interceptor\";\r\n\r\nclass productTYpeService {\r\n\r\n    saveProductType(payload) {\r\n      // alert(payload)\r\n      const apiUrl = 'http://3.92.91.120:4000'; // Read base URL from environment\r\n      console.log(payload)\r\n      return api.post(`${apiUrl}/api/saveProductType`, payload);\r\n    }\r\n\r\n    getProductType() {\r\n      const apiUrl = 'http://3.92.91.120:4000'; // Read base URL from environment\r\n      return api\r\n        .get(`${apiUrl}/api/getProductType`)\r\n        .then((response) => {\r\n          return response;\r\n        })\r\n        .catch((err) => {\r\n          console.error(\"Error fetching buyers:\", err);\r\n        });\r\n    }\r\n\r\n    editProductType(payload) {\r\n      const apiUrl = 'http://3.92.91.120:4000'; // Read base URL from environment\r\n      return api.post(`${apiUrl}/api/editProductType`, payload);\r\n    }\r\n\r\n    // editCompanyBuyers(payload) {\r\n    //   const apiUrl = 'http://3.92.91.120:4000'; // Read base URL from environment\r\n    //   return api.post(`${apiUrl}/api/editBuyers`, payload);\r\n    // }\r\n\r\n    deleteProductType(payload) {\r\n      const apiUrl = 'http://3.92.91.120:4000'; // Read base URL from environment\r\n      return api.post(`${apiUrl}/api/deleteProductType`, payload);\r\n    }\r\n\r\n    // getCompanyBuyers() {\r\n    //   const apiUrl = 'http://3.92.91.120:4000'; // Read base URL from environment\r\n    //   return api\r\n    //     .get(`${apiUrl}/api/getBuyers`)\r\n    //     .then((response) => {\r\n    //       return response;\r\n    //     })\r\n    //     .catch((err) => {\r\n    //       console.error(\"Error fetching buyers:\", err);\r\n    //     });\r\n    // }\r\n}\r\n\r\nexport default new productTYpeService();\r\n","import React from 'react';\r\nimport { useTable } from 'react-table';\r\n\r\nexport default function ProductTypeTable(props) {\r\n    const { data } = props;\r\n    \r\n    const columns = React.useMemo(\r\n        () => [\r\n            {\r\n                Header: 'Product Type',\r\n                accessor: 'Product_Type',\r\n            },\r\n            {\r\n                Header: 'Actions',\r\n                accessor: 'action',\r\n                Cell: ({ row }) => (\r\n                    <>\r\n                        <i\r\n                            className='fa fa-edit pointer'\r\n                            onClick={() => props.openEditForm(row.original)}\r\n                            title='Edit'\r\n                        >\r\n                        </i>\r\n                        <i\r\n                            className='fa fa-trash ml-15 pointer'\r\n                            onClick={() => props.deleteProduct(row.original)}\r\n                            title='Delete'\r\n                        >\r\n                        </i>\r\n                    </>\r\n                ),\r\n            },\r\n        ],\r\n        []\r\n    );\r\n\r\n    const {\r\n        getTableProps,\r\n        getTableBodyProps,\r\n        headerGroups,\r\n        rows,\r\n        prepareRow,\r\n    } = useTable({\r\n        columns,\r\n        data,\r\n    });\r\n\r\n    return (\r\n        <div className='mt-4'>\r\n            <table {...getTableProps()} className=\"table\">\r\n                <thead>\r\n                    {headerGroups.map((headerGroup) => (\r\n                        <tr {...headerGroup.getHeaderGroupProps()}>\r\n                            {headerGroup.headers.map((column) => (\r\n                                <th {...column.getHeaderProps()}>{column.render('Header')}</th>\r\n                            ))}\r\n                        </tr>\r\n                    ))}\r\n                </thead>\r\n                <tbody {...getTableBodyProps()}>\r\n                    {rows.map((row) => {\r\n                        prepareRow(row);\r\n                        return (\r\n                            <tr {...row.getRowProps()}>\r\n                                {row.cells.map((cell) => (\r\n                                    <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\r\n                                ))}\r\n                            </tr>\r\n                        );\r\n                    })}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport { MDBInput } from 'mdb-react-ui-kit';\r\nimport { trackPromise } from 'react-promise-tracker';\r\nimport productTypeService from '../../../../../../services/productTypeService';\r\nimport ProductTypeTable from './ProductTypeTable';\r\n\r\nexport default function ProductType() {\r\n    const [show, setShow] = useState(false);\r\n    const [productType, setProductType] = useState('');\r\n    const [productTypeId, setProductTypeId] = useState(null); // Track ID for editing\r\n    const [productTypeData, setProductTypeData] = useState([]);\r\n    const isEditMode = productTypeId !== null; // Determine if we're in edit mode\r\n\tconst [selectedProductTypeError, setSelectedProductTypeError] = useState('');\r\n\r\n\r\n    const handleClose = () => {\r\n        setShow(false);\r\n        setProductType(''); // Clear form\r\n        setProductTypeId(null); // Exit edit mode\r\n    };\r\n\r\n    const handleForm = () => {\r\n        setShow(true);\r\n    };\r\n\r\n\r\n\r\n\r\n    const handleProductType = (e) => {\r\n\t\te.preventDefault();\r\n\t\t\r\n\t\tlet isValid = true;\r\n\r\n\t\tif (!productType) {\r\n\t\t\tsetSelectedProductTypeError('Product Type is required');\r\n\t\t\tisValid = false;\r\n\t\t} else {\r\n\t\t\tsetSelectedProductTypeError('');\r\n\t\t}\r\n\r\n\r\n\t\tif (!isValid) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tlet payload = {\r\n            \"product_type_id\": productTypeId,\r\n\t\t\t\"product_type\" : productType\r\n\t\t}\r\n\r\n        console.log('payload', payload)\r\n\r\n\t\ttrackPromise(productTypeService.editProductType({ \"data\": [payload] }).then((response) => {\r\n\t\t\t//check login response\r\n\t\t\tif (response.status === 200) {\r\n\t\t\t\t// alert(response.data.result)\r\n\t\t\t\tgetProductType()\r\n\t\t\t\thandleClose()\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\talert(response.data.message);\r\n\t\t\t}\r\n\r\n\t\t}).catch((error) => {\r\n\t\t\t//console.log(error.response.data.error)\r\n\t\t\talert(error.response.data.error);\r\n\t\t})\r\n\t\t);\r\n\r\n\t}\r\n\r\n\r\n    const getProductType = () => {\r\n        trackPromise(\r\n            productTypeService.getProductType().then((response) => {\r\n                setProductTypeData(response.data.product_type);\r\n            })\r\n        );\r\n    };\r\n\r\n    useEffect(() => {\r\n        getProductType();\r\n    }, []);\r\n\r\n    const openEditForm = (product) => {\r\n        \r\n        console.log('product', product)\r\n        setProductType(product.Product_Type);\r\n        setProductTypeId(product.id); // Set ID for edit mode\r\n        setShow(true);\r\n    };\r\n\r\n    const deleteProduct = (data) => {\r\n        if (window.confirm(\"Are you sure to delete the  Product Type?\")) {\r\n            const payload = { \"id\": data.id };\r\n            trackPromise(\r\n                productTypeService.deleteProductType({ \"data\": [payload] })\r\n                    .then(response => {\r\n                        if (response.status === 200) {\r\n                            getProductType();\r\n                        } else {\r\n                            alert(response.data.message);\r\n                        }\r\n                    })\r\n                    .catch(error => {\r\n                        alert(error.response?.data?.error || error.message);\r\n                    })\r\n            );\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className='row'>\r\n                <div className='col-8'>\r\n                    <h1 className='h1'> Product Type </h1>\r\n                </div>\r\n                <div className='col-4 text-right'>\r\n                    <Button className='primary-btn mt-10' onClick={handleForm}>\r\n                        <i className='fa fa-plus fa-white'> </i> Product Type\r\n                    </Button>\r\n                    <Modal show={show} onHide={handleClose} dialogClassName=\"modal-50w\" backdrop=\"static\" keyboard={false}>\r\n                        <Modal.Header closeButton style={{ color: 'white' }}>\r\n                            <Modal.Title> {isEditMode ? \"Edit Product Type\" : \"Add New Product Type\"} </Modal.Title>\r\n                        </Modal.Header>\r\n                        <Modal.Body>\r\n                            <form onSubmit={(e) => { e.preventDefault(); handleProductType(); }}>\r\n                                <div className='row'>\r\n                                    <div className='col-6'>\r\n                                        {/* <label>Product Type</label> */}\r\n                                        <MDBInput\r\n                                            wrapperClass='mb-3'\r\n                                            type='text'\r\n                                            required\r\n                                            label='Product Type'\r\n                                            onChange={(e) => { setProductType(e.target.value); }}\r\n                                            value={productType}\r\n                                            name='productType'\r\n                                        />\r\n                                    </div>\r\n\t\t\t\t\t\t\t\t\t{selectedProductTypeError && <p style={{ color: 'red' }}>{selectedProductTypeError}</p>}\r\n\r\n                                </div>\r\n                            </form>\r\n                        </Modal.Body>\r\n                        <Modal.Footer>\r\n                            <Button variant=\"secondary\" onClick={handleClose} style={{ width: '15%' }}>Cancel</Button>\r\n                            <Button variant=\"primary\" onClick={handleProductType} style={{ width: '15%' }}>\r\n                            {productTypeId ? \"Update\" : \"Save\"}\r\n                            </Button>\r\n                        </Modal.Footer>\r\n                    </Modal>\r\n                </div>\r\n                <div className='col-12'>\r\n                    <ProductTypeTable data={productTypeData} openEditForm={openEditForm}   deleteProduct= {deleteProduct}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","/**\r\n * owner : \r\n * author :\r\n */\r\nimport api from \"./interceptor\";\r\n\r\nclass seasonService {\r\n\r\n    saveSeason(payload) {\r\n      \r\n      const apiUrl = 'http://3.92.91.120:4000'; // Read base URL from environment\r\n      console.log(payload)\r\n      return api.post(`${apiUrl}/api/saveSeason`, payload);\r\n    }\r\n\r\n    getSeason() {\r\n      const apiUrl = 'http://3.92.91.120:4000'; // Read base URL from environment\r\n      return api\r\n        .get(`${apiUrl}/api/getSeason`)\r\n        .then((response) => {\r\n          return response;\r\n        })\r\n        .catch((err) => {\r\n          console.error(\"Error fetching buyers:\", err);\r\n        });\r\n    }\r\n\r\n    updateSeason(payload) {  \r\n      const apiUrl = 'http://3.92.91.120:4000'; // Read base URL from environment\r\n      console.log(payload)\r\n      return api.post(`${apiUrl}/api/updateSeason`, payload);\r\n    }\r\n\r\n\r\n    // editCompanyBuyers(payload) {\r\n    //   const apiUrl = 'http://3.92.91.120:4000'; // Read base URL from environment\r\n    //   return api.post(`${apiUrl}/api/editBuyers`, payload);\r\n    // }\r\n\r\n    deleteSeasonType(payload) {\r\n      const apiUrl = 'http://3.92.91.120:4000'; // Read base URL from environment\r\n      return api.post(`${apiUrl}/api/deleteSeason`, payload);\r\n    }\r\n\r\n    // getCompanyBuyers() {\r\n    //   const apiUrl = 'http://3.92.91.120:4000'; // Read base URL from environment\r\n    //   return api\r\n    //     .get(`${apiUrl}/api/getBuyers`)\r\n    //     .then((response) => {\r\n    //       return response;\r\n    //     })\r\n    //     .catch((err) => {\r\n    //       console.error(\"Error fetching buyers:\", err);\r\n    //     });\r\n    // }\r\n}\r\n\r\nexport default new seasonService();\r\n","import React from 'react';\r\nimport { useTable } from 'react-table';\r\n\r\nexport default function SeasonTable(props) {\r\n    let data = props.data;\r\n    console.log(data);\r\n    \r\n\tconst columns = React.useMemo(\r\n\t\t() => [\r\n\t\t\t{\r\n\t\t\t\tHeader: 'Season Name',\r\n\t\t\t\taccessor: 'Season_Name',\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tHeader: 'Actions',\r\n\t\t\t\taccessor: 'action',\r\n\t\t\t\tCell: ({ row }) => (\r\n\t\t\t\t\t[\r\n\t\t\t\t\t\t<i className='fa fa-edit pointer' onClick={() => {\r\n\t\t\t\t\t\t\tprops.openEditForm(row.original)\r\n\t\t\t\t\t\t}} title='Edit'> </i>,  \r\n\t\t\t\t\t\t<i className='fa fa-trash ml-15 pointer' onClick={() => {\r\n\t\t\t\t\t\t\tprops.deleteSeasonType(row.original)\r\n\t\t\t\t\t\t}} title='Delete'> </i>\r\n\t\t\t\t\t]\r\n\t\t\t\t),\r\n\t\t\t},\r\n\t\t],\r\n\t\t[]\r\n\t);\r\n\t\t\r\n\tconst {\r\n\t\tgetTableProps,\r\n\t\tgetTableBodyProps,\r\n\t\theaderGroups,\r\n\t\trows,\r\n\t\tprepareRow,\r\n\t} = useTable({\r\n\t\tcolumns,\r\n\t\tdata,\r\n\t});\r\n\t\r\n\treturn (\r\n\t\t<div className='mt-4'>\r\n\t\t\t<table {...getTableProps()} className=\"table\">\r\n\t\t\t\t<thead>\r\n\t\t\t\t\t{headerGroups.map((headerGroup) => (\r\n\t\t\t\t\t\t<tr {...headerGroup.getHeaderGroupProps()}>\r\n\t\t\t\t\t\t\t{headerGroup.headers.map((column) => (\r\n\t\t\t\t\t\t\t\t<th {...column.getHeaderProps()}>{column.render('Header')}</th>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</thead>\r\n\t\t\t\t<tbody {...getTableBodyProps()}>\r\n\t\t\t\t\t{rows.map((row) => {\r\n\t\t\t\t\t\tprepareRow(row);\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<tr {...row.getRowProps()}>\r\n\t\t\t\t\t\t\t\t{row.cells.map((cell) => {\r\n\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t<td {...cell.getCellProps()}>{cell.render('Cell')}</td>\r\n\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t})}\r\n\t\t\t\t</tbody>\r\n\t\t\t</table>\r\n\t\t</div>\r\n\t);\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport { MDBInput } from 'mdb-react-ui-kit';\r\nimport { trackPromise } from 'react-promise-tracker';\r\nimport seasonService from '../../../../../../services/seasonService';\r\nimport SeasonTable from './SeasonTable';\r\n\r\nexport default function Season() {\r\n    const [season, setSeason] = useState(\"\");\r\n    const [show, setShow] = useState(false);\r\n    const [seasonData, setSeasonData] = useState([]);\r\n    const [seasonDataId, setSeasonDataId] = useState(null);\r\n\r\n    const handleClose = () => {\r\n        setShow(false);\r\n        setSeason(\"\"); // Clear season input\r\n        setSeasonDataId(null); // Reset ID for add mode\r\n    };\r\n\r\n    const handleForm = () => {\r\n        setShow(true);\r\n    };\r\n\r\n    const handleSeason = () => {\r\n        let payload = {\r\n            \"Season_Name\": season,\r\n            ...(seasonDataId && { \"id\": seasonDataId }) // Add ID if editing\r\n        };\r\n\r\n        const request = seasonDataId\r\n            ? seasonService.updateSeason({ \"data\": [payload] }) // Edit request\r\n            : seasonService.saveSeason({ \"data\": [payload] }); // Add request\r\n\r\n        trackPromise(\r\n            request\r\n                .then(response => {\r\n                    if (response.status === 200) {\r\n                        alert(seasonDataId ? \"Season updated successfully\" : \"Season added successfully\");\r\n                        handleClose();\r\n                        getSeason();\r\n                    } else {\r\n                        alert(response.data.result);\r\n                    }\r\n                })\r\n                .catch(error => {\r\n                    alert(error.response?.data?.error || error.message);\r\n                })\r\n        );\r\n    };\r\n\r\n    const getSeason = () => {\r\n        trackPromise(\r\n            seasonService.getSeason().then(response => {\r\n                setSeasonData(response.data.season);\r\n            })\r\n        );\r\n    };\r\n\r\n    useEffect(() => {\r\n        getSeason();\r\n    }, []);\r\n\r\n    const deleteSeasonType = (data) => {\r\n        if (window.confirm(\"Are you sure to delete the Season Type?\")) {\r\n            let payload = { \"id\": data.id };\r\n            trackPromise(\r\n                seasonService.deleteSeasonType({ \"data\": [payload] })\r\n                    .then(response => {\r\n                        if (response.status === 200) {\r\n                            getSeason();\r\n                        } else {\r\n                            alert(response.data.message);\r\n                        }\r\n                    })\r\n                    .catch(error => {\r\n                        alert(error.response?.data?.error || error.message);\r\n                    })\r\n            );\r\n        }\r\n    };\r\n\r\n    const openEditForm = (season) => {\r\n        setSeason(season.Season_Name); // Set season name for editing\r\n        setSeasonDataId(season.id); // Set ID for edit mode\r\n        setShow(true);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <div className='row'>\r\n                <div className='col-8'>\r\n                    <h1 className='h1'> Season </h1>\r\n                </div>\r\n                <div className='col-4 text-right'>\r\n                    <Button className='primary-btn mt-10' onClick={handleForm}>\r\n                        <i className='fa fa-plus fa-white'> </i> Season\r\n                    </Button>\r\n                    <Modal show={show} onHide={handleClose} dialogClassName=\"modal-50w\" backdrop=\"static\" keyboard={false}>\r\n                        <Modal.Header closeButton>\r\n                            <Modal.Title>{seasonDataId ? \"Edit Season Type\" : \"Add New Season Type\"}</Modal.Title>\r\n                        </Modal.Header>\r\n                        <Modal.Body>\r\n                            <form>\r\n                                <div className='row'>\r\n                                    <div className='col-6'>\r\n                                        <div className=\"mb-3\">\r\n                                            <MDBInput\r\n                                                wrapperClass='mb-3'\r\n                                                type='text'\r\n                                                required\r\n                                                label='Season Name'\r\n                                                tabIndex=\"3\"\r\n                                                onChange={(e) => setSeason(e.target.value)}\r\n                                                value={season}\r\n                                                name='season'\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                        </Modal.Body>\r\n                        <Modal.Footer>\r\n                            <Button variant=\"secondary\" onClick={handleClose} style={{ width: '15%' }}>\r\n                                Cancel\r\n                            </Button>\r\n                            <Button variant=\"primary\" onClick={handleSeason} style={{ width: '15%' }}>\r\n                                {seasonDataId ? \"Update\" : \"Save\"}\r\n                            </Button>\r\n                        </Modal.Footer>\r\n                    </Modal>\r\n                </div>\r\n                <div className='col-12'>\r\n                    <SeasonTable data={seasonData} openEditForm={openEditForm} deleteSeasonType = {deleteSeasonType} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","/**\r\n * owner : \r\n * author :\r\n */\r\nimport api from \"./interceptor\";\r\n\r\nclass sizeGridService {\r\n\r\n    saveSizeGrid(payload) {\r\n      \r\n      const apiUrl = 'http://3.92.91.120:4000'; // Read base URL from environment\r\n      console.log(payload)\r\n      return api.post(`${apiUrl}/api/saveSizeGrid`, payload);\r\n    }\r\n\r\n    getSizeGrid() {\r\n      const apiUrl = 'http://3.92.91.120:4000'; // Read base URL from environment\r\n      return api\r\n        .get(`${apiUrl}/api/getSizeGrid`)\r\n        .then((response) => {\r\n          return response;\r\n        })\r\n        .catch((err) => {\r\n          console.error(\"Error fetching buyers:\", err);\r\n        });\r\n    }\r\n\r\n    updateSizeGrid(payload) {\r\n      const apiUrl = 'http://3.92.91.120:4000'; // Read base URL from environment\r\n      console.log(payload)\r\n      return api.post(`${apiUrl}/api/updateSizeGrid`, payload);\r\n    }\r\n\r\n\r\n    // editCompanyBuyers(payload) {\r\n    //   const apiUrl = 'http://3.92.91.120:4000'; // Read base URL from environment\r\n    //   return api.post(`${apiUrl}/api/editBuyers`, payload);\r\n    // }\r\n\r\n    deleteSizeGrid(payload) {\r\n      const apiUrl = 'http://3.92.91.120:4000'; // Read base URL from environment\r\n      return api.post(`${apiUrl}/api/deleteSizeGrid`, payload);\r\n    }\r\n\r\n    // getCompanyBuyers() {\r\n    //   const apiUrl = 'http://3.92.91.120:4000'; // Read base URL from environment\r\n    //   return api\r\n    //     .get(`${apiUrl}/api/getBuyers`)\r\n    //     .then((response) => {\r\n    //       return response;\r\n    //     })\r\n    //     .catch((err) => {\r\n    //       console.error(\"Error fetching buyers:\", err);\r\n    //     });\r\n    // }\r\n}\r\n\r\nexport default new sizeGridService();\r\n","import React from 'react';\r\nimport { useTable } from 'react-table';\r\n\r\nexport default function SizeGridTable({ data, openEditForm, deleteSizeGrid }) {\r\n    const columns = React.useMemo(\r\n        () => [\r\n            {\r\n                Header: 'Size Grid',\r\n                accessor: 'Size_Grid',\r\n            },\r\n            {\r\n                Header: 'Actions',\r\n                accessor: 'action',\r\n                Cell: ({ row }) => (\r\n                    <>\r\n                        <i \r\n                            className='fa fa-edit pointer' \r\n                            onClick={() => openEditForm(row.original)} \r\n                            title='Edit' \r\n                        />  \r\n                        <i \r\n                            className='fa fa-trash ml-15 pointer' \r\n                            onClick={() => deleteSizeGrid(row.original)} \r\n                            title='Delete' \r\n                        />\r\n                    </>\r\n                ),\r\n            },\r\n        ],\r\n        [openEditForm, deleteSizeGrid] // Adding dependencies\r\n    );\r\n\r\n    const {\r\n        getTableProps,\r\n        getTableBodyProps,\r\n        headerGroups,\r\n        rows,\r\n        prepareRow,\r\n    } = useTable({ columns, data });\r\n\r\n    return (\r\n        <div className='mt-4'>\r\n            <table {...getTableProps()} className=\"table\">\r\n                <thead>\r\n                    {headerGroups.map((headerGroup) => (\r\n                        <tr {...headerGroup.getHeaderGroupProps()}>\r\n                            {headerGroup.headers.map((column) => (\r\n                                <th {...column.getHeaderProps()}>{column.render('Header')}</th>\r\n                            ))}\r\n                        </tr>\r\n                    ))}\r\n                </thead>\r\n                <tbody {...getTableBodyProps()}>\r\n                    {rows.map((row) => {\r\n                        prepareRow(row);\r\n                        return (\r\n                            <tr {...row.getRowProps()}>\r\n                                {row.cells.map((cell) => (\r\n                                    <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\r\n                                ))}\r\n                            </tr>\r\n                        );\r\n                    })}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport { MDBInput } from 'mdb-react-ui-kit';\r\nimport { trackPromise } from 'react-promise-tracker';\r\nimport sizeGridService from '../../../../../../services/sizeGridService';\r\nimport SizeGridTable from './SizeGridTable';\r\n\r\nexport default function SizeGrid() {\r\n    const [show, setShow] = useState(false);\r\n    const [sizeGrid, setSizeGrid] = useState(\"\");\r\n    const [sizeGridData, setSizeGridData] = useState([]);\r\n    const [sizeGridDataId, setSizeGridDataId] = useState(null);\r\n\r\n    const handleForm = () => setShow(true);\r\n\r\n    const handleClose = () => {\r\n        setShow(false);\r\n        setSizeGrid(\"\");\r\n        setSizeGridDataId(null);\r\n    };\r\n\r\n    const handleSizeGrid = (e) => {\r\n        e.preventDefault(); // Prevent form default submission\r\n        const payload = {\r\n            \"Size_Grid\": sizeGrid,\r\n            ...(sizeGridDataId && { \"id\": sizeGridDataId })\r\n        };\r\n\r\n        const request = sizeGridDataId\r\n            ? sizeGridService.updateSizeGrid({ \"data\": [payload] })\r\n            : sizeGridService.saveSizeGrid({ \"data\": [payload] });\r\n\r\n        trackPromise(\r\n            request\r\n                .then(response => {\r\n                    if (response.status === 200) {\r\n                        alert(sizeGridDataId ? \"Size Grid updated successfully\" : \"Size Grid added successfully\");\r\n                        handleClose();\r\n                        getSizeGrid();\r\n                    } else {\r\n                        alert(response.data.result);\r\n                    }\r\n                })\r\n                .catch(error => {\r\n                    alert(error.response?.data?.error || error.message);\r\n                })\r\n        );\r\n    };\r\n\r\n    const getSizeGrid = () => {\r\n        trackPromise(\r\n            sizeGridService.getSizeGrid()\r\n                .then(response => setSizeGridData(response.data.sizeGrid))\r\n        );\r\n    };\r\n\r\n    useEffect(() => {\r\n        getSizeGrid();\r\n    }, []);\r\n\r\n    const deleteSizeGrid = (data) => {\r\n        if (window.confirm(\"Are you sure to delete the Size Grid?\")) {\r\n            const payload = { \"id\": data.id };\r\n            trackPromise(\r\n                sizeGridService.deleteSizeGrid({ \"data\": [payload] })\r\n                    .then(response => {\r\n                        if (response.status === 200) {\r\n                            getSizeGrid();\r\n                        } else {\r\n                            alert(response.data.message);\r\n                        }\r\n                    })\r\n                    .catch(error => {\r\n                        alert(error.response?.data?.error || error.message);\r\n                    })\r\n            );\r\n        }\r\n    };\r\n\r\n    const openEditForm = (sizegrid) => {\r\n        setSizeGrid(sizegrid.Size_Grid); // Set size grid name for editing\r\n        setSizeGridDataId(sizegrid.id);  // Set ID for edit mode\r\n        setShow(true);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <div className='row'>\r\n                <div className='col-8'>\r\n                    <h1 className='h1'>Size Grid</h1>\r\n                </div>\r\n                <div className='col-4 text-right'>\r\n                    <Button className='primary-btn mt-10' onClick={handleForm}>\r\n                        <i className='fa fa-plus fa-white'></i> Size Grid\r\n                    </Button>\r\n                    <Modal\r\n                        show={show}\r\n                        onHide={handleClose}\r\n                        dialogClassName=\"modal-50w\"\r\n                        backdrop=\"static\"\r\n                        keyboard={false}\r\n                    >\r\n                        <Modal.Header closeButton style={{ color: 'white' }}>\r\n                            <Modal.Title>{sizeGridDataId ? \"Edit Size Grid\" : \"Add New Size Grid\"}</Modal.Title>\r\n                        </Modal.Header>\r\n                        <Modal.Body>\r\n                            <form onSubmit={handleSizeGrid}>\r\n                                <div className='row'>\r\n                                    <div className='col-6'>\r\n                                        <div className=\"mb-3\">\r\n                                            <MDBInput\r\n                                                wrapperClass='mb-3'\r\n                                                type='text'\r\n                                                required\r\n                                                label='Size Grid'\r\n                                                tabIndex=\"3\"\r\n                                                onChange={(e) => setSizeGrid(e.target.value)}\r\n                                                value={sizeGrid}\r\n                                                name='sizegrid'\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                        </Modal.Body>\r\n                        <Modal.Footer>\r\n                            <Button variant=\"secondary\" onClick={handleClose} style={{ width: '15%' }}>\r\n                                Cancel\r\n                            </Button>\r\n                            <Button variant=\"primary\" onClick={handleSizeGrid} style={{ width: '15%' }}>\r\n                                {sizeGridDataId ? \"Update\" : \"Save\"}\r\n                            </Button>\r\n                        </Modal.Footer>\r\n                    </Modal>\r\n                </div>\r\n                <div className='col-12'>\r\n                    <SizeGridTable data={sizeGridData} deleteSizeGrid={deleteSizeGrid} openEditForm={openEditForm} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","/**\r\n * owner : \r\n * author :\r\n */\r\nimport api from \"./interceptor\";\r\n\r\nclass printTypeService {\r\n\r\n    savePrintType(payload) {\r\n      \r\n      // alert(payload)\r\n      const apiUrl = 'http://3.92.91.120:4000'; // Read base URL from environment\r\n      console.log(payload)\r\n      return api.post(`${apiUrl}/api/savePrintType`, payload);\r\n    }\r\n\r\n    getPrintType() {\r\n      const apiUrl = 'http://3.92.91.120:4000'; // Read base URL from environment\r\n      return api\r\n        .get(`${apiUrl}/api/getPrintType`)\r\n        .then((response) => {\r\n          return response;\r\n        })\r\n        .catch((err) => {\r\n          console.error(\"Error fetching buyers:\", err);\r\n        });\r\n    }\r\n\r\n\r\n    updatePrintType(payload) {\r\n      const apiUrl = 'http://3.92.91.120:4000'; // Read base URL from environment\r\n      console.log(payload)\r\n      return api.post(`${apiUrl}/api/updatePrintType`, payload);\r\n    }\r\n\r\n    // editCompanyBuyers(payload) {\r\n    //   const apiUrl = 'http://3.92.91.120:4000'; // Read base URL from environment\r\n    //   return api.post(`${apiUrl}/api/editBuyers`, payload);\r\n    // }\r\n\r\n    deletePrintType(payload) {\r\n      const apiUrl = 'http://3.92.91.120:4000'; // Read base URL from environment\r\n      return api.post(`${apiUrl}/api/deletePrintType`, payload);\r\n    }\r\n\r\n    // getCompanyBuyers() {\r\n    //   const apiUrl = 'http://3.92.91.120:4000'; // Read base URL from environment\r\n    //   return api\r\n    //     .get(`${apiUrl}/api/getBuyers`)\r\n    //     .then((response) => {\r\n    //       return response;\r\n    //     })\r\n    //     .catch((err) => {\r\n    //       console.error(\"Error fetching buyers:\", err);\r\n    //     });\r\n    // }\r\n}\r\n\r\nexport default new printTypeService();\r\n","import React from 'react';\r\nimport { useTable } from 'react-table';\r\n\r\nexport default function PrintTypeTable(props) {\r\n    const data = props.data;\r\n\r\n    const columns = React.useMemo(\r\n        () => [\r\n            {\r\n                Header: 'Print Type',\r\n                accessor: 'Print_Type', // Ensure this matches the API response\r\n            },\r\n            {\r\n                Header: 'Actions',\r\n                accessor: 'action',\r\n                Cell: ({ row }) => (\r\n                    <>\r\n                        <i\r\n                            className='fa fa-edit pointer'\r\n                            onClick={() => props.openEditForm(row.original)}\r\n                            title='Edit'\r\n                        ></i>\r\n                        <i\r\n                            className='fa fa-trash ml-15 pointer'\r\n                            onClick={() => props.deletePrintType(row.original)}\r\n                            title='Delete'\r\n                        ></i>\r\n                    </>\r\n                ),\r\n            },\r\n        ],\r\n        []\r\n    );\r\n\r\n    const {\r\n        getTableProps,\r\n        getTableBodyProps,\r\n        headerGroups,\r\n        rows,\r\n        prepareRow,\r\n    } = useTable({\r\n        columns,\r\n        data,\r\n    });\r\n\r\n    return (\r\n        <div className='mt-4'>\r\n            <table {...getTableProps()} className=\"table\">\r\n                <thead>\r\n                    {headerGroups.map((headerGroup) => (\r\n                        <tr {...headerGroup.getHeaderGroupProps()}>\r\n                            {headerGroup.headers.map((column) => (\r\n                                <th {...column.getHeaderProps()}>{column.render('Header')}</th>\r\n                            ))}\r\n                        </tr>\r\n                    ))}\r\n                </thead>\r\n                <tbody {...getTableBodyProps()}>\r\n                    {rows.map((row) => {\r\n                        prepareRow(row);\r\n                        return (\r\n                            <tr {...row.getRowProps()}>\r\n                                {row.cells.map((cell) => (\r\n                                    <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\r\n                                ))}\r\n                            </tr>\r\n                        );\r\n                    })}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n}\r\n","// PrintType.js\r\nimport React, { useEffect, useState } from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport { MDBInput } from 'mdb-react-ui-kit';\r\nimport { trackPromise } from 'react-promise-tracker';\r\nimport printTypeService from '../../../../../../services/printtypeService';\r\nimport PrintTypeTable from './PrintTypeTable';\r\n\r\nexport default function PrintType() {\r\n    const [printType, setPrintType] = useState(\"\");\r\n    const [show, setShow] = useState(false);\r\n    const [printTypeData, setPrintTypeData] = useState([]);\r\n    const [printTypeId, setPrintTypeId] = useState(null);\r\n\r\n    const handleClose = () => {\r\n        setShow(false);\r\n        setPrintType(\"\"); // Clear input\r\n        setPrintTypeId(null); // Reset ID for add mode\r\n    };\r\n\r\n    const handleForm = () => {\r\n        setShow(true);\r\n    };\r\n\r\n    const handlePrintType = () => {\r\n        const payload = { \r\n            print_type: printType, \r\n            ...(printTypeId && { id: printTypeId }) // Include ID if editing\r\n        };\r\n\r\n        const apiCall = printTypeId\r\n            ? printTypeService.updatePrintType({ data: [payload] }) // Update if editing\r\n            : printTypeService.savePrintType({ data: [payload] }); // Save if new entry\r\n\r\n        trackPromise(\r\n            apiCall\r\n                .then(response => {\r\n                    if (response.status === 200) {\r\n                        alert(printTypeId ? \"Print Type updated successfully\" : \"Print Type added successfully\");\r\n                        getPrintType();\r\n                        handleClose();\r\n                    } else {\r\n                        alert(response.data.result);\r\n                    }\r\n                })\r\n                .catch(error => {\r\n                    alert(error.response?.data?.error || error.message);\r\n                })\r\n        );\r\n    };\r\n\r\n    const getPrintType = () => {\r\n        trackPromise(\r\n            printTypeService.getPrintType().then((response) => {\r\n                setPrintTypeData(response.data.print_type);\r\n            })\r\n        );\r\n    };\r\n\r\n    const editPrintType = (data) => {\r\n        setPrintType(data.print_type); // Make sure this matches the API key\r\n        setPrintTypeId(data.id);\r\n        setShow(true);\r\n    };\r\n\r\n    const deletePrintType = (data) => {\r\n        if (window.confirm(\"Are you sure to delete the Print Type?\")) {\r\n            let payload = { id: data.id };\r\n            trackPromise(\r\n                printTypeService.deletePrintType({ data: [payload] })\r\n                    .then(response => {\r\n                        if (response.status === 200) {\r\n                            getPrintType();\r\n                        } else {\r\n                            alert(response.data.message);\r\n                        }\r\n                    })\r\n                    .catch(error => {\r\n                        alert(error.response?.data?.error || error.message);\r\n                    })\r\n            );\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        getPrintType();\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <div className='row'>\r\n                <div className='col-8'>\r\n                    <h1 className='h1'>Print Type</h1>\r\n                </div>\r\n                <div className='col-4 text-right'>\r\n                    <Button className='primary-btn mt-10' onClick={handleForm}>\r\n                        <i className='fa fa-plus fa-white'></i> Print Type\r\n                    </Button>\r\n                    <Modal show={show} onHide={handleClose} dialogClassName=\"modal-50w\" backdrop=\"static\" keyboard={false}>\r\n                        <Modal.Header closeButton style={{ color: 'white' }}>\r\n                            <Modal.Title>{printTypeId ? \"Edit Print Type\" : \"Add New Print Type\"}</Modal.Title>\r\n                        </Modal.Header>\r\n                        <Modal.Body>\r\n                            <form onSubmit={handlePrintType}>\r\n                                <div className='row'>\r\n                                    <div className='col-6'>\r\n                                        <div className=\"mb-3\">\r\n                                            <MDBInput\r\n                                                wrapperClass='mb-3'\r\n                                                type='text'\r\n                                                required\r\n                                                label='Print Type'\r\n                                                tabIndex=\"3\"\r\n                                                onChange={(e) => setPrintType(e.target.value)}\r\n                                                value={printType} // Pre-populates with `printType`\r\n                                                name='printType'\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                        </Modal.Body>\r\n                        <Modal.Footer>\r\n                            <Button variant=\"secondary\" onClick={handleClose} style={{ width: '15%' }}>\r\n                                Cancel\r\n                            </Button>\r\n                            <Button variant=\"primary\" onClick={handlePrintType} style={{ width: '15%' }}>\r\n                                {printTypeId ? \"Update\" : \"Save\"}\r\n                            </Button>\r\n                        </Modal.Footer>\r\n                    </Modal>\r\n                </div>\r\n                <div className='col-12'>\r\n                    <PrintTypeTable\r\n                        data={printTypeData}\r\n                        deletePrintType={deletePrintType}\r\n                        openEditForm={editPrintType} // Pass the edit function as prop\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { useTable } from 'react-table';\r\n\r\nexport default function WashingTypeTable(props) {\r\n  const { data, openEditForm, deleteWashingRecord } = props;\r\n\r\n  const columns = React.useMemo(\r\n    () => [\r\n      {\r\n        Header: 'Washing Type',\r\n        accessor: 'Washing_Type',\r\n      },\r\n      {\r\n        Header: 'Actions',\r\n        accessor: 'action', // Dummy accessor\r\n        Cell: ({ row }) => (\r\n          <div>\r\n            <i\r\n              className=\"fa fa-edit pointer\"\r\n              onClick={() => openEditForm(row.original)}\r\n              title=\"Edit\"\r\n            >\r\n              {' '}\r\n            </i>\r\n            <i\r\n              className=\"fa fa-trash ml-15 pointer\"\r\n              onClick={() => deleteWashingRecord(row.original)}\r\n              title=\"Delete\"\r\n            >\r\n              {' '}\r\n            </i>\r\n          </div>\r\n        ),\r\n      },\r\n    ],\r\n    [openEditForm, deleteWashingRecord]\r\n  );\r\n\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    rows,\r\n    prepareRow,\r\n  } = useTable({\r\n    columns,\r\n    data,\r\n  });\r\n\r\n  return (\r\n    <div className=\"mt-4\">\r\n      <table {...getTableProps()} className=\"table\">\r\n        <thead>\r\n          {headerGroups.map((headerGroup) => (\r\n            <tr {...headerGroup.getHeaderGroupProps()}>\r\n              {headerGroup.headers.map((column) => (\r\n                <th {...column.getHeaderProps()}>{column.render('Header')}</th>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </thead>\r\n        <tbody {...getTableBodyProps()}>\r\n          {rows.map((row) => {\r\n            prepareRow(row);\r\n            return (\r\n              <tr {...row.getRowProps()}>\r\n                {row.cells.map((cell) => (\r\n                  <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\r\n                ))}\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n","/**\r\n * owner : \r\n * author :\r\n */\r\nimport api from \"./interceptor\";\r\n\r\nclass washingTypeService {\r\n\r\n    saveWashingType(payload) {\r\n      \r\n      // alert(payload)\r\n      const apiUrl = 'http://3.92.91.120:4000'; // Read base URL from environment\r\n      console.log(payload)\r\n      return api.post(`${apiUrl}/api/saveWashingType`, payload);\r\n    }\r\n\r\n    getWashingType() {\r\n      const apiUrl = 'http://3.92.91.120:4000'; // Read base URL from environment\r\n      return api\r\n        .get(`${apiUrl}/api/getWashingType`)\r\n        .then((response) => {\r\n          return response;\r\n        })\r\n        .catch((err) => {\r\n          console.error(\"Error fetching buyers:\", err);\r\n        });\r\n    }\r\n\r\n    updateWashingType(payload) {\r\n      const apiUrl = 'http://3.92.91.120:4000'; // Read base URL from environment\r\n      console.log(payload)\r\n      return api.post(`${apiUrl}/api/updateWashingType`, payload);\r\n    }\r\n\r\n    deleteWashingRecord(payload) {\r\n      \r\n      console.log(payload);\r\n      \r\n      const apiUrl = 'http://3.92.91.120:4000'; // Read base URL from environment\r\n      return api.post(`${apiUrl}/api/deletewashingType`, payload);\r\n    }\r\n\r\n    // getCompanyBuyers() {\r\n    //   const apiUrl = 'http://3.92.91.120:4000'; // Read base URL from environment\r\n    //   return api\r\n    //     .get(`${apiUrl}/api/getBuyers`)\r\n    //     .then((response) => {\r\n    //       return response;\r\n    //     })\r\n    //     .catch((err) => {\r\n    //       console.error(\"Error fetching buyers:\", err);\r\n    //     });\r\n    // }\r\n}\r\n\r\nexport default new washingTypeService();\r\n","import React, { useEffect, useState } from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport { MDBInput } from 'mdb-react-ui-kit';\r\nimport { trackPromise } from 'react-promise-tracker';\r\nimport WashingTypeTable from './WashingTypeTable';\r\nimport washingtypeService from '../../../../../../services/washingtypeService';\r\n\r\nexport default function WashingType() {\r\n    const [washingType, setWashingType] = useState(\"\");\r\n    const [show, setShow] = useState(false);\r\n    const [editMode, setEditMode] = useState(false); // To track edit mode\r\n    const [currentWashingType, setCurrentWashingType] = useState(null); // Store data to be edited\r\n    const [washingTypeData, setWashingTypeData] = useState([]);\r\n\r\n    // Close modal and reset form\r\n    const handleClose = () => {\r\n        setShow(false);\r\n        setEditMode(false);\r\n        setCurrentWashingType(null);\r\n        setWashingType(\"\");\r\n    };\r\n\r\n    const handleForm = () => {\r\n        setShow(true);\r\n    };\r\n\r\n    // Save or update washing type\r\n    const handleWashingType = () => {\r\n        const payload = {\r\n            id: currentWashingType?.id, // Include id if editing\r\n            washing_type: washingType,\r\n        };\r\n\r\n        const saveOrUpdate = editMode\r\n            ? washingtypeService.updateWashingType({ data: [payload] })\r\n            : washingtypeService.saveWashingType({ data: [payload] });\r\n\r\n        trackPromise(\r\n            saveOrUpdate\r\n                .then(response => {\r\n                    if (response.status === 200) {\r\n                        getPrintType();\r\n                        handleClose();\r\n                    } else {\r\n                        alert(response.data.result);\r\n                    }\r\n                })\r\n                .catch(error => {\r\n                    alert(error.response?.data?.error || error.message);\r\n                })\r\n        );\r\n    };\r\n\r\n    // Fetch washing type data\r\n    const getPrintType = () => {\r\n        trackPromise(\r\n            washingtypeService.getWashingType().then(response => {\r\n                setWashingTypeData(response.data.washing_type);\r\n            })\r\n        );\r\n    };\r\n\r\n    // Initialize washing type data\r\n    useEffect(() => {\r\n        getPrintType();\r\n    }, []);\r\n\r\n    // Delete washing type record\r\n    const deleteWashingRecord = (data) => {\r\n        if (window.confirm(\"Are you sure to delete the Washing Type?\")) {\r\n            const payload = { id: data.id };\r\n            trackPromise(\r\n                washingtypeService.deleteWashingRecord({ data: [payload] })\r\n                    .then(response => {\r\n                        if (response.status === 200) {\r\n                            getPrintType();\r\n                        } else {\r\n                            alert(response.data.message);\r\n                        }\r\n                    })\r\n                    .catch(error => {\r\n                        alert(error.response?.data?.error || error.message);\r\n                    })\r\n            );\r\n        }\r\n    };\r\n\r\n    // Open modal with data for editing\r\n    const openEditForm = (data) => {\r\n        setEditMode(true);\r\n        setCurrentWashingType(data);\r\n        setWashingType(data.Washing_Type); // Pre-fill the field with existing data\r\n        setShow(true);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <div className='row'>\r\n                <div className='col-8'>\r\n                    <h1 className='h1'> Washing Type </h1>\r\n                </div>\r\n                <div className='col-4 text-right'>\r\n                    <Button className='primary-btn mt-10' onClick={handleForm}>\r\n                        <i className='fa fa-plus fa-white'> </i> Washing Type\r\n                    </Button>\r\n                    <Modal\r\n                        show={show}\r\n                        onHide={handleClose}\r\n                        dialogClassName=\"modal-50w\"\r\n                        backdrop=\"static\"\r\n                        keyboard={false}\r\n                    >\r\n                        <Modal.Header closeButton style={{ color: 'white' }}>\r\n                            <Modal.Title> {editMode ? \"Edit Washing Type\" : \"Add New Washing Type\"} </Modal.Title>\r\n                        </Modal.Header>\r\n                        <Modal.Body>\r\n                            <form onSubmit={(e) => { e.preventDefault(); handleWashingType(); }}>\r\n                                <div className='row'>\r\n                                    <div className='col-6'>\r\n                                        <div className=\"mb-3\">\r\n                                            <MDBInput\r\n                                                wrapperClass='mb-3'\r\n                                                type='text'\r\n                                                required\r\n                                                label='Washing Type'\r\n                                                tabIndex=\"3\"\r\n                                                onChange={(e) => setWashingType(e.target.value)}\r\n                                                value={washingType}\r\n                                                name='washingType'\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                        </Modal.Body>\r\n                        <Modal.Footer>\r\n                            <Button variant=\"secondary\" onClick={handleClose} style={{ width: '15%' }}>\r\n                                Cancel\r\n                            </Button>\r\n                            <Button variant=\"primary\" onClick={handleWashingType} style={{ width: '15%' }}>\r\n                            {editMode ? \"Update\" : \"Save\"}\r\n                            </Button>\r\n                        </Modal.Footer>\r\n                    </Modal>\r\n                </div>\r\n                <div className='col-12'>\r\n                    <WashingTypeTable\r\n                        data={washingTypeData}\r\n                        deleteWashingRecord={deleteWashingRecord}\r\n                        openEditForm={openEditForm} // Pass edit function to table\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","/**\r\n * owner : \r\n * author :\r\n */\r\nimport api from \"./interceptor\";\r\n\r\nclass embTypeService {\r\n\r\n    saveEmbType(payload) {\r\n      \r\n      // alert(payload)\r\n      const apiUrl = 'http://3.92.91.120:4000'; // Read base URL from environment\r\n      console.log(payload)\r\n      return api.post(`${apiUrl}/api/saveEmbType`, payload);\r\n    }\r\n\r\n    getEmbType() {\r\n      const apiUrl = 'http://3.92.91.120:4000'; // Read base URL from environment\r\n      return api\r\n        .get(`${apiUrl}/api/getEmbType`)\r\n        .then((response) => {\r\n          return response;\r\n        })\r\n        .catch((err) => {\r\n          console.error(\"Error fetching buyers:\", err);\r\n        });\r\n    }\r\n\r\n\r\n    updateEmbType(payload) {\r\n      const apiUrl = 'http://3.92.91.120:4000'; // Read base URL from environment\r\n      console.log(payload)\r\n      return api.post(`${apiUrl}/api/updateEmbType`, payload);\r\n    }\r\n\r\n    // editCompanyBuyers(payload) {\r\n    //   const apiUrl = 'http://3.92.91.120:4000'; // Read base URL from environment\r\n    //   return api.post(`${apiUrl}/api/editBuyers`, payload);\r\n    // }\r\n\r\n    deleteEmbType(payload) {\r\n      const apiUrl = 'http://3.92.91.120:4000'; // Read base URL from environment\r\n      return api.post(`${apiUrl}/api/deleteEmbType`, payload);\r\n    }\r\n\r\n    // getCompanyBuyers() {\r\n    //   const apiUrl = 'http://3.92.91.120:4000'; // Read base URL from environment\r\n    //   return api\r\n    //     .get(`${apiUrl}/api/getBuyers`)\r\n    //     .then((response) => {\r\n    //       return response;\r\n    //     })\r\n    //     .catch((err) => {\r\n    //       console.error(\"Error fetching buyers:\", err);\r\n    //     });\r\n    // }\r\n}\r\n\r\nexport default new embTypeService();\r\n","import React from 'react';\r\nimport { useTable } from 'react-table';\r\n\r\nexport default function EmbTypeTable(props) {\r\n    const data = props.data || []; // Default to empty array if data is undefined\r\n\r\n    const columns = React.useMemo(\r\n        () => [\r\n            {\r\n                Header: 'Emb Type',\r\n                accessor: 'Emb_Type',\r\n            },\r\n            {\r\n                Header: 'Actions',\r\n                accessor: 'action', // Dummy accessor\r\n                Cell: ({ row }) => (\r\n                    <>\r\n                        <i\r\n                            className=\"fa fa-edit pointer\"\r\n                            onClick={() => props.openEditForm(row.original)}\r\n                            title=\"Edit\"\r\n                        ></i>\r\n                        <i\r\n                            className=\"fa fa-trash ml-15 pointer\"\r\n                            onClick={() => props.deleteEmbType(row.original)}\r\n                            title=\"Delete\"\r\n                        ></i>\r\n                    </>\r\n                ),\r\n            },\r\n        ],\r\n        [props] // Ensure `props` dependencies are included\r\n    );\r\n\r\n    const {\r\n        getTableProps,\r\n        getTableBodyProps,\r\n        headerGroups,\r\n        rows,\r\n        prepareRow,\r\n    } = useTable({\r\n        columns,\r\n        data,\r\n    });\r\n\r\n    return (\r\n        <div className=\"mt-4\">\r\n            <table {...getTableProps()} className=\"table\">\r\n                <thead>\r\n                    {headerGroups.map((headerGroup) => (\r\n                        <tr {...headerGroup.getHeaderGroupProps()}>\r\n                            {headerGroup.headers.map((column) => (\r\n                                <th {...column.getHeaderProps()}>{column.render('Header')}</th>\r\n                            ))}\r\n                        </tr>\r\n                    ))}\r\n                </thead>\r\n                <tbody {...getTableBodyProps()}>\r\n                    {rows.map((row) => {\r\n                        prepareRow(row);\r\n                        return (\r\n                            <tr {...row.getRowProps()}>\r\n                                {row.cells.map((cell) => (\r\n                                    <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\r\n                                ))}\r\n                            </tr>\r\n                        );\r\n                    })}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport { MDBInput } from 'mdb-react-ui-kit';\r\nimport { trackPromise } from 'react-promise-tracker';\r\nimport embTypeService from '../../../../../../services/embService';\r\nimport EmbTypeTable from './EmbTypeTable';\r\n\r\nexport default function EmbType() {\r\n    const [embType, setEmbType] = useState(\"\");\r\n    const [show, setShow] = useState(false);\r\n    const [embTypeData, setEmbTypeData] = useState([]);\r\n    const [empTypeId, setEmpTypeId] = useState(null);\r\n\r\n\r\n    const handleClose = () => {\r\n        setShow(false);\r\n        setEmpTypeId(null); // Reset edit data on close\r\n        setEmbType(\"\"); // Clear the input field\r\n    };\r\n\r\n    const handleForm = (data = null) => {\r\n        setEmpTypeId(data); // Set data for editing or null for new entry\r\n        setEmbType(data ? data.Emb_Type : \"\"); // Populate form if editing\r\n        setShow(true);\r\n    };\r\n\r\n    function handleEmbType() {\r\n        let payload = {\r\n            \"emb_type\": embType,\r\n            ...(empTypeId && { \"id\": empTypeId.id }) // Include id if editing\r\n        };\r\n\r\n        const request = empTypeId\r\n            ? embTypeService.updateEmbType({ data: [payload] }) // Update if editing\r\n            : embTypeService.saveEmbType({ data: [payload] }); // Save if new entry\r\n\r\n        trackPromise(\r\n            request\r\n                .then(response => {\r\n                    if (response.status === 200) {\r\n                        getEmbType(); // Refresh data\r\n                        handleClose(); // Close modal\r\n                    } else {\r\n                        alert(response.data.result);\r\n                    }\r\n                })\r\n                .catch(error => {\r\n                    alert(error.response?.data?.error || error.message);\r\n                })\r\n        );\r\n    }\r\n\r\n    const getEmbType = () => {\r\n        trackPromise(\r\n            embTypeService.getEmbType().then((response) => {\r\n                setEmbTypeData(response.data.emb_type);\r\n            })\r\n        );\r\n    };\r\n\r\n    useEffect(() => {\r\n        getEmbType();\r\n    }, []);\r\n\r\n    const deleteEmbType = (data) => {\r\n        if (window.confirm(\"Are you sure to delete the Emb Type?\")) {\r\n            let payload = { \"id\": data.id };\r\n            trackPromise(\r\n                embTypeService.deleteEmbType({ data: [payload] }).then((response) => {\r\n                    if (response.status === 200) {\r\n                        getEmbType(); // Refresh data\r\n                    } else {\r\n                        alert(response.data.message);\r\n                    }\r\n                }).catch((error) => {\r\n                    alert(error.response.data.error);\r\n                })\r\n            );\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <div className='row'>\r\n                <div className='col-8'>\r\n                    <h1 className='h1'>Emb Type</h1>\r\n                </div>\r\n                <div className='col-4 text-right'>\r\n                    <Button className='primary-btn mt-10' onClick={() => handleForm()}>\r\n                        <i className='fa fa-plus fa-white'> </i> Emb Type\r\n                    </Button>\r\n                    <Modal\r\n                        show={show}\r\n                        onHide={handleClose}\r\n                        dialogClassName=\"modal-50w\"\r\n                        backdrop=\"static\"\r\n                        keyboard={false}\r\n                    >\r\n                        <Modal.Header closeButton>\r\n                            <Modal.Title>{empTypeId ? \"Edit Emb Type\" : \"Add New Emb Type\"}</Modal.Title>\r\n                        </Modal.Header>\r\n                        <Modal.Body>\r\n                            <form onSubmit={(e) => { e.preventDefault(); handleEmbType(); }}>\r\n                                <div className='row'>\r\n                                    <div className='col-6'>\r\n                                        {/* <label>Emb Type</label> */}\r\n                                        <MDBInput\r\n                                            wrapperClass='mb-3'\r\n                                            type='text'\r\n                                            required\r\n                                            label='Emb Type'\r\n                                            tabindex=\"3\"\r\n                                            onChange={(e) => { setEmbType(e.target.value); }}\r\n                                            value={embType}\r\n                                            name='embType'\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                        </Modal.Body>\r\n                        <Modal.Footer>\r\n                            <Button variant=\"secondary\" onClick={handleClose} style={{ width: '15%' }}>\r\n                                Cancel\r\n                            </Button>\r\n                            <Button variant=\"primary\" onClick={handleEmbType} style={{ width: '15%' }}>\r\n                            {empTypeId ? \"Update\" : \"Save\"}\r\n                            </Button>\r\n                        </Modal.Footer>\r\n                    </Modal>\r\n                </div>\r\n                <div className='col-12'>\r\n                    <EmbTypeTable\r\n                        data={embTypeData}\r\n                        deleteEmbType={deleteEmbType}\r\n                        openEditForm={handleForm} // Pass handleForm as edit handler\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","/**\r\n * owner : \r\n * author :\r\n */\r\n\r\nimport { useEffect, useState } from 'react';\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\nimport Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Form from 'react-bootstrap/Form';\r\nimport BuyerGroup from './DMAPs_Data/BuyerGroup';\r\n\r\nimport './DataSetUp.scss';\r\n\r\nimport {\r\n    MDBTabs,\r\n    MDBTabsItem,\r\n    MDBTabsLink,\r\n    MDBTabsContent,\r\n    MDBTabsPane,\r\n    MDBRow,\r\n    MDBCol,\r\n    MDBInput\r\n} from 'mdb-react-ui-kit';\r\n\r\n\r\n// import userService from \"../../../services/userService\";\r\nimport { trackPromise } from 'react-promise-tracker';\r\nimport Gender from './DMAPs_Data/Gender/Gender';\r\nimport ProductType from './DMAPs_Data/ProductType/ProductType';\r\nimport Season from './DMAPs_Data/SEASON/Season';\r\nimport SizeGrid from './DMAPs_Data/SizeGrid/SizeGrid';\r\nimport PrintType from './DMAPs_Data/PrintType/PrintType';\r\nimport WashingType from './DMAPs_Data/WashingType/WashingType';\r\nimport EmbType from './DMAPs_Data/EmbType/EmbType';\r\n\r\n\r\nexport default function DataSetUp() {\r\n    const [verticalActive, setVerticalActive] = useState('tabV3');\r\n    const [unitName, setunitName] = useState('')\r\n    const [shortName, setShortName] = useState('')\r\n    const [group, setGroup] = useState('')\r\n    const [division, setdivision] = useState('')\r\n    const [tinNo, setTinNo] = useState('')\r\n    const [regNo, setRegNo] = useState('')\r\n    const [addressLine1, setAddressLine1] = useState('')\r\n    const [addressLine2, setAddressLine2] = useState('')\r\n    const [street, setStreet] = useState('')\r\n    const [city, setCity] = useState('')\r\n    const [pinNo, setPinNO] = useState('')\r\n    const [contactNo, setContactNo] = useState('')\r\n    const [contactNoRec, setContactNoRec] = useState('')\r\n    const [faxNo, setFaxNo] = useState('')\r\n    const [mailId, setMailId] = useState('')\r\n    const [website, setWebsite] = useState('')\r\n    const [state, setState] = useState('')\r\n    const [show, setShow] = useState(false);\r\n    const handleClose = () => setShow(false);\r\n\r\n    const handleUnitSetup = (e) => {\r\n        e.preventDefault();\r\n\r\n        console.log('hello');\r\n    }\r\n    \r\n    const handleVerticalClick = (value) => {\r\n        if (value === verticalActive) {\r\n            return;\r\n        }\r\n        setVerticalActive(value);\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        let payload = {\r\n            \"Unit_Full_Name\": unitName,\r\n            \"Unit_Short_Name\": shortName,\r\n            \"Group_Id\": group,\r\n            \"Division_Id\": division,\r\n            \"Tin_Num\": tinNo,\r\n            \"Reg_Num\": regNo,\r\n            \"Address_Line_1\": addressLine1,\r\n            \"Address_Line_2\": addressLine2,\r\n            \"Street\": street,\r\n            \"City\": city,\r\n            \"State\": state,\r\n            \"Pin_Code\": pinNo,\r\n            \"Contact_No\": contactNo,\r\n            \"Contact_No_Rec\" : contactNoRec,\r\n            \"Email_Id\": mailId,\r\n            \"Website_Link\": website,\r\n            \"Fax_No\": faxNo\r\n\r\n\r\n        }\r\n        alert('suceess')\r\n        // trackPromise(unitService.saveCompanyUnits(payload).then((response) => {\r\n        //     //check login response\r\n        //     if (response.data.status == 'Success') {\r\n        //         alert(response.data.message);\r\n\r\n        //     }\r\n        //     else if (response.data.status == 'Failed') {\r\n        //         alert(response.data.message);\r\n        //     }\r\n\r\n        // }).catch((error) => {\r\n        //     //console.log(error.response.data.error)\r\n        //     alert(error.response.data.error);\r\n        // })\r\n        // );\r\n\r\n\r\n    }\r\n \r\n    useEffect(() => {\r\n\r\n    }, [])\r\n\r\n    const pagination = paginationFactory({\r\n        page: 1,\r\n        sizePerPage: 10,\r\n        lastPageText: \">>\",\r\n        firstPageText: \"<<\",\r\n        nextPageText: \">\",\r\n        prePageText: \"<\",\r\n        showTotal: true,\r\n        alwaysShowAllBtns: true,\r\n        hideSizePerPage: true,\r\n        onPageChange: function (page, sizePerPage) { },\r\n        onSizePerPageChange: function (page, sizePerPage) { },\r\n    });\r\n    const iconActionHandler = (cell, row, rowIndex) => {\r\n        return (\r\n            <>\r\n                <i className=\"fas fa-edit action-icon\" title=\"Edit\" > </i>\r\n            </>\r\n        );\r\n    };\r\n\r\n    const products = [\r\n        {\r\n            id: 1,\r\n            Buyer_Group: \"Mexx\",\r\n            Buyer: \"Mexx Kids ware\",\r\n            Address: \"63-D, Basant Lok Community Centre, Vasant Vihar, New Delhi 110057\",\r\n            Action: \"\"\r\n        },\r\n        {\r\n            id: 2,\r\n            Buyer_Group: \"Mexx\",\r\n            Buyer: \"Mexx Sports ware\",\r\n            Address: \"63-D, Basant Lok Community Centre, Vasant Vihar, New Delhi 110057\",\r\n            Action: \"\"\r\n        },\r\n        {\r\n            id: 3,\r\n            Buyer_Group: \"Levis\",\r\n            Buyer: \"Levi's - Men's Wear\",\r\n            Address: \"001A & 002A, The Grand Sigma Mall, Ground Floor, Near-Wockhardt Hospital, Cunningham Road, Bengaluru, Karnataka 560052\",\r\n            Action: \"\"\r\n        }\r\n    ];\r\n    const columns = [{\r\n        dataField: 'id',\r\n        text: 'No',\r\n        sort: true\r\n    }, {\r\n        dataField: 'Buyer_Group',\r\n        text: 'Buyer Group'\r\n    }, {\r\n        dataField: 'Buyer',\r\n        text: 'Buyer',\r\n        sort: true\r\n    },\r\n    {\r\n        dataField: 'Address',\r\n        text: 'Address',\r\n        sort: true\r\n    },\r\n    {\r\n        dataField: \"Action\",\r\n        text: \"Action\",\r\n        formatter: iconActionHandler,\r\n        sort: false,\r\n        classes: \"actions-column\"\r\n    }\r\n    ];\r\n\r\n    return <>\r\n        <MDBRow>\r\n            <MDBCol size='1' style={{ width : \"13%\" }} className='no-pad-right'>\r\n                <MDBTabs className='flex-column text-center vertical-tab'>\r\n\r\n                    {/* <MDBTabsItem className=\"vertical-link\">\r\n                        <MDBTabsLink onClick={() => handleVerticalClick('tabV1')} active={verticalActive === 'tabV1'}>\r\n                            Human Resources\r\n                        </MDBTabsLink>\r\n                    </MDBTabsItem> */}\r\n                    \r\n                    {/* <MDBTabsItem className=\"vertical-link\">\r\n                        <MDBTabsLink onClick={() => handleVerticalClick('tabV2')} active={verticalActive === 'tabV2'}>\r\n                            Administrator\r\n                        </MDBTabsLink>\r\n                    </MDBTabsItem> */}\r\n\r\n                    <MDBTabsItem className=\"vertical-link\">\r\n                        <MDBTabsLink onClick={() => handleVerticalClick('tabV3')} active={verticalActive === 'tabV3'}>\r\n                            Buyer Group\r\n                        </MDBTabsLink>\r\n                    </MDBTabsItem>\r\n                    \r\n                    <MDBTabsItem className=\"vertical-link\">\r\n                        <MDBTabsLink onClick={() => handleVerticalClick('tabV4')} active={verticalActive === 'tabV4'}>\r\n                            Product Type\r\n                        </MDBTabsLink>\r\n                    </MDBTabsItem>\r\n                    \r\n                    <MDBTabsItem className=\"vertical-link\">\r\n                        <MDBTabsLink onClick={() => handleVerticalClick('tabV5')} active={verticalActive === 'tabV5'}>\r\n                            Gender\r\n                        </MDBTabsLink>\r\n                    </MDBTabsItem>\r\n                    \r\n                    <MDBTabsItem className=\"vertical-link\">\r\n                        <MDBTabsLink onClick={() => handleVerticalClick('tabV6')} active={verticalActive === 'tabV6'}>\r\n                            Season\r\n                        </MDBTabsLink>\r\n                    </MDBTabsItem>\r\n                    \r\n                    <MDBTabsItem className=\"vertical-link\">\r\n                        <MDBTabsLink onClick={() => handleVerticalClick('tabV7')} active={verticalActive === 'tabV7'}>\r\n                            Size Grid\r\n                        </MDBTabsLink>\r\n                    </MDBTabsItem>\r\n                    \r\n                    <MDBTabsItem className=\"vertical-link\">\r\n                        <MDBTabsLink onClick={() => handleVerticalClick('tabV8')} active={verticalActive === 'tabV8'}>\r\n                            Emb Type\r\n                        </MDBTabsLink>\r\n                    </MDBTabsItem>\r\n                    \r\n                    <MDBTabsItem className=\"vertical-link\">\r\n                        <MDBTabsLink onClick={() => handleVerticalClick('tabV9')} active={verticalActive === 'tabV9'}>\r\n                            Print Type\r\n                        </MDBTabsLink>\r\n                    </MDBTabsItem>\r\n                    \r\n                    <MDBTabsItem className=\"vertical-link\">\r\n                        <MDBTabsLink onClick={() => handleVerticalClick('tabV10')} active={verticalActive === 'tabV10'}>\r\n                            Washing Type\r\n                        </MDBTabsLink>\r\n                    </MDBTabsItem>\r\n                    \r\n                    {/* <MDBTabsItem className=\"vertical-link\">\r\n                        <MDBTabsLink onClick={() => handleVerticalClick('tabV11')} active={verticalActive === 'tabV11'}>\r\n                            Shipment Mode\r\n                        </MDBTabsLink>\r\n                    </MDBTabsItem> */}\r\n                    \r\n                    {/* <MDBTabsItem className=\"vertical-link\">\r\n                        <MDBTabsLink onClick={() => handleVerticalClick('tabV12')} active={verticalActive === 'tabV12'}>\r\n                            Country\r\n                        </MDBTabsLink>\r\n                    </MDBTabsItem> */}\r\n                    \r\n                    {/* <MDBTabsItem className=\"vertical-link\">\r\n                        <MDBTabsLink onClick={() => handleVerticalClick('tabV13')} active={verticalActive === 'tabV13'}>\r\n                            Garment Colour\r\n                        </MDBTabsLink>\r\n                    </MDBTabsItem> */}\r\n                </MDBTabs>\r\n            </MDBCol>\r\n            <MDBCol size='11' style={{ width : \"87%\" }} className='no-pad-left'>\r\n                <MDBTabsContent className='unit-tab-content'>\r\n                    <MDBTabsPane show={verticalActive === 'tabV1'}>\r\n\r\n                    </MDBTabsPane>\r\n                    <MDBTabsPane show={verticalActive === 'tabV2'}>\r\n\r\n                    </MDBTabsPane>\r\n                    <MDBTabsPane show={verticalActive === 'tabV3'}>\r\n                        <BuyerGroup></BuyerGroup>\r\n                    </MDBTabsPane>\r\n                    <MDBTabsPane show={verticalActive === 'tabV4'}>\r\n                        <ProductType></ProductType>\r\n                    </MDBTabsPane>\r\n                    <MDBTabsPane show={verticalActive === 'tabV5'}>\r\n                        <Gender></Gender>\r\n                    </MDBTabsPane>\r\n                    <MDBTabsPane show={verticalActive === 'tabV6'}>\r\n                        <Season></Season>\r\n                    </MDBTabsPane>\r\n                    <MDBTabsPane show={verticalActive === 'tabV7'}>\r\n                        <SizeGrid></SizeGrid>\r\n                    </MDBTabsPane>\r\n                    <MDBTabsPane show={verticalActive === 'tabV9'}>\r\n                        <PrintType></PrintType>\r\n                    </MDBTabsPane>\r\n                    <MDBTabsPane show={verticalActive === 'tabV10'}>\r\n                        <WashingType></WashingType>\r\n                    </MDBTabsPane>\r\n                    <MDBTabsPane show={verticalActive === 'tabV8'}>\r\n                        <EmbType></EmbType>\r\n                    </MDBTabsPane>\r\n                </MDBTabsContent>\r\n            </MDBCol>\r\n        </MDBRow>\r\n    </>\r\n}","/**\r\n * owner : \r\n * author :\r\n */\r\n\r\nimport { useEffect, useState } from 'react';\r\nimport './Administrator.scss';\r\nimport UnitSetUp from './AdministratorLayOuts/UnitSetUp';\r\nimport UserSetUp from './AdministratorLayOuts/UserSetUp';\r\nimport DataSetUp from './AdministratorLayOuts/DataSetUp';\r\n\r\nimport {\r\n    MDBTabs,\r\n    MDBTabsItem,\r\n    MDBTabsLink,\r\n    MDBTabsContent,\r\n    MDBTabsPane,\r\n    MDBRow\r\n} from 'mdb-react-ui-kit';\r\n\r\nexport default function Administrator() {\r\n\r\n    const [basicActive, setBasicActive] = useState('tab1');\r\n    const handleBasicClick = (value) => {\r\n        if (value === basicActive) {\r\n            return;\r\n        }\r\n        setBasicActive(value);\r\n    };\r\n\r\n    useEffect(() => {\r\n\r\n    }, [])\r\n\r\n    return <>\r\n        <MDBTabs className=\"admin-tab\">\r\n            <MDBTabsItem>\r\n                <MDBTabsLink  onClick={() => handleBasicClick('tab1')} active={basicActive === 'tab1'}>\r\n                    <i class=\"fa-solid fa-screwdriver-wrench\"></i> Company Units\r\n                </MDBTabsLink>\r\n                \r\n            </MDBTabsItem>\r\n            <MDBTabsItem>\r\n                <MDBTabsLink onClick={() => handleBasicClick('tab2')} active={basicActive === 'tab2'}>\r\n                    <i class=\"fa-solid fa-users\"></i> Users\r\n                </MDBTabsLink>\r\n            </MDBTabsItem>\r\n            <MDBTabsItem>\r\n                <MDBTabsLink onClick={() => handleBasicClick('tab3')} active={basicActive === 'tab3'}>\r\n                    <i class=\"fa-solid fa-address-book\"></i>  DMAPs Data\r\n                </MDBTabsLink>\r\n\r\n            </MDBTabsItem>\r\n            \r\n        </MDBTabs>\r\n\r\n        <MDBTabsContent className='inner-tab-content'>\r\n            <MDBTabsPane className=\"company-unit-tab\" show={basicActive === 'tab1'}>\r\n                <MDBRow>\r\n                    <UnitSetUp />\r\n                </MDBRow>\r\n            </MDBTabsPane>\r\n            \r\n            <MDBTabsPane className=\"user-tab\" show={basicActive === 'tab2'}>\r\n                <UserSetUp />\r\n            </MDBTabsPane>\r\n            <MDBTabsPane  className=\"data-tab\" show={basicActive === 'tab3'}>\r\n                <DataSetUp />\r\n            </MDBTabsPane>\r\n            \r\n        </MDBTabsContent>\r\n    </>\r\n}","/**\r\n * owner : \r\n * author : \r\n */\r\nimport api from \"./interceptor\";\r\n\r\nconst apiUrl = 'http://3.92.91.120:4000'; // Base URL from environment variable\r\n\r\nclass styleStoreService {\r\n  \r\n  getStyleEntry() {\r\n    return api\r\n      .get(`${apiUrl}/api/getStyleEntry/`) // Use environment variable\r\n      .then((response) => {\r\n        return response;\r\n      })\r\n      .catch((err) => {\r\n        console.error(\"Error fetching style entry:\", err);\r\n      });\r\n  }\r\n  \r\n  saveStyleEntry(payload) {\r\n    return api.post(`${apiUrl}/api/saveStyleEntry/`, payload); // Use environment variable\r\n  }\r\n\r\n  editStyleEntry(payload) {\r\n    return api.post(`${apiUrl}/api/editStyleEntry/`, payload); // Use environment variable\r\n  }\r\n\r\n  deleteStyleEntry(payload) {\r\n    return api.post(`${apiUrl}/api/deleteStyleEntry/`, payload); // Use environment variable\r\n  }\r\n\r\n  getPODetails() {\r\n    return api\r\n      .get(`${apiUrl}/api/getPODetails/`) // Use environment variable\r\n      .then((response) => {\r\n        return response;\r\n      })\r\n      .catch((err) => {\r\n        console.error(\"Error fetching PO details:\", err);\r\n      });\r\n  }\r\n\r\n  savePODetails(payload) {\r\n    return api.post(`${apiUrl}/api/savePODetails/`, payload); // Use environment variable\r\n  }\r\n\r\n  editPODetails(payload) {\r\n    return api.post(`${apiUrl}/api/editPODetails/`, payload); // Use environment variable\r\n  }\r\n\r\n  deletePODetails(payload) {\r\n    return api.post(`${apiUrl}/api/deletePODetails/`, payload); // Use environment variable\r\n  }\r\n\r\n  getStyleLookupDetails() {\r\n    return api\r\n      .get(`${apiUrl}/api/getStyleLookupDetails/`) // Use environment variable\r\n      .then((response) => {\r\n        return response;\r\n      })\r\n      .catch((err) => {\r\n        console.error(\"Error fetching style lookup details:\", err);\r\n      });\r\n  }\r\n\r\n}\r\n\r\nexport default new styleStoreService();\r\n","import React from 'react';\r\nimport { useTable } from 'react-table';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function StyleEntryTable(props) {\r\n    const { data, openEditForm, deleteStyleEntry } = props;\r\n\r\n    const columns = React.useMemo(\r\n        () => [\r\n            {\r\n                Header: 'DMAPS No.',\r\n                accessor: 'Style_No',\r\n                Cell: ({ row }) => (\r\n                    <div\r\n                        className='custom-link'\r\n                        onClick={() => openEditForm(row.original)}\r\n                    >\r\n                        {row.values.Style_No}\r\n                    </div>\r\n                ),\r\n            },\r\n            {\r\n                Header: 'Buyer',\r\n                accessor: 'Buyer_Name',\r\n            },\r\n            {\r\n                Header: 'Buyer Style No.',\r\n                accessor: 'Style_Description',\r\n            },\r\n            {\r\n                Header: 'Size Grid Name',\r\n                accessor: 'Size_Grid_Name',\r\n            },\r\n            {\r\n                Header: 'Product Type',\r\n                accessor: 'Product_Type',\r\n            },\r\n            {\r\n                Header: 'Merchant Name',\r\n                accessor: 'Marchent_Name',\r\n            },\r\n            {\r\n                Header: 'Merchant Contact',\r\n                accessor: 'Marchent_Contact',\r\n            },\r\n            {\r\n                Header: 'Images',\r\n                accessor: 'Style_Images',\r\n                Cell: ({ row }) => {\r\n                    const images = JSON.parse(row.original.Style_Images);\r\n                    return (\r\n                        <div>\r\n                            {images.map((image, index) => (\r\n                                <img\r\n                                    key={index}\r\n                                    src={image}\r\n                                    alt={`Thumbnail ${index}`}\r\n                                    style={{ width: '25px', height: '25px', marginRight: '5px' }}\r\n                                />\r\n                            ))}\r\n                        </div>\r\n                    );\r\n                },\r\n            },\r\n            {\r\n                Header: 'Actions',\r\n                accessor: 'action',\r\n                Cell: ({ row }) => (\r\n                    <>\r\n                        <i\r\n                            className='fa fa-edit pointer'\r\n                            onClick={() => openEditForm(row.original)}\r\n                            title='Edit'\r\n                        ></i>\r\n                        <i\r\n                            className='fa fa-trash ml-15 pointer'\r\n                            onClick={() => deleteStyleEntry(row.original)}\r\n                            title='Delete'\r\n                        ></i>\r\n                    </>\r\n                ),\r\n            },\r\n        ],\r\n        [openEditForm, deleteStyleEntry]\r\n    );\r\n\r\n    const {\r\n        getTableProps,\r\n        getTableBodyProps,\r\n        headerGroups,\r\n        rows,\r\n        prepareRow,\r\n    } = useTable({\r\n        columns,\r\n        data,\r\n    });\r\n\r\n    return (\r\n        <div className='mt-4'>\r\n            <table {...getTableProps()} className=\"table striped\">\r\n                <thead>\r\n                    {headerGroups.map((headerGroup) => (\r\n                        <tr {...headerGroup.getHeaderGroupProps()}>\r\n                            {headerGroup.headers.map((column) => (\r\n                                <th {...column.getHeaderProps()}>{column.render('Header')}</th>\r\n                            ))}\r\n                        </tr>\r\n                    ))}\r\n                </thead>\r\n                <tbody {...getTableBodyProps()}>\r\n                    {rows.map((row) => {\r\n                        prepareRow(row);\r\n                        return (\r\n                            <tr {...row.getRowProps()}>\r\n                                {row.cells.map((cell) => (\r\n                                    <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\r\n                                ))}\r\n                            </tr>\r\n                        );\r\n                    })}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n}\r\n\r\nStyleEntryTable.propTypes = {\r\n    data: PropTypes.array.isRequired,\r\n    openEditForm: PropTypes.func.isRequired,\r\n    deleteStyleEntry: PropTypes.func.isRequired,\r\n};\r\n","import React from 'react';\r\nimport { useTable } from 'react-table';\r\nimport moment from 'moment';\r\n\r\nexport default function PODetailsTable(props) {\r\n    const { data, openEditForm } = props;\r\n\r\n\r\n    const columns = React.useMemo(\r\n        () => [\r\n            {\r\n                Header: 'DMAPS No.',\r\n                accessor: 'Style_No',\r\n            },\r\n            {\r\n                Header: 'Order No.',\r\n                accessor: 'PO_No',\r\n                Cell: ({ row }) => (\r\n                    <div\r\n                        className='custom-link'\r\n                        onClick={() => openEditForm(row.original)}\r\n                    >\r\n                        {row.values.PO_No}\r\n                    </div>\r\n                ),\r\n            },\r\n            {\r\n                Header: (\r\n                    <span title=\"Order Confirmation Number\">\r\n                        OC No.\r\n                    </span>\r\n                ),\r\n                accessor: 'OC_No',\r\n            },\r\n            {\r\n                Header: (\r\n                    <span title=\"Embroidery Type\">\r\n                        Emb. Type\r\n                    </span>\r\n                ),\r\n                accessor: 'Emb_Type',\r\n            },\r\n            {\r\n                Header: 'Print Type',\r\n                accessor: 'Print_Type',\r\n            },\r\n            {\r\n                Header: 'Washing Type',\r\n                accessor: 'Washing_Type',\r\n            },\r\n            {\r\n                Header: 'Shipment Mode',\r\n                accessor: 'Shipment_Mode',\r\n            },\r\n            {\r\n                Header: 'Delivery Date',\r\n                accessor: 'Delivery_Date',\r\n                Cell: ({ value }) => value ? moment(value).format('DD/MM/YYYY') : 'N/A',\r\n            },\r\n            {\r\n                Header: (\r\n                    <span title=\"Plan to Cut Date\">\r\n                        PCD\r\n                    </span>\r\n                ),\r\n                accessor: 'PCD',\r\n                Cell: ({ value }) => value ? moment(value).format('DD/MM/YYYY') : 'N/A',\r\n            },\r\n            {\r\n                Header: 'Actions',\r\n                accessor: 'action',\r\n                Cell: ({ row }) => (\r\n                    <>\r\n                        <i className='fa fa-edit pointer' onClick={() => props.openEditForm(row.original)} title='Edit'> </i>\r\n                        <i className='fa fa-trash ml-15 pointer' onClick={() => props.deletePODetails(row.original)} title='Delete'> </i>\r\n                    </>\r\n                ),\r\n            },\r\n        ],\r\n        [props]\r\n    );\r\n    \r\n    const {\r\n        getTableProps,\r\n        getTableBodyProps,\r\n        headerGroups,\r\n        rows,\r\n        prepareRow,\r\n    } = useTable({\r\n        columns,\r\n        data,\r\n    });\r\n\r\n    // Helper function to calculate the row span and group index for Style_No\r\n    const calculateRowSpansAndGroups = (data) => {\r\n        const rowSpans = {};\r\n        const rowGroups = {};\r\n        let lastStyleNo = null;\r\n        let spanCount = 0;\r\n        let groupIndex = 0;\r\n\r\n        data.forEach((row, index) => {\r\n            const currentStyleNo = row.Style_No;\r\n\r\n            if (currentStyleNo === lastStyleNo) {\r\n                spanCount++;\r\n            } else {\r\n                if (lastStyleNo !== null) {\r\n                    rowSpans[lastStyleNo] = spanCount;\r\n                    rowGroups[lastStyleNo] = groupIndex;\r\n                    groupIndex++;\r\n                }\r\n                lastStyleNo = currentStyleNo;\r\n                spanCount = 1;\r\n            }\r\n\r\n            if (index === data.length - 1) {\r\n                rowSpans[lastStyleNo] = spanCount;\r\n                rowGroups[lastStyleNo] = groupIndex;\r\n            }\r\n        });\r\n\r\n        return { rowSpans, rowGroups };\r\n    };\r\n\r\n    const { rowSpans, rowGroups } = calculateRowSpansAndGroups(data);\r\n\r\n    // Function to determine if the row should be styled as odd or even\r\n    const getRowClassName = (index, styleNo) => {\r\n        const groupIndex = rowGroups[styleNo];\r\n        return groupIndex % 2 === 0 ? 'row-even' : 'row-odd';\r\n    };\r\n\r\n    return (\r\n        <div className='mt-4'>\r\n            <table {...getTableProps()} className=\"table striped\">\r\n                <thead>\r\n                    {headerGroups.map((headerGroup) => (\r\n                        <tr {...headerGroup.getHeaderGroupProps()}>\r\n                            {headerGroup.headers.map((column) => (\r\n                                <th {...column.getHeaderProps()}>{column.render('Header')}</th>\r\n                            ))}\r\n                        </tr>\r\n                    ))}\r\n                </thead>\r\n                <tbody {...getTableBodyProps()}>\r\n                    {rows.map((row, i) => {\r\n                        prepareRow(row);\r\n                        const currentStyleNo = row.original.Style_No;\r\n                        const previousStyleNo = i > 0 ? rows[i - 1].original.Style_No : null;\r\n                        const rowClass = getRowClassName(i, currentStyleNo);\r\n\r\n                        return (\r\n                            <tr {...row.getRowProps()} className={rowClass}>\r\n                                {row.cells.map((cell, cellIndex) => {\r\n                                    if (cellIndex === 0) {\r\n                                        if (i === 0 || currentStyleNo !== previousStyleNo) {\r\n                                            return (\r\n                                                <td style={{ textAlign: 'center', verticalAlign: 'middle' }} {...cell.getCellProps()} rowSpan={rowSpans[currentStyleNo]}>\r\n                                                    {cell.render('Cell')}\r\n                                                </td>\r\n                                            );\r\n                                        } else {\r\n                                            return null; // Skip the cell for merged rows\r\n                                        }\r\n                                    } else {\r\n                                        return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>;\r\n                                    }\r\n                                })}\r\n                            </tr>\r\n                        );\r\n                    })}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { Modal, Button, Form } from 'react-bootstrap';\r\nimport { MDBInput } from 'mdb-react-ui-kit';\r\nimport DatePicker from 'react-datepicker';\r\nimport moment from 'moment';\r\n\r\nconst OrderModal = ({\r\n  show,\r\n  setShow,\r\n  handleClose,\r\n  styleNoList,\r\n  styleNo,\r\n  setStyleNo,\r\n  handleSizeGrid,\r\n  styleNoError,\r\n  BuyerName,\r\n  StyleDescription,\r\n  SizeGridName,\r\n  GenderView,\r\n  ProductType,\r\n  MerchantName,\r\n  MerchantContact,\r\n  fPONo,\r\n  setFPONo,\r\n  fPONoError,\r\n  PONo,\r\n  setPONo,\r\n  PONoError,\r\n  OCNo,\r\n  setOCNo,\r\n  embType,\r\n  setEmbType,\r\n  embTypeList,\r\n  embTypeError,\r\n  printType,\r\n  setPrintType,\r\n  printTypeList,\r\n  printTypeError,\r\n  washingType,\r\n  setWashingType,\r\n  washingTypeList,\r\n  washingTypeError,\r\n  deliveryDate,\r\n  setDeliveryDate,\r\n  deliveryDateError,\r\n  pcd,\r\n  setPCD,\r\n  pcdError,\r\n  shipmentMode,\r\n  setShipmentMode,\r\n  shipmentModeError,\r\n  others,\r\n  setOthers,\r\n  note,\r\n  setNote,\r\n  sizesArray,\r\n  rows,\r\n  setRows,\r\n  addNewRow,\r\n  handleDeleteRow,\r\n  calculateTotal,\r\n  handlePODetails\r\n}) => (\r\n  <Modal\r\n\t\t\t\t\tshow={show}\r\n\t\t\t\t\tonHide={handleClose}\r\n\t\t\t\t\tdialogClassName=\"modal-90w\"\r\n\t\t\t\t\tbackdrop=\"static\"\r\n\t\t\t\t\tkeyboard={false}>\r\n\t\t\t\t\t<Modal.Header closeButton>\r\n\t\t\t\t\t\t<Modal.Title> Add New Order  </Modal.Title>\r\n\t\t\t\t\t</Modal.Header>\r\n\t\t\t\t\t<Modal.Body>\r\n\t\t\t\t\t\t<form onSubmit={handlePODetails}>\r\n\t\t\t\t\t\t\t<div className='row'>\r\n\t\t\t\t\t\t\t\t<div className='col-3'>\r\n\t\t\t\t\t\t\t\t\t<Form.Select className='mb-3' tabindex=\"1\" label='DMAPS No.' onChange={(e) => {\r\n\t\t\t\t\t\t\t\t\t\tsetStyleNo(e.target.value);\r\n\t\t\t\t\t\t\t\t\t\thandleSizeGrid(e.target.value)\r\n\t\t\t\t\t\t\t\t\t}} value={styleNo} name='styleNo'>\r\n\t\t\t\t\t\t\t\t\t\t<option> Select DMAPS No. </option>\r\n\t\t\t\t\t\t\t\t\t\t{styleNoList.map((item) => (\r\n\t\t\t\t\t\t\t\t\t\t\t<option key={item.Style_No} value={item.Style_No}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{item.Style_No}\r\n\t\t\t\t\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t</Form.Select>\r\n\t\t\t\t\t\t\t\t\t{styleNoError && <p style={{ color: 'red' }}>{styleNoError}</p>}\r\n\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t{styleNo ? (\r\n\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t<div className='row'>\r\n\t\t\t\t\t\t\t\t\t\t<div className='col-3'>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"data-row\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<label className='label-read' htmlFor=\"name\">Buyer</label>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span className='span-read'> {BuyerName} </span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div className='col-3'>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"data-row\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<label className='label-read' htmlFor=\"name\">Buyer Style No.</label>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span className='span-read'> {StyleDescription} </span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div className='col-3'>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"data-row\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<label className='label-read' htmlFor=\"name\">Size Grid Name</label>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span className='span-read'> {SizeGridName} </span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div className='col-3'>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"data-row\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<label className='label-read' htmlFor=\"name\">Gender</label>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span className='span-read'> {GenderView} </span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div className='col-3'>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"data-row\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<label className='label-read' htmlFor=\"name\">Product Type</label>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span className='span-read'> {ProductType} </span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div className='col-3'>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"data-row\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<label className='label-read' htmlFor=\"name\">Merchant Name</label>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span className='span-read'> {MerchantName} </span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div className='col-3'>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"data-row\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<label className='label-read' htmlFor=\"name\">Merchant Contact No.</label>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span className='span-read'> {MerchantContact} </span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t) : null}\r\n\t\t\t\t\t\t\t<h6 className='h6'> Order Details </h6>\r\n\t\t\t\t\t\t\t<div className='row'>\r\n\t\t\t\t\t\t\t\t<div className='col-3'>\r\n\t\t\t\t\t\t\t\t\t<MDBInput label='F PO No.' type='text' tabindex=\"2\" wrapperClass='mb-3' onChange={(e) => { setFPONo(e.target.value) }} value={fPONo} name='fPONo' />\r\n\t\t\t\t\t\t\t\t\t{fPONoError && <p style={{ color: 'red' }}>{fPONoError}</p>}\r\n\r\n\t\t\t\t\t\t\t\t\t<MDBInput label='Order No.' type='text' tabindex=\"3\" wrapperClass='mb-3' onChange={(e) => { setPONo(e.target.value) }} value={PONo} name='PONo' />\r\n\t\t\t\t\t\t\t\t\t{PONoError && <p style={{ color: 'red' }}>{PONoError}</p>}\r\n\r\n\t\t\t\t\t\t\t\t\t<MDBInput label='OC No.' type='text' tabindex=\"4\" wrapperClass='mb-3' onChange={(e) => { setOCNo(e.target.value) }} value={OCNo} name='OCNo' />\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t<div className='col-3'>\r\n\t\t\t\t\t\t\t\t\t<div className=\"mb-3\" style={{ position: 'relative' }}>\r\n\t\t\t\t\t\t\t\t\t\t{embType ? <label\r\n\t\t\t\t\t\t\t\t\t\t\thtmlFor=\"embType\"\r\n\t\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tposition: 'absolute',\r\n\t\t\t\t\t\t\t\t\t\t\t\ttop: '-10px',\r\n\t\t\t\t\t\t\t\t\t\t\t\tleft: '10px',\r\n\t\t\t\t\t\t\t\t\t\t\t\tbackgroundColor: 'white',\r\n\t\t\t\t\t\t\t\t\t\t\t\tpadding: '0 5px',\r\n\t\t\t\t\t\t\t\t\t\t\t\tfontSize: '12px',\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\tEmb. Type\r\n\t\t\t\t\t\t\t\t\t\t</label> : ''}\r\n\t\t\t\t\t\t\t\t\t\t<Form.Select className='mb-3' tabindex=\"5\" label='Emb Type' onChange={(e) => { setEmbType(e.target.value) }} value={embType} name='embType'>\r\n\t\t\t\t\t\t\t\t\t\t\t<option> Select Emb Type </option>\r\n\t\t\t\t\t\t\t\t\t\t\t{embTypeList.map((item) => (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<option key={item.id} value={item.Emb_Type}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{item.Emb_Type}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t\t</Form.Select>\r\n\t\t\t\t\t\t\t\t\t\t{embTypeError && <p style={{ color: 'red' }}>{embTypeError}</p>}\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div className=\"mb-3\" style={{ position: 'relative' }}>\r\n\t\t\t\t\t\t\t\t\t\t{printType ? <label\r\n\t\t\t\t\t\t\t\t\t\t\thtmlFor=\"printType\"\r\n\t\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tposition: 'absolute',\r\n\t\t\t\t\t\t\t\t\t\t\t\ttop: '-10px',\r\n\t\t\t\t\t\t\t\t\t\t\t\tleft: '10px',\r\n\t\t\t\t\t\t\t\t\t\t\t\tbackgroundColor: 'white',\r\n\t\t\t\t\t\t\t\t\t\t\t\tpadding: '0 5px',\r\n\t\t\t\t\t\t\t\t\t\t\t\tfontSize: '12px',\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\tPrint Type\r\n\t\t\t\t\t\t\t\t\t\t</label> : ''}\r\n\t\t\t\t\t\t\t\t\t\t<Form.Select className='mb-3' tabindex=\"6\" label='Print Type' onChange={(e) => { setPrintType(e.target.value) }} value={printType} name='printType'>\r\n\t\t\t\t\t\t\t\t\t\t\t<option> Select Print Type </option>\r\n\t\t\t\t\t\t\t\t\t\t\t{printTypeList.map((item) => (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<option key={item.id} value={item.Print_Type}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{item.Print_Type}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t\t</Form.Select>\r\n\t\t\t\t\t\t\t\t\t\t{printTypeError && <p style={{ color: 'red' }}>{printTypeError}</p>}\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t<div className=\"mb-3\" style={{ position: 'relative' }}>\r\n\t\t\t\t\t\t\t\t\t\t{washingType ? <label\r\n\t\t\t\t\t\t\t\t\t\t\thtmlFor=\"washingType\"\r\n\t\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tposition: 'absolute',\r\n\t\t\t\t\t\t\t\t\t\t\t\ttop: '-10px',\r\n\t\t\t\t\t\t\t\t\t\t\t\tleft: '10px',\r\n\t\t\t\t\t\t\t\t\t\t\t\tbackgroundColor: 'white',\r\n\t\t\t\t\t\t\t\t\t\t\t\tpadding: '0 5px',\r\n\t\t\t\t\t\t\t\t\t\t\t\tfontSize: '12px',\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\tWashing Type\r\n\t\t\t\t\t\t\t\t\t\t</label> : ''}\r\n\t\t\t\t\t\t\t\t\t\t<Form.Select className='mb-3' tabindex=\"7\" label='Washing Type' onChange={(e) => { setWashingType(e.target.value) }} value={washingType} name='washingType'>\r\n\t\t\t\t\t\t\t\t\t\t\t<option> Select Washing Type </option>\r\n\t\t\t\t\t\t\t\t\t\t\t{washingTypeList.map((item) => (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<option key={item.id} value={item.Washing_Type}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{item.Washing_Type}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t\t</Form.Select>\r\n\t\t\t\t\t\t\t\t\t\t{washingTypeError && <p style={{ color: 'red' }}>{washingTypeError}</p>}\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='col-3'>\r\n\t\t\t\t\t\t\t\t\t{/* <MDBInput wrapperClass='mb-3' type='date' placeholder=\"dd/mm/yyyy\" tabindex=\"10\" label='Delivery Date' onChange={(e) => { setDeliveryDate(e.target.value) }} value={deliveryDate} name='deliveryDate' /> */}\r\n\r\n\t\t\t\t\t\t\t\t\t<DatePicker\r\n\t\t\t\t\t\t\t\t\t\tselected={deliveryDate}\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"form-control-date\"\r\n\t\t\t\t\t\t\t\t\t\tonChange={(date) => setDeliveryDate(date)} // Correct way to handle date change\r\n\t\t\t\t\t\t\t\t\t\tdateFormat=\"dd/MM/yyyy\"  // Format the display of the date\r\n\t\t\t\t\t\t\t\t\t\tplaceholderText=\"dd/mm/yyyy\"\r\n\r\n\t\t\t\t\t\t\t\t\t\tcustomInput={\r\n\t\t\t\t\t\t\t\t\t\t\t<MDBInput\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\t\t\t\twrapperClass='mb-3'\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Delivery Date'\r\n\t\t\t\t\t\t\t\t\t\t\t\tid=\"deliveryDate\"  // Linking the label with the input\r\n\t\t\t\t\t\t\t\t\t\t\t\ttabIndex=\"10\"  // Correct case for tabindex\r\n\t\t\t\t\t\t\t\t\t\t\t\tname=\"deliveryDate\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={deliveryDate ? moment(deliveryDate).format(\"DD/MM/YYYY\") : ''}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t\t\t{deliveryDateError && <p style={{ color: 'red' }}>{deliveryDateError}</p>}\r\n\r\n\t\t\t\t\t\t\t\t\t{/* <MDBInput wrapperClass='mb-3' type='date' tabindex=\"11\" label='PCD' onChange={(e) => { setPCD(e.target.value) }} value={pcd} name='pcd' /> */}\r\n\r\n\t\t\t\t\t\t\t\t\t<DatePicker\r\n\t\t\t\t\t\t\t\t\t\tselected={pcd}\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"mb-3 form-control-date\"\r\n\t\t\t\t\t\t\t\t\t\tonChange={(date) => setPCD(date)} // Correct way to handle date change\r\n\t\t\t\t\t\t\t\t\t\tdateFormat=\"dd/MM/yyyy\"  // Format the display of the date\r\n\t\t\t\t\t\t\t\t\t\tplaceholderText=\"dd/mm/yyyy\"\r\n\t\t\t\t\t\t\t\t\t\tname=\"pcd\"\r\n\t\t\t\t\t\t\t\t\t\tcustomInput={\r\n\t\t\t\t\t\t\t\t\t\t\t<MDBInput\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='PCD'\r\n\t\t\t\t\t\t\t\t\t\t\t\tid=\"pcd\"  // Linking the label with the input\r\n\t\t\t\t\t\t\t\t\t\t\t\ttabIndex=\"11\"  // Correct case for tabindex\r\n\t\t\t\t\t\t\t\t\t\t\t\tname=\"pcd\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={pcd ? moment(pcd).format(\"DD/MM/YYYY\") : ''}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t{pcdError && <p style={{ color: 'red' }}>{pcdError}</p>}\r\n\r\n\t\t\t\t\t\t\t\t\t<MDBInput wrapperClass='mb-3' type='text' tabindex=\"9\" label='Shipment Mode' onChange={(e) => { setShipmentMode(e.target.value) }} value={shipmentMode} name='shipmentMode' />\r\n\t\t\t\t\t\t\t\t\t{shipmentModeError && <p style={{ color: 'red' }}>{shipmentModeError}</p>}\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t<div className='col-3'>\r\n\t\t\t\t\t\t\t\t\t<MDBInput wrapperClass='mb-3' type='text' tabindex=\"8\" label='Others' onChange={(e) => { setOthers(e.target.value) }} value={others} name='others' />\r\n\r\n\t\t\t\t\t\t\t\t\t<MDBInput style={{ height: \"86px\" }} wrapperClass='mb-3 ' label='Notes' type='textarea' tabindex=\"12\" onChange={(e) => { setNote(e.target.value) }} value={note} name='note' />\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"col-12 mt-20 parentDivStyle\">\r\n\t\t\t\t\t\t\t\t\t{styleNo && sizesArray && sizesArray.length > 0 ? (\r\n\t\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t\t<table border=\"1\" className='table tableStyle'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th style={{ width: '100px' }}>Garment Color</th>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th style={{ width: '100px' }}>Destination Country</th>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{sizesArray.map((sizeKey) => (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th className='thTdStyle' key={sizeKey}>{sizeKey}</th>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th style={{ width: '50px' }}>Total</th>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th style={{ width: '60px' }}>Actions</th>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</thead>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{rows.map((row, rowIndex) => (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={rowIndex}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className='thTdStyle'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"color\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={row.garmentColor || '#000000'}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst updatedRows = [...rows];\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tupdatedRows[rowIndex].garmentColor = e.target.value;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetRows(updatedRows);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className='thTdStyle'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={row.destinationCountry}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst updatedRows = [...rows];\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tupdatedRows[rowIndex].destinationCountry = e.target.value;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetRows(updatedRows);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* Dynamically generate size inputs */}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{sizesArray.map((sizeKey) => (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className='thTdStyle' key={sizeKey}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={row.sizes[sizeKey] || ''}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst updatedRows = [...rows];\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tupdatedRows[rowIndex].sizes[sizeKey] = e.target.value;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tupdatedRows[rowIndex].total = calculateTotal(updatedRows[rowIndex].sizes); // Recalculate total\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetRows(updatedRows);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className='thTdStyle'>{row.total}</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className='thTdStyle'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className='fa fa-trash ml-15 pointer' onClick={() => handleDeleteRow(rowIndex)} title='Delete'> </i>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t\t\t\t\t\t\t</table>\r\n\t\t\t\t\t\t\t\t\t\t\t<Button variant=\"success\" onClick={addNewRow} style={{ float: 'right', width: '5%', marginTop: \"-20PX\" }}> <i className='fa fa-plus fa-1x white'> </i>   </Button>\r\n\t\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t\t) : null}\r\n\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</form>\r\n\t\t\t\t\t</Modal.Body>\r\n\t\t\t\t\t<Modal.Footer>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<Button variant=\"primary\" type='submit' onClick={handlePODetails} style={{ width: '15%' }}>\r\n\t\t\t\t\t\t\tSave\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</Modal.Footer>\r\n\t\t\t\t</Modal>\r\n);\r\n\r\nexport default OrderModal;\r\n","import React from 'react';\r\nimport { Modal, Form, Button } from 'react-bootstrap';\r\nimport { MDBInput } from 'mdbreact';\r\nimport DatePicker from 'react-datepicker';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport moment from 'moment';\r\n\r\nconst EditOrderModal = ({\r\n  isEditFormOpen,\r\n  closeEditForm,\r\n  styleNo,\r\n  styleNoList,\r\n  styleNoError,\r\n  handleSizeGrid,\r\n  setStyleNo,\r\n  BuyerName,\r\n  StyleDescription,\r\n  SizeGridName,\r\n  GenderView,\r\n  ProductType,\r\n  MerchantName,\r\n  MerchantContact,\r\n  fPONo,\r\n  setFPONo,\r\n  fPONoError,\r\n  PONo,\r\n  setPONo,\r\n  PONoError,\r\n  OCNo,\r\n  setOCNo,\r\n  embType,\r\n  setEmbType,\r\n  embTypeList,\r\n  embTypeError,\r\n  printType,\r\n  setPrintType,\r\n  printTypeList,\r\n  printTypeError,\r\n  washingType,\r\n  setWashingType,\r\n  washingTypeList,\r\n  washingTypeError,\r\n  deliveryDate,\r\n  setDeliveryDate,\r\n  deliveryDateError,\r\n  pcd,\r\n  setPCD,\r\n  pcdError,\r\n  shipmentMode,\r\n  setShipmentMode,\r\n  shipmentModeError,\r\n  others,\r\n  setOthers,\r\n  note,\r\n  setNote,\r\n  rows,\r\n  setRows,\r\n  addNewRow,\r\n  handleEditRow,\r\n  handleDeleteRow,\r\n  handleEditStyleEntry,\r\n  calculateTotal,\r\n  sizeKeys,\r\n}) => (\r\n  <Modal show={isEditFormOpen} onHide={closeEditForm} dialogClassName=\"modal-90w\"\r\n\t\t\t\t\tbackdrop=\"static\">\r\n\t\t\t\t\t<Modal.Header closeButton>\r\n\t\t\t\t\t\t<Modal.Title>Edit Order Details </Modal.Title>\r\n\t\t\t\t\t</Modal.Header>\r\n\t\t\t\t\t<Modal.Body>\r\n\t\t\t\t\t\t<form>\r\n\t\t\t\t\t\t\t<div className='row'>\r\n\t\t\t\t\t\t\t\t<div className='col-3'>\r\n\t\t\t\t\t\t\t\t\t<Form.Select className='mb-3' tabindex=\"1\" label='DMAPS No.' onChange={(e) => { setStyleNo(e.target.value); handleSizeGrid(e.target.value) }} value={styleNo} name='styleNo' disabled>\r\n\t\t\t\t\t\t\t\t\t\t<option> Select DMAPS No. </option>\r\n\t\t\t\t\t\t\t\t\t\t{styleNoList.map((item) => (\r\n\t\t\t\t\t\t\t\t\t\t\t<option key={item.Style_No} value={item.Style_No}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{item.Style_No}\r\n\t\t\t\t\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t</Form.Select>\r\n\t\t\t\t\t\t\t\t\t{styleNoError && <p style={{ color: 'red' }}>{styleNoError}</p>}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className='row'>\r\n\r\n\t\t\t\t\t\t\t\t<div className='col-12'>\r\n\t\t\t\t\t\t\t\t\t{styleNo || styleNo != '' ? (\r\n\t\t\t\t\t\t\t\t\t\t<div className='row'>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='col-3'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"data-row\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<label className='label-read' htmlFor=\"name\">Buyer</label>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='span-read'> {BuyerName} </span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='col-3'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"data-row\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<label className='label-read' htmlFor=\"name\">Buyer Style No.</label>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='span-read'> {StyleDescription} </span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='col-3'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"data-row\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<label className='label-read' htmlFor=\"name\">Size Grid Name</label>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='span-read'> {SizeGridName} </span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='col-12'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className='row'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='col-3'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"data-row\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<label className='label-read' htmlFor=\"name\">Gender</label>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='span-read'> {GenderView} </span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='col-3'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"data-row\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<label className='label-read' htmlFor=\"name\">Product Type</label>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='span-read'> {ProductType} </span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='col-3'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"data-row\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<label className='label-read' htmlFor=\"name\">Merchant Name</label>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='span-read'> {MerchantName} </span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='col-3'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"data-row\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<label className='label-read' htmlFor=\"name\">Merchant Contact No.</label>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='span-read'> {MerchantContact} </span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t) : null}\r\n\r\n\t\t\t\t\t\t\t\t\t<h6 className='h6'> Order Details </h6>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t<div className='col-3'>\r\n\t\t\t\t\t\t\t\t\t<MDBInput label='F PO No.' type='text' tabindex=\"2\" wrapperClass='mb-3' onChange={(e) => { setFPONo(e.target.value) }} value={fPONo} name='fPONo' />\r\n\t\t\t\t\t\t\t\t\t{fPONoError && <p style={{ color: 'red' }}>{fPONoError}</p>}\r\n\r\n\t\t\t\t\t\t\t\t\t<MDBInput label='Order No.' type='text' tabindex=\"3\" wrapperClass='mb-3' onChange={(e) => { setPONo(e.target.value) }} value={PONo} name='PONo' />\r\n\t\t\t\t\t\t\t\t\t{PONoError && <p style={{ color: 'red' }}>{PONoError}</p>}\r\n\r\n\t\t\t\t\t\t\t\t\t<MDBInput label='OC No.' type='text' tabindex=\"4\" wrapperClass='mb-3' onChange={(e) => { setOCNo(e.target.value) }} value={OCNo} name='OCNo' />\r\n\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t<div className='col-3'>\r\n\t\t\t\t\t\t\t\t\t<div className=\"mb-3\" style={{ position: 'relative' }}>\r\n\t\t\t\t\t\t\t\t\t\t{embType ? <label\r\n\t\t\t\t\t\t\t\t\t\t\thtmlFor=\"embType\"\r\n\t\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tposition: 'absolute',\r\n\t\t\t\t\t\t\t\t\t\t\t\ttop: '-10px',\r\n\t\t\t\t\t\t\t\t\t\t\t\tleft: '10px',\r\n\t\t\t\t\t\t\t\t\t\t\t\tbackgroundColor: 'white',\r\n\t\t\t\t\t\t\t\t\t\t\t\tpadding: '0 5px',\r\n\t\t\t\t\t\t\t\t\t\t\t\tfontSize: '12px',\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\tEmb. Type\r\n\t\t\t\t\t\t\t\t\t\t</label> : ''}\r\n\t\t\t\t\t\t\t\t\t\t<Form.Select className='mb-3' tabindex=\"5\" label='Emb Type' onChange={(e) => { setEmbType(e.target.value) }} value={embType} name='embType'>\r\n\t\t\t\t\t\t\t\t\t\t\t<option> Select Emb Type </option>\r\n\t\t\t\t\t\t\t\t\t\t\t{embTypeList.map((item) => (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<option key={item.id} value={item.Emb_Type}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{item.Emb_Type}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t\t</Form.Select>\r\n\t\t\t\t\t\t\t\t\t\t{embTypeError && <p style={{ color: 'red' }}>{embTypeError}</p>}\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t<div className=\"mb-3\" style={{ position: 'relative' }}>\r\n\t\t\t\t\t\t\t\t\t\t{printType ? <label\r\n\t\t\t\t\t\t\t\t\t\t\thtmlFor=\"printType\"\r\n\t\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tposition: 'absolute',\r\n\t\t\t\t\t\t\t\t\t\t\t\ttop: '-10px',\r\n\t\t\t\t\t\t\t\t\t\t\t\tleft: '10px',\r\n\t\t\t\t\t\t\t\t\t\t\t\tbackgroundColor: 'white',\r\n\t\t\t\t\t\t\t\t\t\t\t\tpadding: '0 5px',\r\n\t\t\t\t\t\t\t\t\t\t\t\tfontSize: '12px',\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\tPrint Type\r\n\t\t\t\t\t\t\t\t\t\t</label> : ''}\r\n\t\t\t\t\t\t\t\t\t\t<Form.Select className='mb-3' tabindex=\"6\" label='Print Type' onChange={(e) => { setPrintType(e.target.value) }} value={printType} name='printType'>\r\n\t\t\t\t\t\t\t\t\t\t\t<option> Select Print Type </option>\r\n\t\t\t\t\t\t\t\t\t\t\t{printTypeList.map((item) => (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<option key={item.id} value={item.Print_Type}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{item.Print_Type}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t\t</Form.Select>\r\n\t\t\t\t\t\t\t\t\t\t{printTypeError && <p style={{ color: 'red' }}>{printTypeError}</p>}\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t<div className=\"mb-3\" style={{ position: 'relative' }}>\r\n\t\t\t\t\t\t\t\t\t\t{washingType ? <label\r\n\t\t\t\t\t\t\t\t\t\t\thtmlFor=\"washingType\"\r\n\t\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tposition: 'absolute',\r\n\t\t\t\t\t\t\t\t\t\t\t\ttop: '-10px',\r\n\t\t\t\t\t\t\t\t\t\t\t\tleft: '10px',\r\n\t\t\t\t\t\t\t\t\t\t\t\tbackgroundColor: 'white',\r\n\t\t\t\t\t\t\t\t\t\t\t\tpadding: '0 5px',\r\n\t\t\t\t\t\t\t\t\t\t\t\tfontSize: '12px',\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\tWashing Type\r\n\t\t\t\t\t\t\t\t\t\t</label> : ''}\r\n\t\t\t\t\t\t\t\t\t\t<Form.Select className='mb-3' tabindex=\"7\" label='Washing Type' onChange={(e) => { setWashingType(e.target.value) }} value={washingType} name='washingType'>\r\n\t\t\t\t\t\t\t\t\t\t\t<option> Select Washing Type </option>\r\n\t\t\t\t\t\t\t\t\t\t\t{washingTypeList.map((item) => (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<option key={item.id} value={item.Washing_Type}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{item.Washing_Type}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t\t</Form.Select>\r\n\t\t\t\t\t\t\t\t\t\t{washingTypeError && <p style={{ color: 'red' }}>{washingTypeError}</p>}\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='col-3'>\r\n\t\t\t\t\t\t\t\t\t{/* <MDBInput wrapperClass='mb-3' type='date' tabindex=\"10\" label='Delivery Date' onChange={(e) => { setDeliveryDate(e.target.value) }} value={deliveryDate} name='deliveryDate' /> */}\r\n\r\n\t\t\t\t\t\t\t\t\t<DatePicker\r\n\t\t\t\t\t\t\t\t\t\tselected={deliveryDate}\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"form-control-date\"\r\n\t\t\t\t\t\t\t\t\t\tonChange={(date) => setDeliveryDate(date)} // Correct way to handle date change\r\n\t\t\t\t\t\t\t\t\t\tdateFormat=\"dd/MM/yyyy\"  // Format the display of the date\r\n\t\t\t\t\t\t\t\t\t\tplaceholderText=\"dd/mm/yyyy\"\r\n\t\t\t\t\t\t\t\t\t\tcustomInput={\r\n\t\t\t\t\t\t\t\t\t\t\t<MDBInput\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\t\t\t\twrapperClass='mb-3'\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Delivery Date'\r\n\t\t\t\t\t\t\t\t\t\t\t\tid=\"deliveryDate\"  // Linking the label with the input\r\n\t\t\t\t\t\t\t\t\t\t\t\ttabIndex=\"10\"  // Correct case for tabindex\r\n\t\t\t\t\t\t\t\t\t\t\t\tname=\"deliveryDate\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={deliveryDate ? moment(deliveryDate).format(\"DD/MM/YYYY\") : ''}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t{deliveryDateError && <p style={{ color: 'red' }}>{deliveryDateError}</p>}\r\n\r\n\t\t\t\t\t\t\t\t\t{/* <MDBInput wrapperClass='mb-3' type='date' tabindex=\"11\" label='PCD' onChange={(e) => { setPCD(e.target.value) }} value={pcd} name='pcd' /> */}\r\n\r\n\t\t\t\t\t\t\t\t\t<DatePicker\r\n\t\t\t\t\t\t\t\t\t\tselected={pcd}\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"mb-3 form-control-date\"\r\n\t\t\t\t\t\t\t\t\t\tonChange={(date) => setPCD(date)} // Correct way to handle date change\r\n\t\t\t\t\t\t\t\t\t\tdateFormat=\"dd/MM/yyyy\"  // Format the display of the date\r\n\t\t\t\t\t\t\t\t\t\tplaceholderText=\"dd/mm/yyyy\"\r\n\t\t\t\t\t\t\t\t\t\tname=\"pcd\"\r\n\t\t\t\t\t\t\t\t\t\tcustomInput={\r\n\t\t\t\t\t\t\t\t\t\t\t<MDBInput\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='PCD'\r\n\t\t\t\t\t\t\t\t\t\t\t\tid=\"pcd\"  // Linking the label with the input\r\n\t\t\t\t\t\t\t\t\t\t\t\ttabIndex=\"11\"  // Correct case for tabindex\r\n\t\t\t\t\t\t\t\t\t\t\t\tname=\"pcd\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={pcd ? moment(pcd).format(\"DD/MM/YYYY\") : ''}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t\t\t{pcdError && <p style={{ color: 'red' }}>{pcdError}</p>}\r\n\r\n\t\t\t\t\t\t\t\t\t<MDBInput wrapperClass='mb-3' type='text' tabindex=\"9\" label='Shipment Mode' onChange={(e) => { setShipmentMode(e.target.value) }} value={shipmentMode} name='shipmentMode' />\r\n\t\t\t\t\t\t\t\t\t{shipmentModeError && <p style={{ color: 'red' }}>{shipmentModeError}</p>}\r\n\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t<div className='col-3'>\r\n\t\t\t\t\t\t\t\t\t<MDBInput wrapperClass='mb-3' type='text' tabindex=\"8\" label='Others' onChange={(e) => { setOthers(e.target.value) }} value={others} name='others' />\r\n\r\n\t\t\t\t\t\t\t\t\t<MDBInput style={{ height: '86px' }} wrapperClass='mb-3 ' label='Notes' type='textarea' tabindex=\"12\" onChange={(e) => { setNote(e.target.value) }} value={note} name='note' />\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t<div className=\"col-12 mt-20 parentDivStyle\">\r\n\t\t\t\t\t\t\t\t\t<table border=\"1\" cellPadding=\"10\" className='table tableStyle'>\r\n\t\t\t\t\t\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<th style={{ width: '100px' }}>Garment Color</th>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<th style={{ width: '100px' }}>Destination Country</th>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{sizeKeys.map((sizeKey) => (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<th key={sizeKey} className='thTdStyle'>{sizeKey}</th>\r\n\t\t\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t\t\t\t<th style={{ width: '50px' }}>Total</th>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<th style={{ width: '60px' }}>Actions</th>\r\n\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t\t</thead>\r\n\t\t\t\t\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t\t\t\t\t{rows.map((row, rowIndex) => (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<tr key={rowIndex}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<td className='thTdStyle'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{row.isEditable ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"color\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={row.garmentColor}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst updatedRows = [...rows];\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tupdatedRows[rowIndex].garmentColor = e.target.value;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetRows(updatedRows);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbackgroundColor: row.garmentColor,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '25px',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\theight: '25px',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tborderRadius: '4px',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tborder: '1px solid #ccc',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t></div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<td className='thTdStyle'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{row.isEditable ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={row.destinationCountry}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst updatedRows = [...rows];\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tupdatedRows[rowIndex].destinationCountry = e.target.value;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetRows(updatedRows);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trow.destinationCountry\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{/* Dynamically generate size fields */}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{sizeKeys.map((sizeKey) => (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className='thTdStyle' key={sizeKey}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{row.isEditable ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={row.sizes[sizeKey] || ''}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst updatedRows = [...rows];\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tupdatedRows[rowIndex].sizes[sizeKey] = e.target.value;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tupdatedRows[rowIndex].total = calculateTotal(updatedRows[rowIndex].sizes);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetRows(updatedRows);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trow.sizes[sizeKey] || ''\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<td className='thTdStyle'>{row.total}</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"thTdStyle\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* Toggle between Edit and Save buttons based on isEditable */}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{row.isEditable ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"fa fa-save pointer\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={(e) => handleEditStyleEntry(e, 'edit', rowIndex)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttitle=\"Save\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t></i>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"fa fa-edit pointer\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => handleEditRow(rowIndex)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttitle=\"Edit\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t></i>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* Trash icon to delete the row */}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"fa fa-trash ml-15 pointer\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => handleDeleteRow(rowIndex)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttitle=\"Delete\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t></i>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t\t\t\t\t</table>\r\n\t\t\t\t\t\t\t\t\t<Button variant=\"success\" onClick={addNewRow} style={{ float: 'right', width: '5%', marginTop: \"-20PX\" }}> <i className='fa fa-plus fa-1x white'> </i> </Button>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</form>\r\n\t\t\t\t\t</Modal.Body>\r\n\t\t\t\t\t<Modal.Footer>\r\n\t\t\t\t\t\t<Button variant=\"primary\" onClick={(e) => handleEditStyleEntry(e, 'save', '99999')} style={{ width: '15%' }}>\r\n\t\t\t\t\t\t\tSave\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</Modal.Footer>\r\n\t\t\t\t</Modal>\r\n);\r\n\r\nexport default EditOrderModal;\r\n","/**\r\n * owner : \r\n * author :\r\n */\r\n\r\nimport { useEffect, useState } from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Form from 'react-bootstrap/Form';\r\nimport './ProductionOrder.scss';\r\nimport { MDBInput } from 'mdb-react-ui-kit';\r\nimport styleStoreService from \"../../../../../services/styleStoreService\";\r\nimport { trackPromise } from 'react-promise-tracker';\r\nimport PODetailsTable from './ProductionOrderTable';\r\nimport adminService from \"../../../../../services/adminService\"\r\nimport DatePicker from 'react-datepicker';\r\nimport moment from 'moment';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport OrderModal from './OrderModal';\r\nimport EditOrderModal from './EditOrderModal';\r\n\r\nexport default function ProductionOrder() {\r\n\tconst [show, setShow] = useState(false);\r\n\tconst handleClose = () => setShow(false);\r\n\tconst [embType, setEmbType] = useState('')\r\n\tconst [embTypeError, setEmbTypeError] = useState('');\r\n\tconst [washingType, setWashingType] = useState('')\r\n\tconst [washingTypeError, setWashingTypeError] = useState('');\r\n\tconst [note, setNote] = useState('')\r\n\tconst [styleNo, setStyleNo] = useState('')\r\n\tconst [styleNoError, setStyleNoError] = useState('')\r\n\tconst [POId, setPOId] = useState(\"\");\r\n\tconst [fPONo, setFPONo] = useState('')\r\n\tconst [PONo, setPONo] = useState('')\r\n\tconst [PONoError, setPONoError] = useState('')\r\n\tconst [OCNo, setOCNo] = useState('')\r\n\tconst [fPONoError, setFPONoError] = useState('');\r\n\tconst [printType, setPrintType] = useState('')\r\n\tconst [printTypeError, setPrintTypeError] = useState('');\r\n\tconst [others, setOthers] = useState('')\r\n\tconst [shipmentMode, setShipmentMode] = useState('')\r\n\tconst [shipmentModeError, setShipmentModeError] = useState('')\r\n\tconst [deliveryDate, setDeliveryDate] = useState('')\r\n\tconst [deliveryDateError, setDeliveryDateError] = useState('')\r\n\tconst [pcd, setPCD] = useState('')\r\n\tconst [pcdError, setPCDError] = useState('')\r\n\tconst [data, setData] = useState([]);\r\n\tconst [isEditFormOpen, setIsEditFormOpen] = useState(false);\r\n\tconst [styleNoList, setStyleNoList] = useState([]);\r\n\tconst [embTypeList, setEmbTypeList] = useState([]);\r\n\tconst [printTypeList, setPrintTypeList] = useState([]);\r\n\tconst [washingTypeList, setWashingTypeList] = useState([]);\r\n\tconst [rows, setRows] = useState([]);\r\n\tconst [sizeKeys, setSizeKeys] = useState([]);\r\n\tconst [garmentColor, setGarmentColor] = useState('');\r\n\tconst [destinationCountry, setDestinationCountry] = useState('');\r\n\tconst [sizesArray, setSizesArray] = useState([]); // Default sizes\r\n\tconst [sizes, setSizes] = useState(sizesArray.reduce((acc, curr) => ({ ...acc, [curr]: 0 }), {})); // Dynamically initialize sizes state based on sizesArray\r\n\tconst [editingIndex, setEditingIndex] = useState(null);\r\n\tconst [BuyerName, setBuyerName] = useState('');\r\n\tconst [StyleDescription, setStyleDescription] = useState('');\r\n\tconst [SizeGridName, setSizeGridName] = useState('');\r\n\tconst [ProductType, setProductType] = useState('');\r\n\tconst [MerchantName, setMerchantName] = useState('');\r\n\tconst [MerchantContact, setMerchantContact] = useState('');\r\n\tconst [GenderView, setGenderView] = useState('');\r\n\tconst [rowData, setRowData] = useState(null); // Initialize rowData\r\n\t// Calculate total of all sizes\r\n\tconst calculateTotal = (sizes) => {\r\n\t\treturn Object.values(sizes).reduce((sum, size) => sum + (parseInt(size) || 0), 0);\r\n\t};\r\n\r\n\tconst addNewRow = () => {\r\n\t\t// Add a new row\r\n\t\tconst newSizes = sizesArray.reduce((acc, sizeKey) => {\r\n\t\t\tacc[sizeKey] = \"\"; // Initialize each size with an empty string\r\n\t\t\treturn acc;\r\n\t\t}, {});\r\n\r\n\t\tsetRows([...rows, {\r\n\t\t\tgarmentColor,\r\n\t\t\tdestinationCountry,\r\n\t\t\tsizes: newSizes, // Use the new sizes object\r\n\t\t\ttotal: calculateTotal(newSizes),\r\n\t\t\tisEditable: true,\r\n\t\t}]);\r\n\t\t// Reset the form\r\n\t\tsetGarmentColor('#000000');\r\n\t\tsetDestinationCountry(\"\");\r\n\t\tsetSizes({}); // Reset sizes to an empty object\r\n\t};\r\n\r\n\tconst handleEditRow = (rowIndex) => {\r\n\t\tconst updatedRows = [...rows];\r\n\t\tupdatedRows[rowIndex].isEditable = !updatedRows[rowIndex].isEditable; // Toggle edit mode\r\n\t\tsetRows(updatedRows);\r\n\t};\r\n\r\n\tconst handleDeleteRow = (rowIndex) => {\r\n\t\tconst updatedRows = rows.filter((_, index) => index !== rowIndex);\r\n\t\tsetRows(updatedRows);\r\n\t};\r\n\r\n\tconst handleSizesChange = (data) => {\r\n\t\tconst selectedSizes = data.split(',').map(size => size.trim());\r\n\t\tsetSizesArray(selectedSizes);\r\n\t\t// Initialize a new sizes object\r\n\t\tconst initialSizes = selectedSizes.reduce((acc, size) => {\r\n\t\t\tacc[size] = ''; // Default each size value as empty\r\n\t\t\treturn acc;\r\n\t\t}, {});\r\n\r\n\t\t// Reset rows with new sizes\r\n\t\tconst newRow = {\r\n\t\t\tgarmentColor: '#000000',\r\n\t\t\tdestinationCountry: '',\r\n\t\t\tsizes: initialSizes,\r\n\t\t\ttotal: 0, // Initial total is 0\r\n\t\t\tisEditable: false\r\n\t\t};\r\n\r\n\t\tsetRows([newRow]); // Only one row initially\r\n\t};\r\n\r\n\t//  UseEffect to ensure rows are updated when sizesArray changes\r\n\tuseEffect(() => {\r\n\t\tif (sizesArray.length > 0) {\r\n\t\t\tconst initialSizes = sizesArray.reduce((acc, size) => {\r\n\t\t\t\tacc[size] = ''; // Initialize size values as empty strings\r\n\t\t\t\treturn acc;\r\n\t\t\t}, {});\r\n\r\n\t\t\tconst newRow = {\r\n\t\t\t\tgarmentColor: '#000000',\r\n\t\t\t\tdestinationCountry: '',\r\n\t\t\t\tsizes: initialSizes,\r\n\t\t\t\ttotal: 0,\r\n\t\t\t\tisEditable: false\r\n\t\t\t};\r\n\r\n\t\t\t// Set the new row in rows\r\n\t\t\tsetRows([newRow]);\r\n\t\t}\r\n\t}, [sizesArray]);\r\n\r\n\tconst handleSizeGrid = (value) => {\r\n\t\tlet StyleNoList = JSON.parse(sessionStorage.getItem('StyleNoList')) || [];\r\n\t\tlet SizeGridList = JSON.parse(sessionStorage.getItem('StyleGridList')) || [];\r\n\t\tconst sizeGridId = StyleNoList.find(grid => grid.Style_No == value);\r\n\t\tif (sizeGridId) {\r\n\t\t\t// Set other details\r\n\t\t\tsetBuyerName(sizeGridId.Buyer_Name);\r\n\t\t\tsetStyleDescription(sizeGridId.Style_Description);\r\n\t\t\tsetSizeGridName(sizeGridId.Size_Grid_Name);\r\n\t\t\tsetProductType(sizeGridId.Product_Type);\r\n\t\t\tsetMerchantName(sizeGridId.Marchent_Name);\r\n\t\t\tsetMerchantContact(sizeGridId.Marchent_Contact);\r\n\t\t\tsetGenderView(sizeGridId.Gender);\r\n\t\t\tconst sizeGridIdValue = SizeGridList.find(grid => grid.Size_Grid_Id == sizeGridId.Size_Grid);\r\n\t\t\tlet SizeGridValue = sizeGridIdValue ? sizeGridIdValue.Size_Grid_Value : null;\r\n\t\t\t// Ensure SizeGridValue is not null or undefined\r\n\t\t\tif (SizeGridValue) {\r\n\t\t\t\t// Make sure to clean any previous sizes before setting new ones\r\n\t\t\t\tsetSizesArray([]);\r\n\t\t\t\thandleSizesChange(SizeGridValue);\r\n\t\t\t} else {\r\n\t\t\t\tconsole.error(\"Size grid value is not available.\");\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t// Reset the fields if no matching style number is found\r\n\t\t\tsetBuyerName('');\r\n\t\t\tsetStyleDescription('');\r\n\t\t\tsetSizeGridName('');\r\n\t\t\tsetProductType('');\r\n\t\t\tsetMerchantName('');\r\n\t\t\tsetMerchantContact('');\r\n\t\t\tsetGenderView('');\r\n\t\t\tsetRows([]); // Clear existing rows\r\n\t\t\tsetSizesArray([]); // Clear sizes array\r\n\t\t}\r\n\t};\r\n\r\n\tconst handlePODetails = (e) => {\r\n\t\te.preventDefault();\r\n\t\tlet isValid = true;\r\n\t\tif (!embType) {\r\n\t\t\tsetEmbTypeError('Emb Type is required');\r\n\t\t\tisValid = false;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tsetEmbTypeError('');\r\n\t\t}\r\n\r\n\t\tif (!washingType) {\r\n\t\t\tsetWashingTypeError('Washing Type is required');\r\n\t\t\tisValid = false;\r\n\t\t} else {\r\n\t\t\tsetWashingTypeError('');\r\n\t\t}\r\n\r\n\t\tif (!styleNo) {\r\n\t\t\tsetStyleNoError('DMAPS No. is required');\r\n\t\t\tisValid = false;\r\n\t\t} else {\r\n\t\t\tsetStyleNoError('');\r\n\t\t}\r\n\r\n\t\tif (!fPONo) {\r\n\t\t\tsetFPONoError('FPO No. is required');\r\n\t\t\tisValid = false;\r\n\t\t} else {\r\n\t\t\tsetFPONoError('');\r\n\t\t}\r\n\r\n\t\tif (!PONo) {\r\n\t\t\tsetPONoError('Order No. is required');\r\n\t\t\tisValid = false;\r\n\t\t} else {\r\n\t\t\tsetPONoError('');\r\n\t\t}\r\n\r\n\t\tif (!printType) {\r\n\t\t\tsetPrintTypeError('Print Type is required');\r\n\t\t\tisValid = false;\r\n\t\t} else {\r\n\t\t\tsetPrintTypeError('');\r\n\t\t}\r\n\r\n\t\tif (!pcd) {\r\n\t\t\tsetPCDError('PCD is required');\r\n\t\t\tisValid = false;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tsetPCDError('');\r\n\t\t}\r\n\r\n\t\tif (!deliveryDate) {\r\n\t\t\tsetDeliveryDateError('Delivery Date is required');\r\n\t\t\tisValid = false;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tsetDeliveryDateError('');\r\n\t\t}\r\n\r\n\t\tif (!shipmentMode) {\r\n\t\t\tsetShipmentModeError('Shipment Mode is required');\r\n\t\t\tisValid = false;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tsetShipmentModeError('');\r\n\t\t}\r\n\r\n\t\tconst totalSizes = Object.entries(sizes)\r\n\t\t\t.filter(([key]) => key !== 'total') // Exclude 'total' key\r\n\t\t\t.reduce((acc, [_, value]) => {\r\n\t\t\t\tconst parsedValue = parseInt(value);\r\n\t\t\t\treturn acc + (isNaN(parsedValue) ? 0 : parsedValue);\r\n\t\t\t}, 0);\r\n\r\n\t\tif (!isValid) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// const modifiedData = rows.map(item => {\r\n\t\t// \treturn {\r\n\t\t// \t\tgarmentColor: item.garmentColor,\r\n\t\t// \t\tdestinationCountry: item.destinationCountry,\r\n\t\t// \t\ttotal: item.total,\r\n\t\t// \t\t...item.sizes // Spread sizes into the new object\r\n\t\t// \t};\r\n\t\t// });\r\n\r\n\t\t// // Now modifiedData contains the desired structure\r\n\t\t// console.log(modifiedData);\r\n\t\tconst updatedRows = rows.map((row) => ({\r\n\t\t\t...row,\r\n\t\t\tisEditable: false, // Set isEditable to false before saving\r\n\t\t}));\r\n\r\n\t\tlet payload = {\r\n\t\t\t\"Style_No\": styleNo,\r\n\t\t\t\"F_PO_No\": fPONo,\r\n\t\t\t\"PO_No\": PONo,\r\n\t\t\t\"OC_No\": OCNo,\r\n\t\t\t\"Emb_Type\": embType,\r\n\t\t\t\"Print_Type\": printType,\r\n\t\t\t\"Washing_Type\": washingType,\r\n\t\t\t\"Others\": others,\r\n\t\t\t\"Shipment_Mode\": shipmentMode,\r\n\t\t\t\"Delivery_Date\": deliveryDate,\r\n\t\t\t\"PCD\": pcd,\r\n\t\t\t\"Note\": note,\r\n\t\t\t\"Garment_Data\": JSON.stringify(updatedRows)\r\n\t\t}\r\n\r\n\t\ttrackPromise(styleStoreService.savePODetails({ \"data\": [payload] }).then((response) => {\r\n\t\t\t//check login response\r\n\t\t\tif (response.status === 200 && response.data.data.status == \"success\") {\r\n\t\t\t\t// alert(response.data.result);\r\n\t\t\t\tstateValues()\r\n\t\t\t\tgetPOData()\r\n\t\t\t\thandleClose()\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\talert(response.data.data.result);\r\n\t\t\t}\r\n\r\n\t\t}).catch((error) => {\r\n\t\t\t//console.log(error.response.data.error)\r\n\t\t\talert(error.response.data.error);\r\n\t\t})\r\n\t\t);\r\n\r\n\t}\r\n\r\n\tconst getPOData = () => {\r\n\t\ttrackPromise(\r\n\t\t\tstyleStoreService.getPODetails().then((response) => {\r\n\t\t\t\tsetData(response.data.PO_Details)\r\n\t\t\t})\r\n\t\t);\r\n\t}\r\n\r\n\tconst getBasicDetails = () => {\r\n\t\ttrackPromise(\r\n\t\t\tadminService.getBasicDetails().then((response) => {\r\n\t\t\t\tsetStyleNoList(response.data[0].data[0].data.styleNo);\r\n\t\t\t\tsetEmbTypeList(response.data[0].data[0].data.embType)\r\n\t\t\t\tsetPrintTypeList(response.data[0].data[0].data.printType)\r\n\t\t\t\tsetWashingTypeList(response.data[0].data[0].data.washingType)\r\n\t\t\t\tsessionStorage.setItem('StyleNoList', JSON.stringify(response.data[0].data[0].data.styleNo));\r\n\t\t\t\tsessionStorage.setItem('StyleGridList', JSON.stringify(response.data[0].data[0].data.sizeGrid));\r\n\t\t\t})\r\n\t\t);\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tgetBasicDetails();\r\n\t\tgetPOData()\r\n\t}, [])\r\n\r\n\r\n\tfunction stateValues() {\r\n\t\tgetBasicDetails();\r\n\t\tsetNote('');\r\n\t\tsetStyleNo('')\r\n\t\tsetStyleNoError('');\r\n\t\tsetEmbType('')\r\n\t\tsetEmbTypeError('')\r\n\t\tsetWashingType('')\r\n\t\tsetWashingTypeError('')\r\n\t\tsetFPONo('')\r\n\t\tsetFPONoError('')\r\n\t\tsetPONo('')\r\n\t\tsetPONoError('')\r\n\t\tsetOCNo('')\r\n\t\tsetPrintType('')\r\n\t\tsetPrintTypeError('')\r\n\t\tsetOthers('')\r\n\t\tsetShipmentMode('')\r\n\t\tsetShipmentModeError('')\r\n\t\tsetDeliveryDate('')\r\n\t\tsetDeliveryDateError('')\r\n\t\tsetPCD('')\r\n\t\tsetPCDError('')\r\n\t\tsetGarmentColor('#000000');\r\n\t\tsetDestinationCountry('');\r\n\t\tsetSizes({});\r\n\t}\r\n\r\n\tconst openEditForm = (data) => {\r\n\t\t// Reset existing size data before editing\r\n\t\tsetSizesArray([]);\r\n\t\teditFormDetails(data);\r\n\t\tsetIsEditFormOpen(true);\r\n\t};\r\n\r\n\tconst setExistingGarmentData = (data) => {\r\n\t\tsetSizeKeys(data.length > 0 ? Object.keys(data[0].sizes) : []);\r\n\t\tsetRows(data);\r\n\t};\r\n\r\n\tfunction editFormDetails(data) {\r\n\t\tsetStyleNoError('');\r\n\t\t// Set all the relevant fields\r\n\t\tsetPOId(data.PO_Id);\r\n\t\tsetEmbType(data.Emb_Type);\r\n\t\tsetWashingType(data.Washing_Type);\r\n\t\tsetNote(data.Note);\r\n\t\tsetStyleNo(data.Style_No);\r\n\t\tsetFPONo(data.F_PO_No);\r\n\t\tsetPONo(data.PO_No);\r\n\t\tsetOCNo(data.OC_No);\r\n\t\tsetPrintType(data.Print_Type);\r\n\t\tsetOthers(data.Others);\r\n\t\tsetShipmentMode(data.Shipment_Mode);\r\n\t\tsetDeliveryDate(data.Delivery_Date);\r\n\t\tsetPCD(data.PCD);\r\n\t\tsetBuyerName(data.Buyer_Name);\r\n\t\tsetStyleDescription(data.Style_Description);\r\n\t\tsetSizeGridName(data.Size_Grid_Name);\r\n\t\tsetProductType(data.Product_Type);\r\n\t\tsetMerchantName(data.Marchent_Name);\r\n\t\tsetMerchantContact(data.Marchent_Contact);\r\n\t\tsetGenderView(data.Gender);\r\n\r\n\t\t// Parse and set garment data\r\n\t\tconst garmentData = JSON.parse(data.Garment_Data);\r\n\t\tif (garmentData.length !== 0) {\r\n\t\t\tsetExistingGarmentData(garmentData);\r\n\t\t} else {\r\n\t\t\thandleSizeGrid(data.Style_No);\r\n\t\t}\r\n\t}\r\n\r\n\tconst closeEditForm = () => {\r\n\t\tsetIsEditFormOpen(false);\r\n\t};\r\n\r\n\t// Delete Unit Records\r\n\r\n\tconst deletePODetails = (data) => {\r\n\t\tif (window.confirm(\"Are you sure to delete the Style Entry ?\")) {\r\n\t\t\tlet payload = {\r\n\t\t\t\t\"PO_Id\": data.PO_Id\r\n\t\t\t}\r\n\t\t\ttrackPromise(styleStoreService.deletePODetails({ \"data\": [payload] }).then((response) => {\r\n\t\t\t\t//check login response\r\n\t\t\t\tif (response.status === 200) {\r\n\t\t\t\t\tgetPOData()\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\talert(response.data.message);\r\n\t\t\t\t}\r\n\r\n\t\t\t}).catch((error) => {\r\n\t\t\t\t//console.log(error.response.data.error)\r\n\t\t\t\talert(error.response.data.error);\r\n\t\t\t})\r\n\t\t\t);\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleEditStyleEntry = (e, data, index) => {\r\n\r\n\t\te.preventDefault();\r\n\t\tlet isValid = true;\r\n\r\n\t\tif (!embType) {\r\n\t\t\tsetEmbTypeError('Emb Type is required');\r\n\t\t\tisValid = false;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tsetEmbTypeError('');\r\n\t\t}\r\n\r\n\t\tif (!washingType) {\r\n\t\t\tsetWashingTypeError('Washing Type is required');\r\n\t\t\tisValid = false;\r\n\t\t} else {\r\n\t\t\tsetWashingTypeError('');\r\n\t\t}\r\n\r\n\t\tif (!styleNo) {\r\n\t\t\tsetStyleNoError('DMAPS No. is required');\r\n\t\t\tisValid = false;\r\n\t\t} else {\r\n\t\t\tsetStyleNoError('');\r\n\t\t}\r\n\r\n\t\tif (!fPONo) {\r\n\t\t\tsetFPONoError('FPO No. is required');\r\n\t\t\tisValid = false;\r\n\t\t} else {\r\n\t\t\tsetFPONoError('');\r\n\t\t}\r\n\r\n\t\tif (!PONo) {\r\n\t\t\tsetPONoError('Order No. is required');\r\n\t\t\tisValid = false;\r\n\t\t} else {\r\n\t\t\tsetPONoError('');\r\n\t\t}\r\n\r\n\t\tif (!printType) {\r\n\t\t\tsetPrintTypeError('Print Type is required');\r\n\t\t\tisValid = false;\r\n\t\t} else {\r\n\t\t\tsetPrintTypeError('');\r\n\t\t}\r\n\r\n\t\tif (!pcd) {\r\n\t\t\tsetPCDError('PCD is required');\r\n\t\t\tisValid = false;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tsetPCDError('');\r\n\t\t}\r\n\r\n\t\tif (!deliveryDate) {\r\n\t\t\tsetDeliveryDateError('Delivery Date is required');\r\n\t\t\tisValid = false;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tsetDeliveryDateError('');\r\n\t\t}\r\n\r\n\t\tif (!shipmentMode) {\r\n\t\t\tsetShipmentModeError('Shipment Mode is required');\r\n\t\t\tisValid = false;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tsetShipmentModeError('');\r\n\t\t}\r\n\r\n\t\tconst totalSizes = Object.entries(sizes)\r\n\t\t\t.filter(([key]) => key !== 'total') // Exclude 'total' key\r\n\t\t\t.reduce((acc, [_, value]) => {\r\n\t\t\t\tconst parsedValue = parseInt(value);\r\n\t\t\t\treturn acc + (isNaN(parsedValue) ? 0 : parsedValue);\r\n\t\t\t}, 0);\r\n\r\n\t\tif (!isValid) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst updatedRows = rows.map((row) => ({\r\n\t\t\t...row,\r\n\t\t\tisEditable: false, // Set isEditable to false before saving\r\n\t\t}));\r\n\r\n\t\tlet payload = {\r\n\t\t\t\"PO_Id\": POId,\r\n\t\t\t\"Style_No\": styleNo,\r\n\t\t\t\"FPO_No\": fPONo,\r\n\t\t\t\"PO_No\": PONo,\r\n\t\t\t\"OC_No\": OCNo,\r\n\t\t\t\"Emb_Type\": embType,\r\n\t\t\t\"Print_Type\": printType,\r\n\t\t\t\"Washing_Type\": washingType,\r\n\t\t\t\"Others\": others,\r\n\t\t\t\"Shipment_Mode\": shipmentMode,\r\n\t\t\t\"Delivery_Date\": deliveryDate,\r\n\t\t\t\"PCD\": pcd,\r\n\t\t\t\"Note\": note,\r\n\t\t\t\"Garment_Data\": JSON.stringify(updatedRows)\r\n\t\t}\r\n\r\n\t\ttrackPromise(styleStoreService.editPODetails({ \"data\": [payload] }).then((response) => {\r\n\t\t\t//check login response\r\n\t\t\tif (response.status === 200 && response.data.data.status == \"success\") {\r\n\t\t\t\t// alert(response.data.result)\r\n\t\t\t\tgetPOData()\r\n\t\t\t\tif (data == 'save') {\r\n\r\n\t\t\t\t\tcloseEditForm()\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tconst updatedRows = [...rows];\r\n\t\t\t\t\tupdatedRows[index].isEditable = !updatedRows[index].isEditable; // Toggle edit mode\r\n\t\t\t\t\tsetRows(updatedRows);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\talert(response.data.data.result);\r\n\t\t\t}\r\n\r\n\t\t}).catch((error) => {\r\n\t\t\t//console.log(error.response.data.error)\r\n\t\t\talert(error.response.data.error);\r\n\t\t})\r\n\t\t);\r\n\t}\r\n\r\n\treturn <>\r\n\t\t<div className='row'>\r\n\t\t\t<div className='col-8'>\r\n\t\t\t\t<h1 className='h1'> Order Details </h1>\r\n\t\t\t</div>\r\n\t\t\t<div className='col-4 text-right'>\r\n\t\t\t\t<Button className='primary-btn mt-10' onClick={() => { setShow(true); stateValues(); setSizes({}); setRows([]); }}>\r\n\t\t\t\t\t<i className='fa fa-plus fa-white'> </i> New Order\r\n\t\t\t\t</Button>\r\n\r\n\t\t\t\t<OrderModal\r\n\t\t\t\t\tshow={show}\r\n\t\t\t\t\thandleClose={handleClose}\r\n\t\t\t\t\thandlePODetails={handlePODetails}\r\n\t\t\t\t\tstyleNoList={styleNoList}\r\n\t\t\t\t\tembTypeList={embTypeList}\r\n\t\t\t\t\tprintTypeList={printTypeList}\r\n\t\t\t\t\twashingTypeList={washingTypeList}\r\n\t\t\t\t\trows={rows}\r\n\t\t\t\t\tsizesArray={sizesArray}\r\n\t\t\t\t\thandleDeleteRow={handleDeleteRow}\r\n\t\t\t\t\thandleSizeGrid={handleSizeGrid}\r\n\t\t\t\t\taddNewRow={addNewRow}\r\n\t\t\t\t\tcalculateTotal={calculateTotal}\r\n\t\t\t\t\tBuyerName={BuyerName}\r\n\t\t\t\t\tStyleDescription={StyleDescription}\r\n\t\t\t\t\tSizeGridName={SizeGridName}\r\n\t\t\t\t\tGenderView={GenderView}\r\n\t\t\t\t\tProductType={ProductType}\r\n\t\t\t\t\tMerchantName={MerchantName}\r\n\t\t\t\t\tMerchantContact={MerchantContact}\r\n\t\t\t\t\tstyleNo={styleNo}\r\n\t\t\t\t\tsetStyleNo={setStyleNo}\r\n\t\t\t\t\tstyleNoError={styleNoError}\r\n\t\t\t\t\tfPONo={fPONo}\r\n\t\t\t\t\tsetFPONo={setFPONo}\r\n\t\t\t\t\tfPONoError={fPONoError}\r\n\t\t\t\t\tPONo={PONo}\r\n\t\t\t\t\tsetPONo={setPONo}\r\n\t\t\t\t\tPONoError={PONoError}\r\n\t\t\t\t\tOCNo={OCNo}\r\n\t\t\t\t\tsetOCNo={setOCNo}\r\n\t\t\t\t\tembType={embType}\r\n\t\t\t\t\tsetEmbType={setEmbType}\r\n\t\t\t\t\tembTypeError={embTypeError}\r\n\t\t\t\t\tprintType={printType}\r\n\t\t\t\t\tsetPrintType={setPrintType}\r\n\t\t\t\t\tprintTypeError={printTypeError}\r\n\t\t\t\t\twashingType={washingType}\r\n\t\t\t\t\tsetWashingType={setWashingType}\r\n\t\t\t\t\twashingTypeError={washingTypeError}\r\n\t\t\t\t\tdeliveryDate={deliveryDate}\r\n\t\t\t\t\tsetDeliveryDate={setDeliveryDate}\r\n\t\t\t\t\tdeliveryDateError={deliveryDateError}\r\n\t\t\t\t\tpcd={pcd}\r\n\t\t\t\t\tsetPCD={setPCD}\r\n\t\t\t\t\tpcdError={pcdError}\r\n\t\t\t\t\tshipmentMode={shipmentMode}\r\n\t\t\t\t\tsetShipmentMode={setShipmentMode}\r\n\t\t\t\t\tshipmentModeError={shipmentModeError}\r\n\t\t\t\t\tothers={others}\r\n\t\t\t\t\tsetOthers={setOthers}\r\n\t\t\t\t\tnote={note}\r\n\t\t\t\t\tsetNote={setNote}\r\n\t\t\t\t\tadd=\"add\"\r\n\t\t\t\t\tsetRows={setRows}\r\n\t\t\t\t/>\r\n\t\t\t\t\r\n\r\n\r\n\t\t\t</div>\r\n\t\t\t<div className='col-12'>\r\n\r\n\t\t\t\t<PODetailsTable defaultPageSize={10} data={data} openEditForm={openEditForm} deletePODetails={deletePODetails} />\r\n\r\n\t\t\t\t<EditOrderModal\r\n\t\t\t\t\tisEditFormOpen={isEditFormOpen}\r\n\t\t\t\t\tcloseEditForm={closeEditForm}\r\n\t\t\t\t\tstyleNo={styleNo}\r\n\t\t\t\t\tstyleNoList={styleNoList}\r\n\t\t\t\t\tstyleNoError={styleNoError}\r\n\t\t\t\t\thandleSizeGrid={handleSizeGrid}\r\n\t\t\t\t\tsetStyleNo={setStyleNo}\r\n\t\t\t\t\tBuyerName={BuyerName}\r\n\t\t\t\t\tStyleDescription={StyleDescription}\r\n\t\t\t\t\tSizeGridName={SizeGridName}\r\n\t\t\t\t\tGenderView={GenderView}\r\n\t\t\t\t\tProductType={ProductType}\r\n\t\t\t\t\tMerchantName={MerchantName}\r\n\t\t\t\t\tMerchantContact={MerchantContact}\r\n\t\t\t\t\tfPONo={fPONo}\r\n\t\t\t\t\tsetFPONo={setFPONo}\r\n\t\t\t\t\tfPONoError={fPONoError}\r\n\t\t\t\t\tPONo={PONo}\r\n\t\t\t\t\tsetPONo={setPONo}\r\n\t\t\t\t\tPONoError={PONoError}\r\n\t\t\t\t\tOCNo={OCNo}\r\n\t\t\t\t\tsetOCNo={setOCNo}\r\n\t\t\t\t\tembType={embType}\r\n\t\t\t\t\tsetEmbType={setEmbType}\r\n\t\t\t\t\tembTypeList={embTypeList}\r\n\t\t\t\t\tembTypeError={embTypeError}\r\n\t\t\t\t\tprintType={printType}\r\n\t\t\t\t\tsetPrintType={setPrintType}\r\n\t\t\t\t\tprintTypeList={printTypeList}\r\n\t\t\t\t\tprintTypeError={printTypeError}\r\n\t\t\t\t\twashingType={washingType}\r\n\t\t\t\t\tsetWashingType={setWashingType}\r\n\t\t\t\t\twashingTypeList={washingTypeList}\r\n\t\t\t\t\twashingTypeError={washingTypeError}\r\n\t\t\t\t\tdeliveryDate={deliveryDate}\r\n\t\t\t\t\tsetDeliveryDate={setDeliveryDate}\r\n\t\t\t\t\tdeliveryDateError={deliveryDateError}\r\n\t\t\t\t\tpcd={pcd}\r\n\t\t\t\t\tsetPCD={setPCD}\r\n\t\t\t\t\tpcdError={pcdError}\r\n\t\t\t\t\tshipmentMode={shipmentMode}\r\n\t\t\t\t\tsetShipmentMode={setShipmentMode}\r\n\t\t\t\t\tshipmentModeError={shipmentModeError}\r\n\t\t\t\t\tothers={others}\r\n\t\t\t\t\tsetOthers={setOthers}\r\n\t\t\t\t\tnote={note}\r\n\t\t\t\t\tsetNote={setNote}\r\n\t\t\t\t\trows={rows}\r\n\t\t\t\t\tsetRows={setRows}\r\n\t\t\t\t\taddNewRow={addNewRow}\r\n\t\t\t\t\thandleEditRow={handleEditRow}\r\n\t\t\t\t\thandleDeleteRow={handleDeleteRow}\r\n\t\t\t\t\thandleEditStyleEntry={handleEditStyleEntry}\r\n\t\t\t\t\tcalculateTotal={calculateTotal}\r\n\t\t\t\t\tsizeKeys={sizeKeys}\r\n\t\t\t\t/> \r\n\r\n\t\t\t\t\r\n\t\t\t\t\r\n\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</>\r\n}","import React from 'react';\r\nimport { Modal, Form, InputGroup, Button } from 'react-bootstrap';\r\nimport { MDBInput } from 'mdb-react-ui-kit';\r\n\r\nfunction StyleModal({\r\n    show,\r\n    handleClose,\r\n    handleStyleEntry,\r\n    handleEditStyleEntry,\r\n    onHide,\r\n    styleNo,\r\n    setBuyer,\r\n    buyer,\r\n    buyerList,\r\n    setProductType,\r\n    productType,\r\n    productTypeList,\r\n    productTypeError,\r\n    setGender,\r\n    gender,\r\n    genderList,\r\n    genderError,\r\n    setMarchantName,\r\n    marchantName,\r\n    marchantNameError,\r\n    setBuyerOrderRefNo,\r\n    buyerOrderRefNo,\r\n    buyerOrderRefNoError,\r\n    setStyleDescription,\r\n    styleDescription,\r\n    styleDescriptionError,\r\n    setSizeGrid,\r\n    sizeGrid,\r\n    sizeGridList,\r\n    sizeGridError,\r\n    setSeason,\r\n    season,\r\n    seasonList,\r\n    seasonError,\r\n    setMarchantContact,\r\n    marchantContact,\r\n    marchantContactError,\r\n    setNote,\r\n    note,\r\n    handleImageUpload,\r\n    imageUploadError,\r\n    base64Images,\r\n    handleDeleteImage,\r\n    setCurrentIndex,\r\n    currentIndex,\r\n    add\r\n}) {\r\n    return (\r\n        <Modal show={show} onHide={add == 'add' ? handleClose : onHide } dialogClassName=\"modal-90w\" backdrop=\"static\" keyboard={false}>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title> {add == 'add' ? 'Add New Style': \"Edit Style\"} </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <form onSubmit={add == 'add' ? handleStyleEntry : handleEditStyleEntry}>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-4\">\r\n                            {/* DMAPs Style NO\r\n                            <InputGroup className=\"mb-3\" style={{ display: 'flex', alignItems: 'center' }}>\r\n                            <div style={{ width: '40%',paddingRight: '5px' }}>  DMPS Style No.</div>\r\n                                <div style={{ width: '60%' }}>\r\n                                <MDBInput\r\n                                        tabIndex=\"1\"\r\n                                        type=\"text\"\r\n                                        label=\"\"\r\n                                        value={styleNo}\r\n                                        name=\"Style_No\"\r\n                                        style={{ width: '60%' }}\r\n                                    />\r\n                                </div>\r\n                                \r\n                            </InputGroup> */}\r\n                            {/* Buyer Field */}\r\n                            <InputGroup className=\"mb-3\" style={{ display: 'flex', alignItems: 'center' }}>\r\n                                <div style={{ width: '40%', paddingRight: '5px' }}>\r\n                                    Buyer\r\n                                </div>\r\n                                <Form.Select\r\n                                    tabIndex=\"1\"\r\n                                    onChange={(e) => setBuyer(e.target.value)}\r\n                                    value={buyer}\r\n                                    name=\"Buyer\"\r\n                                    style={{ width: '60%' }}\r\n                                >\r\n                                    <option></option>\r\n                                    {buyerList.map((item) => (\r\n                                        <option key={item.Buyer_Id} value={item.Buyer_Id}>\r\n                                            {item.Buyer_Name}\r\n                                        </option>\r\n                                    ))}\r\n                                </Form.Select>\r\n                            </InputGroup>\r\n\r\n                             {/* Buyer Style No. Field */}\r\n                             <InputGroup className=\"mb-3\" style={{ display: 'flex', alignItems: 'center' }}>\r\n                                <div style={{ width: '40%',paddingRight: '5px' }}>Buyer Style No.</div>\r\n                                <div style={{ width: '60%' }}>\r\n                                    <MDBInput\r\n                                        tabIndex=\"4\"\r\n                                        type=\"text\"\r\n                                        label=\"\"\r\n                                        onChange={(e) => setStyleDescription(e.target.value)}\r\n                                        value={styleDescription}\r\n                                        name=\"styleDescription\"\r\n                                        style={{ width: '100%' }}\r\n                                    />\r\n                                </div>\r\n                            </InputGroup>\r\n                            {styleDescriptionError && <p style={{ color: 'red' }}>{styleDescriptionError}</p>}\r\n\r\n                            {/* Style Description Field */}\r\n                            <InputGroup className=\"mb-3\" style={{ display: 'flex', alignItems: 'center' }}>\r\n                                <div style={{ width: '40%',paddingRight: '5px' }}>\r\n                                    Style Description\r\n                                </div>\r\n                                <Form.Select\r\n                                    tabIndex=\"1\"\r\n                                    onChange={(e) => setProductType(e.target.value)}\r\n                                    value={productType}\r\n                                    name=\"productType\"\r\n                                    style={{ width: '60%' }}\r\n                                >\r\n                                    <option></option>\r\n                                    {productTypeList.map((item) => (\r\n                                        <option key={item.id} value={item.Product_Type}>\r\n                                            {item.Product_Type}\r\n                                        </option>\r\n                                    ))}\r\n                                </Form.Select>\r\n                            </InputGroup>\r\n                            {productTypeError && <p style={{ color: 'red' }}>{productTypeError}</p>}\r\n\r\n                            {/* Gender Field */}\r\n                            <InputGroup className=\"mb-3\" style={{ display: 'flex', alignItems: 'center' }}>\r\n                                <div style={{ width: '40%', paddingRight: '5px' }}>\r\n                                    Style Gender\r\n                                </div>\r\n                                <Form.Select\r\n                                    tabIndex=\"1\"\r\n                                    onChange={(e) => setGender(e.target.value)}\r\n                                    value={gender}\r\n                                    name=\"gender\"\r\n                                    style={{ width: '60%' }}\r\n                                >\r\n                                    <option></option>\r\n                                    {genderList.map((item) => (\r\n                                        <option key={item.id} value={item.Gender}>\r\n                                            {item.Gender}\r\n                                        </option>\r\n                                    ))}\r\n                                </Form.Select>\r\n                            </InputGroup>\r\n                            {genderError && <p style={{ color: 'red' }}>{genderError}</p>}\r\n                        </div>\r\n\r\n                        <div className=\"col-4\">\r\n                           {/* Season Field */}\r\n                           <InputGroup className=\"mb-3\" style={{ display: 'flex', alignItems: 'center' }}>\r\n                                <div style={{ width: '40%', paddingRight: '5px' }}>Season</div>\r\n                                <Form.Select\r\n                                    tabIndex=\"1\"\r\n                                    onChange={(e) => setSeason(e.target.value)}\r\n                                    value={season}\r\n                                    name=\"season\"\r\n                                    style={{ width: '60%' }}\r\n                                >\r\n                                    <option></option>\r\n                                    {seasonList.map((item) => (\r\n                                        <option key={item.id} value={item.Season_Name}>\r\n                                            {item.Season_Name}\r\n                                        </option>\r\n                                    ))}\r\n                                </Form.Select>\r\n                            </InputGroup>\r\n                            {seasonError && <p style={{ color: 'red' }}>{seasonError}</p>}\r\n\r\n                            {/* Size Grid Field */}\r\n                            <InputGroup className=\"mb-3\" style={{ display: 'flex', alignItems: 'center' }}>\r\n                                <div style={{ width: '40%',paddingRight: '5px' }}>Size Grid</div>\r\n                                <Form.Select\r\n                                    tabIndex=\"1\"\r\n                                    onChange={(e) => setSizeGrid(e.target.value)}\r\n                                    value={sizeGrid}\r\n                                    name=\"sizeGrid\"\r\n                                    style={{ width: '60%' }}\r\n                                >\r\n                                    <option></option>\r\n                                    {sizeGridList.map((item) => (\r\n                                        <option key={item.Size_Grid_Id} value={item.Size_Grid_Id}>\r\n                                            {item.Size_Grid_Name}\r\n                                        </option>\r\n                                    ))}\r\n                                </Form.Select>\r\n                            </InputGroup>\r\n                            {sizeGridError && <p style={{ color: 'red' }}>{sizeGridError}</p>}\r\n\r\n                            {/* Buyer Order Ref. No. Field */}\r\n                            <InputGroup className=\"mb-3\" style={{ display: 'flex', alignItems: 'center' }}>\r\n                                <div style={{ width: '40%', paddingRight: '5px' }}>\r\n                                    Buyer Ref. No.\r\n                                </div>\r\n                                <div style={{ width: '60%' }}>\r\n                                    <MDBInput\r\n                                        wrapperClass=\"flex-grow-1\"\r\n                                        tabIndex=\"2\"\r\n                                        type=\"text\"\r\n                                        onChange={(e) => setBuyerOrderRefNo(e.target.value)}\r\n                                        value={buyerOrderRefNo}\r\n                                        name=\"buyerOrderRefNo\"\r\n                                        style={{ width: '100%' }}\r\n                                    />\r\n                                </div>\r\n                                \r\n                            </InputGroup>\r\n                            { buyerOrderRefNoError && <p style={{ color: 'red' }}>{buyerOrderRefNoError}</p> }\r\n\r\n                             {/* Merchant Name Field */}\r\n                             <InputGroup className=\"mb-3\" style={{ display: 'flex', alignItems: 'center' }}>\r\n                                <div style={{ width: '40%', paddingRight: '5px' }}>\r\n                                    Merchant Name\r\n                                </div>\r\n                                <div style={{ width: '60%' }}>\r\n                                    <MDBInput\r\n                                        wrapperClass=\"flex-grow-1\"\r\n                                        tabIndex=\"9\"\r\n                                        type=\"text\"\r\n                                        onChange={(e) => setMarchantName(e.target.value)}\r\n                                        value={marchantName}\r\n                                        name=\"marchantName\"\r\n                                        style={{ width: '100%' }}\r\n                                    />\r\n                                </div>\r\n                            </InputGroup>\r\n                            {marchantNameError && <p style={{ color: 'red' }}>{marchantNameError}</p>}\r\n\r\n                            {/* Merchant Contact No. Field */}\r\n                            {/* <InputGroup className=\"mb-3\" style={{ display: 'flex', alignItems: 'center' }}>\r\n                                <div style={{ width: '40%', paddingRight: '5px' }}>Merchant Contact No.</div>\r\n                                <div style={{ width: '60%' }}>\r\n                                    <MDBInput\r\n                                        wrapperClass=\"mb-3\"\r\n                                        type=\"number\"\r\n                                        tabIndex=\"10\"\r\n                                        label=\"\"\r\n                                        onChange={(e) => setMarchantContact(e.target.value)}\r\n                                        value={marchantContact}\r\n                                        name=\"marchantContact\"\r\n                                        style={{ width: '100%' }}\r\n                                    />\r\n                                </div>\r\n                            </InputGroup>\r\n                            {marchantContactError && <p style={{ color: 'red' }}>{marchantContactError}</p>} */}\r\n\r\n                        </div>\r\n\r\n                        {/* <div className=\"col-4\">\r\n                            <div>\r\n                                <div className=\"mb-3\">\r\n                                    <label htmlFor=\"imageUpload\" className=\"attach-image-button\">\r\n                                        <i className=\"fa fa-paperclip\" aria-hidden=\"true\"></i> Images (Max 6)\r\n                                    </label>\r\n                                    <input type=\"file\" id=\"imageUpload\" accept=\"image/*\" multiple onChange={handleImageUpload} className=\"form-control\" style={{ display: 'none' }} />\r\n                                    {imageUploadError && <p style={{ color: 'red' }}>{imageUploadError}</p>}\r\n                                </div>\r\n\r\n                                <div style={{ display: 'flex', justifyContent: 'center', marginTop: '20px' }}>\r\n                                    {base64Images.map((image, index) => (\r\n                                        <div key={index} style={{ position: 'relative' }}>\r\n                                            <img\r\n                                                src={image}\r\n                                                alt={`Thumbnail ${index + 1}`}\r\n                                                style={{ width: '80px', height: '80px', borderRadius: '5px', margin: '0 5px', cursor: 'pointer' }}\r\n                                                onClick={() => setCurrentIndex(index)}\r\n                                                className={index === currentIndex ? 'active' : ''}\r\n                                            />\r\n                                            <button onClick={(event) => handleDeleteImage(index, event)} style={{ position: 'absolute', top: '5px', right: '5px', background: 'transparent', border: 'none', cursor: 'pointer' }}>\r\n                                                <i className=\"fa fa-trash\" style={{ color: 'red', position: 'absolute', top: '-10px', right: '-10px' }}></i>\r\n                                            </button>\r\n                                        </div>\r\n                                    ))}\r\n                                </div>\r\n                            </div>\r\n                        </div> */}\r\n\r\n                        {/* <div className=\"col-4\">\r\n                            <div>\r\n                                <div className=\"mb-3\">\r\n                                    <label htmlFor=\"imageUpload\" className=\"attach-image-button\">\r\n                                        <i className=\"fa fa-paperclip\" aria-hidden=\"true\"></i> Images (Front, Back, Optional)\r\n                                    </label>\r\n                                    <input\r\n                                        type=\"file\"\r\n                                        id=\"imageUpload\"\r\n                                        accept=\"image/*\"\r\n                                        multiple\r\n                                        onChange={handleImageUpload}\r\n                                        className=\"form-control\"\r\n                                        style={{ display: 'none' }}\r\n                                    />\r\n                                    {imageUploadError && <p style={{ color: 'red' }}>{imageUploadError}</p>}\r\n                                </div>\r\n\r\n                                <div style={{ display: 'flex', justifyContent: 'center', marginTop: '20px' }}>\r\n                                    {[\"Front\", \"Back\", \"Optional\"].map((label, index) => (\r\n                                        <div key={index} style={{ position: 'relative', margin: '0 10px' }}>\r\n                                            {base64Images[index] ? (\r\n                                                <div>\r\n                                                    <img\r\n                                                        src={base64Images[index]}\r\n                                                        alt={`${label} Thumbnail`}\r\n                                                        style={{ width: '80px', height: '80px', borderRadius: '5px', cursor: 'pointer' }}\r\n                                                        onClick={() => setCurrentIndex(index)}\r\n                                                        className={index === currentIndex ? 'active' : ''}\r\n                                                    />\r\n                                                    <button\r\n                                                        onClick={(event) => handleDeleteImage(index, event)}\r\n                                                        style={{ position: 'absolute', top: '5px', right: '5px', background: 'transparent', border: 'none', cursor: 'pointer' }}\r\n                                                    >\r\n                                                        <i className=\"fa fa-trash\" style={{ color: 'red' }}></i>\r\n                                                    </button>\r\n                                                </div>\r\n                                            ) : (\r\n                                                <div className=\"upload-button\"> {label} Image </div>\r\n                                            )}\r\n                                        </div>\r\n                                    ))}\r\n                                </div>\r\n                            </div>\r\n                        </div> */}\r\n\r\n                        <div className=\"col-4\">\r\n                            <div>\r\n                                <div style={{ display: 'flex', justifyContent: 'center', marginTop: '20px' }}>\r\n                                    {[\"Front\", \"Back\", \"Optional\"].map((label, index) => (\r\n                                        <div key={index} className='image-section'>\r\n                                            {base64Images[index] ? (\r\n                                                <div>\r\n                                                    <img\r\n                                                        src={base64Images[index]}\r\n                                                        alt={`${label} Thumbnail`}\r\n                                                        style={{ width: '80px', height: '80px', borderRadius: '5px', cursor: 'pointer' }}\r\n                                                        onClick={() => setCurrentIndex(index)}\r\n                                                        className={index === currentIndex ? 'active' : ''}\r\n                                                    />\r\n                                                    <button\r\n                                                        onClick={(event) => handleDeleteImage(index, event)}\r\n                                                        style={{\r\n                                                            position: 'absolute',\r\n                                                            top: '5px',\r\n                                                            right: '5px',\r\n                                                            background: 'transparent',\r\n                                                            border: 'none',\r\n                                                            cursor: 'pointer'\r\n                                                        }}\r\n                                                    >\r\n                                                        <i className=\"fa fa-trash\" style={{ color: 'red' }}></i>\r\n                                                    </button>\r\n                                                </div>\r\n                                            ) : (\r\n                                                <label htmlFor={`imageUpload-${index}`} className=\"upload-button\" style={{ cursor: 'pointer' }}>\r\n                                                    {label} Image\r\n                                                </label>\r\n                                            )}\r\n                                            <input\r\n                                                type=\"file\"\r\n                                                id={`imageUpload-${index}`}\r\n                                                accept=\"image/*\"\r\n                                                onChange={(e) => handleImageUpload(e, index)}\r\n                                                style={{ display: 'none' }}\r\n                                            />\r\n                                        </div>\r\n                                    ))}\r\n                                </div>\r\n                                {imageUploadError && <p style={{ color: 'red', textAlign: 'center' }}>{imageUploadError}</p>}\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                        <div className='col-8'>\r\n                             {/* Notes Field */}\r\n                             <InputGroup className=\"mb-3\" style={{ display: 'flex', alignItems: 'center' }}>\r\n                                <div style={{ width: '19%', paddingRight: '5px' }}>Note/Remarks</div>\r\n                                <div style={{ width: '81%' }}>\r\n                                    <MDBInput\r\n                                        type=\"textarea\"\r\n                                        tabIndex=\"12\"\r\n                                        label=\"\"\r\n                                        onChange={(e) => setNote(e.target.value)}\r\n                                        value={note}\r\n                                        name=\"note\"\r\n                                        style={{ width: '100%' }}\r\n                                    />\r\n                                </div>\r\n                            </InputGroup>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button variant=\"primary\" type=\"submit\" onClick={add == 'add' ? handleStyleEntry : handleEditStyleEntry} style={{ width: '15%' }}>\r\n                    {add == 'add' ? 'save' : 'Update'}\r\n                </Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n}\r\n\r\nexport default StyleModal;\r\n","/**\r\n * owner : \r\n * author :\r\n */\r\n\r\nimport { useEffect, useState } from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Form from 'react-bootstrap/Form';\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\r\nimport Tooltip from 'react-bootstrap/Tooltip';\r\n\r\n\r\nimport './StyleEntry.scss';\r\n\r\nimport {\r\n\tMDBTabs,\r\n\tMDBTabsItem,\r\n\tMDBTabsLink,\r\n\tMDBTabsContent,\r\n\tMDBTabsPane,\r\n\tMDBCol,\r\n\tMDBInput\r\n} from 'mdb-react-ui-kit';\r\n\r\nimport styleStoreService from \"../../../../services/styleStoreService\";\r\nimport { trackPromise } from 'react-promise-tracker';\r\nimport StyleEntryTable from './StyleEntryTable';\r\nimport adminService from \"../../../../services/adminService\"\r\n\r\nimport ProductionOrder from './PO_Details/ProductionOrder';\r\nimport StyleModal from './StyleModal';\r\n\r\nexport default function StyleEntry() {\r\n\r\n\tconst [show, setShow] = useState(false);\r\n\tconst handleClose = () => setShow(false);\r\n\r\n\tconst [verticalActive, setVerticalActive] = useState('tabV1');\r\n\tconst [buyerOrderRefNo, setBuyerOrderRefNo] = useState('')\r\n\tconst [buyerOrderRefNoError, setBuyerOrderRefNoError] = useState('');\r\n\tconst [season, setSeason] = useState('')\r\n\tconst [seasonError, setSeasonError] = useState('');\r\n\tconst [note, setNote] = useState('')\r\n\tconst [noteError, setNoteError] = useState('');\r\n\tconst [productType, setProductType] = useState('')\r\n\tconst [productTypeError, setProductTypeError] = useState('');\r\n\tconst [gender, setGender] = useState('')\r\n\tconst [genderError, setGenderError] = useState('');\r\n\tconst [marchantName, setMarchantName] = useState('')\r\n\tconst [marchantNameError, setMarchantNameError] = useState('');\r\n\tconst [styleNo, setStyleNo] = useState('')\r\n\tconst [StyleNoError, setStyleNoError] = useState('');\r\n\tconst [styleDescription, setStyleDescription] = useState('')\r\n\tconst [styleDescriptionError, setStyleDescriptionError] = useState('');\r\n\tconst [sizeGrid, setSizeGrid] = useState('')\r\n\tconst [sizeGridError, setSizeGridError] = useState('');\r\n\tconst [marchantContact, setMarchantContact] = useState('')\r\n\tconst [marchantContactError, setMarchantContactError] = useState('');\r\n\tconst [buyer, setBuyer] = useState('');\r\n\tconst [buyerList, setBuyerList] = useState([]);\r\n\tconst [genderList, setGenderList] = useState([]);\r\n\tconst [sizeGridList, setSizeGridList] = useState([]);\r\n\tconst [seasonList, setSeasonList] = useState([]);\r\n\tconst [nextStyleNumber, setNextStyleNumber] = useState([]);\r\n\tconst [productTypeList, setProductTypeList] = useState([]);\r\n\tconst [data, setData] = useState([]);\r\n\tconst [isEditFormOpen, setIsEditFormOpen] = useState(false);\r\n\tconst [styleId, setStyleEntryId] = useState(\"\");\r\n\r\n\tconst [base64Images, setBase64Images] = useState([]);\r\n\tconst [currentIndex, setCurrentIndex] = useState(0);\r\n\tconst [imageUploadError, setImageUploadError] = useState(null);\r\n\r\n\r\n\tconst handleVerticalClick = (value) => {\r\n\t\tif (value === verticalActive) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tsetVerticalActive(value);\r\n\t};\r\n\r\n\tconst handleImageUpload = (event) => {\r\n\t\tconst files = event.target.files;\r\n\t\tconst totalFiles = files.length + base64Images.length; // Calculate total number of files after upload\r\n\r\n\t\tif (totalFiles > 6) {\r\n\t\t\tsetImageUploadError(\"You can only upload a maximum of 6 images.\");\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Reset error if it was previously set\r\n\t\tsetImageUploadError(null);\r\n\r\n\t\t// Array to store base64 encoded images\r\n\t\tconst base64ImagesArray = [...base64Images]; // Copy existing images\r\n\r\n\t\t// Iterate through each selected file\r\n\t\tfor (let i = 0; i < files.length; i++) {\r\n\t\t\tconst reader = new FileReader();\r\n\t\t\tconst file = files[i];\r\n\r\n\t\t\t// Closure to capture the file information\r\n\t\t\treader.onload = (e) => {\r\n\t\t\t\tconst base64Image = e.target.result;\r\n\t\t\t\tbase64ImagesArray.push(base64Image);\r\n\r\n\t\t\t\t// Check if all images are processed\r\n\t\t\t\tif (base64ImagesArray.length === totalFiles) {\r\n\t\t\t\t\t// All images are converted to base64\r\n\t\t\t\t\t// Now you can save base64ImagesArray to your state\r\n\t\t\t\t\tsetBase64Images(base64ImagesArray);\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t\t// Read the image file as a data URL\r\n\t\t\treader.readAsDataURL(file);\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleNext = () => {\r\n\t\tsetCurrentIndex((prevIndex) => (prevIndex === base64Images.length - 1 ? 0 : prevIndex + 1));\r\n\t};\r\n\r\n\tconst handlePrevious = () => {\r\n\t\tsetCurrentIndex((prevIndex) => (prevIndex === 0 ? base64Images.length - 1 : prevIndex - 1));\r\n\t};\r\n\r\n\tconst handleDeleteImage = (indexToDelete, event) => {\r\n\t\tevent.preventDefault(); // Prevent default form submission\r\n\r\n\t\t// Clear file input value\r\n\t\tconst fileInput = document.getElementById('imageUpload');\r\n\t\tfileInput.value = '';\r\n\r\n\t\t// Filter out the image at the specified index\r\n\t\tconst updatedImages = base64Images.filter((_, index) => index !== indexToDelete);\r\n\t\tsetBase64Images(updatedImages);\r\n\t};\r\n\r\n\r\n\tconst handleStyleEntry = (e) => {\r\n\t\te.preventDefault();\r\n\t\tlet isValid = true;\r\n\r\n\t\tif (!buyerOrderRefNo) {\r\n\t\t\tsetBuyerOrderRefNoError('Buyer Order Ref. No. is required');\r\n\t\t\tisValid = false;\r\n\t\t} else if (/[^a-zA-Z0-9]/.test(buyerOrderRefNo)) {\r\n\t\t\tsetBuyerOrderRefNoError('Short Name cannot contain spaces or special characters');\r\n\t\t\tisValid = false;\r\n\t\t} else {\r\n\t\t\tsetBuyerOrderRefNoError('');\r\n\t\t}\r\n\r\n\t\tif (!season) {\r\n\t\t\tsetSeasonError('Season is required');\r\n\t\t\tisValid = false;\r\n\t\t} else {\r\n\t\t\tsetSeasonError('');\r\n\t\t}\r\n\r\n\t\tif (!productType) {\r\n\t\t\tsetProductTypeError('Product Type is required');\r\n\t\t\tisValid = false;\r\n\t\t} else {\r\n\t\t\tsetProductTypeError('');\r\n\t\t}\r\n\r\n\t\tif (!gender) {\r\n\t\t\tsetGenderError('Gender is required');\r\n\t\t\tisValid = false;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tsetGenderError('');\r\n\t\t}\r\n\r\n\t\tif (!marchantName) {\r\n\t\t\tsetMarchantNameError('Merchant Name is required');\r\n\t\t\tisValid = false;\r\n\t\t} else if (!/^[a-zA-Z0-9 ]+$/.test(marchantName)) {\r\n\t\t\tsetMarchantNameError('Merchant Name must contain only alphanumeric characters and spaces');\r\n\t\t\tisValid = false;\r\n\t\t} else {\r\n\t\t\tsetMarchantNameError('');\r\n\t\t}\r\n\r\n\r\n\t\tif (!styleDescription) {\r\n\t\t\tsetStyleDescriptionError('Buyer Style No is required');\r\n\t\t\tisValid = false;\r\n\t\t} else {\r\n\t\t\tsetStyleDescriptionError('');\r\n\t\t}\r\n\r\n\t\tif (!sizeGrid) {\r\n\t\t\tsetSizeGridError('Size Grid is required');\r\n\t\t\tisValid = false;\r\n\t\t} else {\r\n\t\t\tsetSizeGridError('');\r\n\t\t}\r\n\r\n\r\n\t\t// if (!marchantContact) {\r\n\t\t// \tsetMarchantContactError('Mail id is required');\r\n\t\t// \tisValid = false;\r\n\t\t// } else if (!/^[6789]\\d{9}$/.test(marchantContact)) {\r\n\t\t// \tsetMarchantContactError('Please enter a valid 10-digit Indian mobile number');\r\n\t\t// \tisValid = false;\r\n\t\t// } else {\r\n\t\t// \tsetMarchantContactError('');\r\n\t\t// }\r\n\r\n\t\tif (!isValid) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tlet payload = {\r\n\t\t\t\"Buyer_Group_Id\": buyer,\r\n\t\t\t\"Buyer_Order_Ref_No\": buyerOrderRefNo,\r\n\t\t\t\"Season\": season,\r\n\t\t\t\"Product_Type\": productType,\r\n\t\t\t\"Gender\": gender,\r\n\t\t\t\"Marchent_Name\": marchantName,\r\n\t\t\t\"Style_Description\": styleDescription,\r\n\t\t\t\"Size_Grid\": sizeGrid,\r\n\t\t\t\"Marchent_Contact\": marchantContact,\r\n\t\t\t\"Note\": note,\r\n\t\t\t\"Style_Images\": JSON.stringify(base64Images)\r\n\t\t}\r\n\r\n\t\ttrackPromise(styleStoreService.saveStyleEntry({ \"data\": [payload] }).then((response) => {\r\n\t\t\t//check login response\r\n\t\t\tif (response.status === 200 && response.data.data.status == \"success\") {\r\n\t\t\t\t// alert(response.data.result);\r\n\t\t\t\tstateValues()\r\n\t\t\t\tgetStyleEntryData()\r\n\t\t\t\thandleClose()\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\talert(response.data.data.result);\r\n\t\t\t}\r\n\r\n\t\t}).catch((error) => {\r\n\t\t\t//console.log(error.response.data.error)\r\n\t\t\talert(error.response.data.error);\r\n\t\t})\r\n\t\t);\r\n\r\n\t}\r\n\tconst getStyleEntryData = () => {\r\n\t\ttrackPromise(\r\n\t\t\tstyleStoreService.getStyleEntry().then((response) => {\r\n\t\t\t\tsetData(response.data.Style_Entry)\r\n\t\t\t})\r\n\t\t);\r\n\t}\r\n\r\n\tconst getBasicDetails = () => {\r\n\t\ttrackPromise(\r\n\t\t\tadminService.getBasicDetails().then((response) => {\r\n\t\t\t\tsetBuyerList(response.data[0].data[0].data.buyer);\r\n\t\t\t\tsetGenderList(response.data[0].data[0].data.gender)\r\n\t\t\t\tsetSizeGridList(response.data[0].data[0].data.sizeGrid)\r\n\t\t\t\tsetProductTypeList(response.data[0].data[0].data.productType)\r\n\t\t\t\tsetSeasonList(response.data[0].data[0].data.season)\r\n\t\t\t\tsetNextStyleNumber(response.data[0].data[0].data.nextStyleNumber[0].Next_Style_No)\r\n\r\n\t\t\t})\r\n\t\t);\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tgetBasicDetails();\r\n\t\tgetStyleEntryData()\r\n\t}, [])\r\n\r\n\r\n\tfunction stateValues() {\r\n\r\n\t\tsetSeasonError('');\r\n\t\tsetNoteError('');\r\n\t\tsetProductTypeError('');\r\n\t\tsetGenderError('');\r\n\t\tsetMarchantNameError('');\r\n\t\tsetStyleNoError('');\r\n\t\tsetStyleDescriptionError('');\r\n\t\tsetSizeGridError('');\r\n\t\tsetMarchantContactError('');\r\n\t\tsetBuyerOrderRefNo('')\r\n\t\tsetSeason('')\r\n\t\tsetNote('')\r\n\t\tsetProductType('')\r\n\t\tsetGender('')\r\n\t\tsetMarchantName('')\r\n\t\tsetStyleNo('')\r\n\t\tsetStyleEntryId('')\r\n\t\tsetStyleDescription('')\r\n\t\tsetBuyer('')\r\n\t\tsetSizeGrid('')\r\n\t\tsetMarchantContact('')\r\n\t\tsetBase64Images([])\r\n\t}\r\n\r\n\tuseEffect((\r\n\r\n\t) => { }, [])\r\n\r\n\r\n\tconst iconActionHandler = (cell, row, rowIndex) => {\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<i className=\"fas fa-edit action-icon\" title=\"Edit\" > </i>\r\n\t\t\t</>\r\n\t\t);\r\n\t};\r\n\tconst openEditForm = (data) => {\r\n\t\teditFormDetails(data)\r\n\t\tsetIsEditFormOpen(true);\r\n\t};\r\n\tfunction editFormDetails(data) {\r\n\r\n\t\tsetSeasonError('');\r\n\t\tsetNoteError('');\r\n\t\tsetProductTypeError('');\r\n\t\tsetGenderError('');\r\n\t\tsetMarchantNameError('');\r\n\t\tsetStyleNoError('');\r\n\t\tsetStyleDescriptionError('');\r\n\t\tsetSizeGridError('');\r\n\t\tsetMarchantContactError('');\r\n\t\tsetBuyerOrderRefNo(data.Buyer_Order_Ref_No)\r\n\t\tsetSeason(data.Season)\r\n\t\tsetNote(data.Note)\r\n\t\tsetProductType(data.Product_Type)\r\n\t\tsetGender(data.Gender)\r\n\t\tsetMarchantName(data.Marchent_Name)\r\n\t\tsetStyleNo(data.Style_No)\r\n\t\tsetStyleDescription(data.Style_Description)\r\n\t\tsetBuyer(data.Buyer_Group_Id)\r\n\t\tsetSizeGrid(data.Size_Grid)\r\n\t\tsetMarchantContact(data.Marchent_Contact)\r\n\t\tsetBase64Images(JSON.parse(data.Style_Images))\r\n\t}\r\n\tconst closeEditForm = () => {\r\n\t\tsetIsEditFormOpen(false);\r\n\t};\r\n\r\n\t// Delete Unit Records\r\n\r\n\tconst deleteStyleEntry = (data) => {\r\n\t\tif (window.confirm(\"Are you sure to delete the Style Entry ?\")) {\r\n\t\t\tlet payload = {\r\n\t\t\t\t\"Style_No\": data.Style_No\r\n\t\t\t}\r\n\t\t\ttrackPromise(styleStoreService.deleteStyleEntry({ \"data\": [payload] }).then((response) => {\r\n\t\t\t\t//check login response\r\n\t\t\t\tif (response.status === 200) {\r\n\t\t\t\t\tgetStyleEntryData()\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\talert(response.data.message);\r\n\t\t\t\t}\r\n\r\n\t\t\t}).catch((error) => {\r\n\t\t\t\t//console.log(error.response.data.error)\r\n\t\t\t\talert(error.response.data.error);\r\n\t\t\t})\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tconst handleEditStyleEntry = (e) => {\r\n\r\n\t\te.preventDefault();\r\n\t\tlet isValid = true;\r\n\r\n\t\tif (!buyerOrderRefNo) {\r\n\t\t\tsetBuyerOrderRefNoError('Buyer Order Ref. No. is required');\r\n\t\t\tisValid = false;\r\n\t\t} else if (/[^a-zA-Z0-9]/.test(buyerOrderRefNo)) {\r\n\t\t\tsetBuyerOrderRefNoError('Short Name cannot contain spaces or special characters');\r\n\t\t\tisValid = false;\r\n\t\t} else {\r\n\t\t\tsetBuyerOrderRefNoError('');\r\n\t\t}\r\n\r\n\t\tif (!season) {\r\n\t\t\tsetSeasonError('Season is required');\r\n\t\t\tisValid = false;\r\n\t\t} else {\r\n\t\t\tsetSeasonError('');\r\n\t\t}\r\n\r\n\t\tif (!productType) {\r\n\t\t\tsetProductTypeError('Product Type is required');\r\n\t\t\tisValid = false;\r\n\t\t} else {\r\n\t\t\tsetProductTypeError('');\r\n\t\t}\r\n\r\n\t\tif (!gender) {\r\n\t\t\tsetGenderError('Gender is required');\r\n\t\t\tisValid = false;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tsetGenderError('');\r\n\t\t}\r\n\r\n\t\tif (!marchantName) {\r\n\t\t\tsetMarchantNameError('Merchant Name is required');\r\n\t\t\tisValid = false;\r\n\t\t} else if (!/^[a-zA-Z0-9 ]+$/.test(marchantName)) {\r\n\t\t\tsetMarchantNameError('Merchant Name must contain only alphanumeric characters and spaces');\r\n\t\t\tisValid = false;\r\n\t\t} else {\r\n\t\t\tsetMarchantNameError('');\r\n\t\t}\r\n\r\n\r\n\t\tif (!styleDescription) {\r\n\t\t\tsetStyleDescriptionError('Buyer Style No is required');\r\n\t\t\tisValid = false;\r\n\t\t} else {\r\n\t\t\tsetStyleDescriptionError('');\r\n\t\t}\r\n\r\n\t\tif (!sizeGrid) {\r\n\t\t\tsetSizeGridError('Size Grid is required');\r\n\t\t\tisValid = false;\r\n\t\t} else {\r\n\t\t\tsetSizeGridError('');\r\n\t\t}\r\n\r\n\r\n\t\t// if (!marchantContact) {\r\n\t\t// \tsetMarchantContactError('Mail id is required');\r\n\t\t// \tisValid = false;\r\n\t\t// } else if (!/^[6789]\\d{9}$/.test(marchantContact)) {\r\n\t\t// \tsetMarchantContactError('Please enter a valid 10-digit Indian mobile number');\r\n\t\t// \tisValid = false;\r\n\t\t// } else {\r\n\t\t// \tsetMarchantContactError('');\r\n\t\t// }\r\n\r\n\r\n\t\tif (!isValid) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tlet payload = {\r\n\t\t\t\"Buyer_Group_Id\": buyer,\r\n\t\t\t\"Buyer_Order_Ref_No\": buyerOrderRefNo,\r\n\t\t\t\"Season\": season,\r\n\t\t\t\"Product_Type\": productType,\r\n\t\t\t\"Gender\": gender,\r\n\t\t\t\"Marchent_Name\": marchantName,\r\n\t\t\t\"Style_No\": styleNo,\r\n\t\t\t\"Style_Description\": styleDescription,\r\n\t\t\t\"Size_Grid\": sizeGrid,\r\n\t\t\t\"Marchent_Contact\": marchantContact,\r\n\t\t\t\"Note\": note,\r\n\t\t\t\"Style_Images\": JSON.stringify(base64Images)\r\n\t\t}\r\n\r\n\t\ttrackPromise(styleStoreService.editStyleEntry({ \"data\": [payload] }).then((response) => {\r\n\t\t\t//check login response\r\n\t\t\tif (response.status === 200 && response.data.data.status == \"success\") {\r\n\t\t\t\t// alert(response.data.result)\r\n\t\t\t\tgetStyleEntryData()\r\n\t\t\t\tcloseEditForm()\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\talert(response.data.data.result);\r\n\t\t\t}\r\n\r\n\t\t}).catch((error) => {\r\n\t\t\t//console.log(error.response.data.error)\r\n\t\t\talert(error.response.data.error);\r\n\t\t})\r\n\t\t);\r\n\r\n\t}\r\n\r\n\treturn <>\r\n\t\t<MDBCol size='1' style={{ width: \"13%\" }} className='no-pad-right'>\r\n\t\t\t<MDBTabs className='flex-column text-center vertical-tab'>\r\n\t\t\t\t<MDBTabsItem className=\"vertical-link\">\r\n\t\t\t\t\t<MDBTabsLink onClick={() => handleVerticalClick('tabV1')} active={verticalActive === 'tabV1'}>\r\n\t\t\t\t\t\tStyle Details\r\n\t\t\t\t\t</MDBTabsLink>\r\n\t\t\t\t</MDBTabsItem>\r\n\r\n\t\t\t\t<MDBTabsItem className=\"vertical-link\">\r\n\t\t\t\t\t<MDBTabsLink onClick={() => handleVerticalClick('tabV2')} active={verticalActive === 'tabV2'}>\r\n\t\t\t\t\t\tOrder Details\r\n\t\t\t\t\t</MDBTabsLink>\r\n\t\t\t\t</MDBTabsItem>\r\n\r\n\t\t\t</MDBTabs>\r\n\t\t</MDBCol>\r\n\t\t<MDBCol size='11' style={{ width: \"87%\" }} className='no-pad-left'>\r\n\t\t\t<MDBTabsContent className='unit-tab-content'>\r\n\t\t\t\t<MDBTabsPane show={verticalActive === 'tabV1'}>\r\n\t\t\t\t\t<div className='row'>\r\n\t\t\t\t\t\t<div className='col-8'>\r\n\t\t\t\t\t\t\t<h1 className='h1'> Style Details </h1>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='col-4 text-right'>\r\n\t\t\t\t\t\t\t<Button className='primary-btn mt-10' onClick={() => { setShow(true); stateValues() }}>\r\n\t\t\t\t\t\t\t\t<i className='fa fa-plus fa-white'> </i> New Style\r\n\t\t\t\t\t\t\t</Button>\r\n\r\n\t\t\t\t\t\t\t<StyleModal\r\n\t\t\t\t\t\t\t\tshow={show}\r\n\t\t\t\t\t\t\t\thandleClose={handleClose}\r\n\t\t\t\t\t\t\t\thandleStyleEntry={handleStyleEntry}\r\n\t\t\t\t\t\t\t\tstyleNo={setStyleNo}\r\n\t\t\t\t\t\t\t\tsetBuyer={setBuyer}\r\n\t\t\t\t\t\t\t\tbuyer={buyer}\r\n\t\t\t\t\t\t\t\tbuyerList={buyerList}\r\n\t\t\t\t\t\t\t\tsetProductType={setProductType}\r\n\t\t\t\t\t\t\t\tproductType={productType}\r\n\t\t\t\t\t\t\t\tproductTypeList={productTypeList}\r\n\t\t\t\t\t\t\t\tproductTypeError={productTypeError}\r\n\t\t\t\t\t\t\t\tsetGender={setGender}\r\n\t\t\t\t\t\t\t\tgender={gender}\r\n\t\t\t\t\t\t\t\tgenderList={genderList}\r\n\t\t\t\t\t\t\t\tgenderError={genderError}\r\n\t\t\t\t\t\t\t\tsetMarchantName={setMarchantName}\r\n\t\t\t\t\t\t\t\tmarchantName={marchantName}\r\n\t\t\t\t\t\t\t\tmarchantNameError={marchantNameError}\r\n\t\t\t\t\t\t\t\tsetBuyerOrderRefNo={setBuyerOrderRefNo}\r\n\t\t\t\t\t\t\t\tbuyerOrderRefNo={buyerOrderRefNo}\r\n\t\t\t\t\t\t\t\tbuyerOrderRefNoError={buyerOrderRefNoError}\r\n\t\t\t\t\t\t\t\tsetStyleDescription={setStyleDescription}\r\n\t\t\t\t\t\t\t\tstyleDescription={styleDescription}\r\n\t\t\t\t\t\t\t\tstyleDescriptionError={styleDescriptionError}\r\n\t\t\t\t\t\t\t\tsetSizeGrid={setSizeGrid}\r\n\t\t\t\t\t\t\t\tsizeGrid={sizeGrid}\r\n\t\t\t\t\t\t\t\tsizeGridList={sizeGridList}\r\n\t\t\t\t\t\t\t\tsizeGridError={sizeGridError}\r\n\t\t\t\t\t\t\t\tsetSeason={setSeason}\r\n\t\t\t\t\t\t\t\tseason={season}\r\n\t\t\t\t\t\t\t\tseasonList={seasonList}\r\n\t\t\t\t\t\t\t\tseasonError={seasonError}\r\n\t\t\t\t\t\t\t\tsetMarchantContact={setMarchantContact}\r\n\t\t\t\t\t\t\t\tmarchantContact={marchantContact}\r\n\t\t\t\t\t\t\t\tmarchantContactError={marchantContactError}\r\n\t\t\t\t\t\t\t\tsetNote={setNote}\r\n\t\t\t\t\t\t\t\tnote={note}\r\n\t\t\t\t\t\t\t\thandleImageUpload={handleImageUpload}\r\n\t\t\t\t\t\t\t\timageUploadError={imageUploadError}\r\n\t\t\t\t\t\t\t\tbase64Images={base64Images}\r\n\t\t\t\t\t\t\t\thandleDeleteImage={handleDeleteImage}\r\n\t\t\t\t\t\t\t\tsetCurrentIndex={setCurrentIndex}\r\n\t\t\t\t\t\t\t\tcurrentIndex={currentIndex}\r\n\t\t\t\t\t\t\t\tadd = \"add\"\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='col-12'>\r\n\r\n\t\t\t\t\t\t\t<StyleEntryTable defaultPageSize={10} data={data} openEditForm={openEditForm} deleteStyleEntry={deleteStyleEntry} />\r\n\r\n\t\t\t\t\t\t\t<StyleModal\r\n\t\t\t\t\t\t\t\tshow={isEditFormOpen}\r\n\t\t\t\t\t\t\t\tonHide={closeEditForm}\r\n\t\t\t\t\t\t\t\thandleEditStyleEntry={handleEditStyleEntry}\r\n\t\t\t\t\t\t\t\tsetBuyer={setBuyer}\r\n\t\t\t\t\t\t\t\tstyleNo={setStyleNo}\r\n\t\t\t\t\t\t\t\tbuyer={buyer}\r\n\t\t\t\t\t\t\t\tbuyerList={buyerList}\r\n\t\t\t\t\t\t\t\tsetProductType={setProductType}\r\n\t\t\t\t\t\t\t\tproductType={productType}\r\n\t\t\t\t\t\t\t\tproductTypeList={productTypeList}\r\n\t\t\t\t\t\t\t\tproductTypeError={productTypeError}\r\n\t\t\t\t\t\t\t\tsetGender={setGender}\r\n\t\t\t\t\t\t\t\tgender={gender}\r\n\t\t\t\t\t\t\t\tgenderList={genderList}\r\n\t\t\t\t\t\t\t\tgenderError={genderError}\r\n\t\t\t\t\t\t\t\tsetMarchantName={setMarchantName}\r\n\t\t\t\t\t\t\t\tmarchantName={marchantName}\r\n\t\t\t\t\t\t\t\tmarchantNameError={marchantNameError}\r\n\t\t\t\t\t\t\t\tsetBuyerOrderRefNo={setBuyerOrderRefNo}\r\n\t\t\t\t\t\t\t\tbuyerOrderRefNo={buyerOrderRefNo}\r\n\t\t\t\t\t\t\t\tbuyerOrderRefNoError={buyerOrderRefNoError}\r\n\t\t\t\t\t\t\t\tsetStyleDescription={setStyleDescription}\r\n\t\t\t\t\t\t\t\tstyleDescription={styleDescription}\r\n\t\t\t\t\t\t\t\tstyleDescriptionError={styleDescriptionError}\r\n\t\t\t\t\t\t\t\tsetSizeGrid={setSizeGrid}\r\n\t\t\t\t\t\t\t\tsizeGrid={sizeGrid}\r\n\t\t\t\t\t\t\t\tsizeGridList={sizeGridList}\r\n\t\t\t\t\t\t\t\tsizeGridError={sizeGridError}\r\n\t\t\t\t\t\t\t\tsetSeason={setSeason}\r\n\t\t\t\t\t\t\t\tseason={season}\r\n\t\t\t\t\t\t\t\tseasonList={seasonList}\r\n\t\t\t\t\t\t\t\tseasonError={seasonError}\r\n\t\t\t\t\t\t\t\tsetMarchantContact={setMarchantContact}\r\n\t\t\t\t\t\t\t\tmarchantContact={marchantContact}\r\n\t\t\t\t\t\t\t\tmarchantContactError={marchantContactError}\r\n\t\t\t\t\t\t\t\tsetNote={setNote}\r\n\t\t\t\t\t\t\t\tnote={note}\r\n\t\t\t\t\t\t\t\thandleImageUpload={handleImageUpload}\r\n\t\t\t\t\t\t\t\timageUploadError={imageUploadError}\r\n\t\t\t\t\t\t\t\tbase64Images={base64Images}\r\n\t\t\t\t\t\t\t\thandleDeleteImage={handleDeleteImage}\r\n\t\t\t\t\t\t\t\tsetCurrentIndex={setCurrentIndex}\r\n\t\t\t\t\t\t\t\tcurrentIndex={currentIndex}\r\n\t\t\t\t\t\t\t\tadd = \"edit\"\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</MDBTabsPane>\r\n\r\n\t\t\t\t<MDBTabsPane show={verticalActive === 'tabV2'}>\r\n\t\t\t\t\t<ProductionOrder />\r\n\t\t\t\t</MDBTabsPane>\r\n\t\t\t</MDBTabsContent>\r\n\t\t</MDBCol>\r\n\r\n\t</>\r\n}","import React from 'react';\r\nimport { useTable } from 'react-table';\r\nimport moment from 'moment';\r\n\r\nexport default function StyleLookupTable(props) {\r\n    const data = props.data;\r\n\r\n    const columns = React.useMemo(\r\n        () => [\r\n            {\r\n                Header: 'Images',\r\n                accessor: 'Style_Images',\r\n                Cell: ({ row }) => {\r\n                    const firstImage = JSON.parse(row.original.Style_Images)[0];\r\n                    return (\r\n                        <div>\r\n                            <img\r\n                                src={firstImage}\r\n                                alt=\"First Thumbnail\"\r\n                                style={{ width: '25px', height: '25px', marginRight: '5px' }}\r\n                            />\r\n                        </div>\r\n                    );\r\n                },\r\n            },\r\n            {\r\n                Header: 'Buyer',\r\n                accessor: 'Buyer_Name',\r\n            },\r\n            {\r\n                Header: 'Style No.',\r\n                accessor: 'Style_No',\r\n            },\r\n            {\r\n                Header: 'Description',\r\n                accessor: 'Style_Description',\r\n            },\r\n            {\r\n                Header: 'Product Type',\r\n                accessor: 'Product_Type',\r\n            },\r\n            {\r\n                Header: 'Gender',\r\n                accessor: 'Gender',\r\n            },\r\n            {\r\n                Header: 'PO No',\r\n                accessor: 'PO_No',\r\n            },\r\n            // New columns for color and order quantity\r\n\t\t\t{\r\n\t\t\t\tHeader: 'Color',\r\n\t\t\t\taccessor: row => {\r\n\t\t\t\t\tif (row && row.Garment_Data) {\r\n\t\t\t\t\t\tconst garmentData = JSON.parse(row.Garment_Data);\r\n\t\t\t\t\t\tif (garmentData.length > 0) {\r\n\t\t\t\t\t\t\treturn garmentData.map((color, index) => (\r\n\t\t\t\t\t\t\t\t<ul key={index} className='ul-table'>\r\n\t\t\t\t\t\t\t\t\t<li style={{ border: '0px solid #d1cece', textAlign: 'center' }}>\r\n\r\n                                        <div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tbackgroundColor: color.garmentColor,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '25px',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\theight: '25px',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tborderRadius: '4px',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tborder: '1px solid #ccc',\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n                                            ></div>\r\n                                    </li>\r\n\t\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn ''; // Return an empty string if Garment_Data is undefined, null, or empty\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tHeader: 'Order Qty',\r\n\t\t\t\taccessor: row => {\r\n\t\t\t\t\tif (row && row.Garment_Data) {\r\n\t\t\t\t\t\tconst garmentData = JSON.parse(row.Garment_Data);\r\n\t\t\t\t\t\tif (garmentData.length > 0) {\r\n\t\t\t\t\t\t\treturn garmentData.map((qty, index) => (\r\n\t\t\t\t\t\t\t\t<ul key={index} className='ul-table'>\r\n\t\t\t\t\t\t\t\t\t<li style={{ border: '1px solid #d1cece', textAlign: 'center'}}>{qty.total}</li>\r\n\t\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn ''; // Return an empty string if Garment_Data is undefined, null, or empty\r\n\t\t\t\t},\r\n\t\t\t},\r\n            {\r\n                Header: 'Total',\r\n                accessor: (row) => {\r\n                    if (row && row.Garment_Data) {\r\n                        const garmentData = JSON.parse(row.Garment_Data);\r\n                        if (garmentData.length > 0) {\r\n                            // Calculate the total quantity for each style\r\n                            let totalQty = 0;\r\n                            garmentData.forEach((garment) => {\r\n                                totalQty += parseInt(garment.total);\r\n                            });\r\n                            return totalQty;\r\n                        }\r\n                    }\r\n                    return ''; // Return an empty string if Garment_Data is undefined, null, or empty\r\n                },\r\n            },\r\n            {\r\n                Header: 'Delivery Date',\r\n                accessor: 'Delivery_Date',\r\n                Cell: ({ value }) => value ? moment(value).format('DD/MM/YYYY') : 'N/A',\r\n            },\r\n            {\r\n                Header: 'Merchant Name',\r\n                accessor: 'Marchent_Name',\r\n            }                           \r\n        ],\r\n        []\r\n    );\r\n\r\n    const {\r\n        getTableProps,\r\n        getTableBodyProps,\r\n        headerGroups,\r\n        rows,\r\n        prepareRow,\r\n    } = useTable({\r\n        columns,\r\n        data,\r\n    });\r\n\r\n    return (\r\n        <div className='mt-4'>\r\n            <table {...getTableProps()} className=\"table table-lookup striped\" striped>\r\n                <thead>\r\n                    {headerGroups.map((headerGroup) => (\r\n                        <tr {...headerGroup.getHeaderGroupProps()}>\r\n                            {headerGroup.headers.map((column) => (\r\n                                <th {...column.getHeaderProps()}>{column.render('Header')}</th>\r\n                            ))}\r\n                        </tr>\r\n                    ))}\r\n                </thead>\r\n                <tbody {...getTableBodyProps()}>\r\n                    {rows.map((row) => {\r\n                        prepareRow(row);\r\n                        return (\r\n                            <tr {...row.getRowProps()}>\r\n                                {row.cells.map((cell) => {\r\n                                    return (\r\n                                        <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\r\n                                    );\r\n                                })}\r\n                            </tr>\r\n                        );\r\n                    })}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n}\r\n","/**\r\n * owner : \r\n * author :\r\n */\r\n\r\nimport { useEffect, useState } from 'react';\r\n\r\nimport './StyleLookup.scss';\r\n\r\n\r\nimport styleStoreService from \"../../../../services/styleStoreService\";\r\nimport { trackPromise } from 'react-promise-tracker';\r\nimport StyleLookupTable from './StyleLookupTable';\r\n\r\nexport default function StyleLookup() {\r\n\r\n\tconst [data, setData] = useState([]);\r\n\t\r\n\tconst getStyleLookupData = () => {\r\n\t\ttrackPromise(\r\n\t\t\tstyleStoreService.getStyleLookupDetails().then((response) => {\r\n\t\t\t\tsetData(response.data.Style_Lookup)\r\n\t\t\t})\r\n\t\t);\r\n\t}\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tgetStyleLookupData()\r\n\t}, [])\r\n\r\n\r\n\treturn <>\r\n\t\t\t <StyleLookupTable defaultPageSize={10} data={data} />\r\n\t</>\r\n}","import React, { useState, useEffect } from \"react\";\r\n\r\nimport { TreeTable, TreeState } from 'cp-react-tree-table';\r\nimport './StyleDashboard.scss';\r\n\r\nimport styleStoreService from \"../../../../services/styleStoreService\";\r\nimport { trackPromise } from 'react-promise-tracker';\r\n\r\nconst MOCK_DATA = genData();\r\n\r\nconst StyleDashboard: React.FC = () => {\r\n  const [treeValue, setTreeValue] = useState(TreeState.create(MOCK_DATA));\r\n  const [data, setData] = useState([]);\r\n\r\n\r\n  const handleOnChange = (newValue: any) => {\r\n    setTreeValue(newValue);\r\n  };\r\n\r\n  const handleOnExpandAll = () => {\r\n    setTreeValue(TreeState.expandAll(treeValue));\r\n  };\r\n\r\n  const handleOnCollapseAll = () => {\r\n    setTreeValue(TreeState.collapseAll(treeValue));\r\n  };\r\n\r\n  const renderIndexCell = (row: any) => {\r\n    return (\r\n      <div style={{ paddingLeft: (row.metadata.depth * 15) + 'px' }}\r\n        className={row.metadata.hasChildren ? 'with-children' : 'without-children'}>        \r\n        {row.metadata.hasChildren &&\r\n          <button className=\"toggle-button\" onClick={row.toggleChildren}></button>}        \r\n        <span>{row.data.name}</span>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const renderEmployeesCell = (row: any) => {\r\n    return (\r\n      <span className=\"employees-cell\">{row.data.employees}</span>\r\n    );\r\n  };\r\n\r\n  const renderExpensesCell = (row: any) => {\r\n    return (\r\n      <span className=\"expenses-cell\">{row.data.expenses}</span>\r\n    );\r\n  };\r\n\r\n  const renderEditableCell = (row: any) => {\r\n    return (\r\n      <input type=\"text\" value={row.data.contact}\r\n        onChange={(event) => {\r\n          const newData = { ...row.data, contact: event.target.value };\r\n          row.updateData(newData);\r\n          handleOnChange(TreeState.create(MOCK_DATA)); // Update the state manually after editing\r\n        }}/>\r\n    );\r\n  };\r\n\r\n  const getStyleEntryData = () => {\r\n\t\ttrackPromise(\r\n\t\t\tstyleStoreService.getStyleEntry().then((response) => {\r\n\t\t\t\tsetData(response.data.Style_Entry)\r\n\t\t\t})\r\n\t\t);\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tgetStyleEntryData()\r\n\t}, [])\r\n\r\n  return (\r\n    <>\r\n      {/* <div className=\"controls\">\r\n        <button onClick={handleOnExpandAll}>Expand all</button>\r\n        <button onClick={handleOnCollapseAll}>Collapse all</button>\r\n      </div>\r\n\r\n      <TreeTable\r\n        value={treeValue}\r\n        onChange={handleOnChange}>\r\n        <TreeTable.Column basis=\"180px\" grow=\"0\"\r\n          renderCell={renderIndexCell}\r\n          renderHeaderCell={() => <span>Name</span>}/>\r\n        <TreeTable.Column\r\n          renderCell={renderEditableCell}\r\n          renderHeaderCell={() => <span>Contact person</span>}/>\r\n        <TreeTable.Column\r\n          renderCell={renderEmployeesCell}\r\n          renderHeaderCell={() => <span className=\"t-right\">Employees</span>}/>\r\n        <TreeTable.Column\r\n          renderCell={renderExpensesCell}\r\n          renderHeaderCell={() => <span className=\"t-right\">Expenses ($)</span>}/>\r\n      </TreeTable> */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default StyleDashboard;\r\n\r\nfunction genData() {\r\n\treturn [\r\n    {\r\n      data: { name: 'Company A', expenses: '60,000', employees: '5', contact: 'Nicholas Watson' },\r\n      height: 32,\r\n    },\r\n    {\r\n      data: { name: 'Company I', expenses: '105,000', employees: '22', contact: 'Makenzie Higgs' },\r\n      children: [\r\n        {\r\n          data: { name: 'Department 1', expenses: '75,000', employees: '18', contact: 'Florence Carter' },\r\n          children: [\r\n            {\r\n              data: { name: 'Group alpha', expenses: '25,000', employees: '8', contact: 'Doug Moss' },\r\n            },\r\n            {\r\n              data: { name: 'Group beta', expenses: '10,000', employees: '6', contact: 'Camila Devonport' },\r\n            },\r\n            {\r\n              data: { name: 'Group gamma', expenses: '40,000', employees: '4', contact: 'Violet Curtis' },\r\n            }\r\n          ],\r\n        },\r\n        {\r\n          data: { name: 'Department 2', expenses: '30,000', employees: '4', contact: 'Selena Rycroft' },\r\n          height: 32,\r\n        }\r\n      ],\r\n    },\r\n    {\r\n      data: { name: 'Company B', expenses: '70,000', employees: '5', contact: 'Dani Hopkinson' },\r\n      height: 32,\r\n    },\r\n    {\r\n      data: { name: 'Company C', expenses: '50,000', employees: '4', contact: 'Jacob Ellery' },\r\n      height: 32,\r\n    },\r\n    {\r\n      data: { name: 'Company D', expenses: '230,000', employees: '9', contact: 'Kate Stewart' },\r\n      height: 32,\r\n    },\r\n    {\r\n      data: { name: 'Company E', expenses: '310,000', employees: '8', contact: 'Louise Fall' },\r\n      height: 32,\r\n    },\r\n    {\r\n      data: { name: 'Company F', expenses: '110,000', employees: '5', contact: 'Owen Thompson' },\r\n      height: 32,\r\n    }, \r\n    {\r\n      data: { name: 'Company G', expenses: '250,000', employees: '18', contact: 'Fred Wilton' },\r\n      height: 32,\r\n    },\r\n    {\r\n      data: { name: 'Company H', expenses: '180,000', employees: '7', contact: 'William Dallas' },\r\n      height: 32,\r\n    },\r\n    {\r\n      data: { name: 'Company J', expenses: '370,000', employees: '13', contact: 'Ron Douglas' },\r\n      height: 32,\r\n    },\r\n    {\r\n      data: { name: 'Company K', expenses: '500,000', employees: '15', contact: 'Michael Jacobs' },\r\n      height: 32,\r\n    },\r\n    {\r\n      data: { name: 'Company L', expenses: '230,000', employees: '10', contact: 'Stephanie Egerton' },\r\n      height: 32,\r\n    },\r\n    {\r\n      data: { name: 'Company M', expenses: '90,000', employees: '25', contact: 'Michael Buckley' },\r\n      height: 32,\r\n    },\r\n    {\r\n      data: { name: 'Company N', expenses: '370,000', employees: '13', contact: 'Sabrina Rowlands' },\r\n      height: 32,\r\n    },\r\n    {\r\n      data: { name: 'Company O', expenses: '500,000', employees: '15', contact: 'Lana Watt' },\r\n      height: 32,\r\n    },\r\n    {\r\n      data: { name: 'Company P', expenses: '230,000', employees: '10', contact: 'Evelynn Calderwood' },\r\n      height: 32,\r\n    },\r\n    {\r\n      data: { name: 'Company Q', expenses: '90,000', employees: '25', contact: 'Jade Morley' },\r\n      height: 32,\r\n    }, \r\n  ];\r\n}\r\n","/**\r\n * owner : \r\n * author :\r\n */\r\n\r\nimport { useEffect, useState } from 'react';\r\nimport './StyleStore.scss';\r\n\r\nimport {\r\n    MDBTabs,\r\n    MDBTabsItem,\r\n    MDBTabsLink,\r\n    MDBTabsContent,\r\n    MDBTabsPane,\r\n    MDBRow\r\n} from 'mdb-react-ui-kit';\r\n\r\nimport StyleEntry from './StyleStoreLayOuts/StyleEntry';\r\n\r\nimport StyleLookup from './StyleStoreLayOuts/StyleLookup';\r\n\r\nimport StyleDashboard from './StyleStoreLayOuts/StyleDashboard';\r\n\r\n\r\nexport default function StyleStore() {\r\n\r\n    const [basicActive, setBasicActive] = useState('tab3');\r\n    const handleBasicClick = (value) => {\r\n        if (value === basicActive) {\r\n            return;\r\n        }\r\n        setBasicActive(value);\r\n    };\r\n\r\n    useEffect(() => {\r\n\r\n    }, [])\r\n\r\n    return <>\r\n        <MDBTabs className=\"admin-tab\">\r\n            <MDBTabsItem>\r\n                <MDBTabsLink  onClick={() => handleBasicClick('tab1')} active={basicActive === 'tab1'}>\r\n                    <i class=\"fa-solid fa-screwdriver-wrench\"></i> Style Dashboard\r\n                </MDBTabsLink>\r\n            </MDBTabsItem>\r\n            <MDBTabsItem>\r\n                <MDBTabsLink  onClick={() => handleBasicClick('tab2')} active={basicActive === 'tab2'}>\r\n                    <i class=\"fa-solid fa-screwdriver-wrench\"></i> Style LookUp\r\n                </MDBTabsLink>\r\n            </MDBTabsItem>\r\n            <MDBTabsItem>\r\n                <MDBTabsLink  onClick={() => handleBasicClick('tab3')} active={basicActive === 'tab3'}>\r\n                    <i class=\"fa-solid fa-screwdriver-wrench\"></i> Style Entry\r\n                </MDBTabsLink>\r\n            </MDBTabsItem>\r\n        </MDBTabs>\r\n\r\n        <MDBTabsContent className='inner-tab-content'>\r\n            <MDBTabsPane className=\"style-entry-tab\" show={basicActive === 'tab1'}>\r\n                <MDBRow>\r\n                 <StyleDashboard />\r\n                </MDBRow>\r\n            </MDBTabsPane>\r\n            <MDBTabsPane className=\"style-lookup-tab\" show={basicActive === 'tab2'}>\r\n                <MDBRow>\r\n                    <StyleLookup />\r\n                </MDBRow>\r\n            </MDBTabsPane>\r\n            <MDBTabsPane className=\"style-dashboard-tab\" show={basicActive === 'tab3'}>\r\n                <MDBRow>\r\n                    <StyleEntry />\r\n                </MDBRow>\r\n            </MDBTabsPane>\r\n        </MDBTabsContent>\r\n    </>\r\n}","/**\r\n * owner : Shree Nidhi\r\n * author :\r\n */\r\n\r\nimport {useEffect} from 'react';\r\nimport './LandingPage.scss';\r\nimport Tabs from 'react-bootstrap/Tabs';\r\nimport Tab from 'react-bootstrap/Tab';\r\n\r\nimport Administrator  from \"./LandingLayOuts/Administrator/Administrator\"\r\nimport StyleStore from \"./LandingLayOuts/StyleStore/StyleStore\"\r\nexport default function LandingPage(){   \r\n     \r\n    useEffect(()=>{\r\n\t},[])\r\n\r\nreturn <>\r\n    <div className=\"container-fluid\">\r\n        <div className='row'>\r\n            <div className='col-12'>\r\n            <Tabs defaultActiveKey=\"third\">\r\n                <Tab eventKey=\"first\" title={<span> <i className=\"fa fa-home\" /> Home </span>}>\r\n                    Home Content\r\n                </Tab>\r\n                <Tab eventKey=\"second\" title={<span> <i class=\"fa fa-table-columns\"></i> Dashboard </span>}>\r\n                    Dashboard Content\r\n                </Tab>\r\n                <Tab eventKey=\"third\" className='admin-tab' title={<span> <i class=\"fa fa-toolbox\"></i> Administrator </span>}>\r\n                    <Administrator />\r\n                </Tab>\r\n                <Tab eventKey=\"Four\" className='style-store-tab' title={<span> <i class=\"fa fa-store\"></i> Style Store </span>}>\r\n                    <StyleStore />\r\n                </Tab>\r\n                 {/*<Tab eventKey=\"Five\" title={<span> <i class=\"fa fa-shop\"></i> Fabric Store </span>}>\r\n                    Fabric Store Content\r\n                </Tab>\r\n                <Tab eventKey=\"Six\" title={<span> <i class=\"fa fa-store\"></i> Cut Stores </span>}>\r\n                    Cut Store Content\r\n                </Tab>\r\n                <Tab eventKey=\"Seven\" title={<span> <i class=\"fa fa-store\"></i> Trim Stores </span>}>\r\n                    Trim Stores Content\r\n                </Tab>\r\n                <Tab eventKey=\"Eight\" title={<span> <i class=\"fa fa-layer-group\"></i> Sewing Area</span>}>\r\n                    Sewing Area Content\r\n                </Tab>\r\n                <Tab eventKey=\"Nine\" title={<span> <i class=\"fa fa-ballot-check\"></i> Finishing Area</span>}>\r\n                    Fininshing Area Content\r\n                </Tab> */}\r\n            </Tabs>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    </>\r\n}"],"names":["CompanyUnitTable","props","data","columns","React","Header","accessor","Cell","_ref","row","_jsx","className","onClick","openEditForm","original","title","children","deleteUnitRecord","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","useTable","_jsxs","striped","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","getRowProps","cells","cell","getCellProps","getBasicDetails","api","get","concat","then","response","catch","err","message","alert","show","handleClose","handleSubmit","unitName","setUnitName","unitNameError","addressLine1","setAddressLine1","addressLine1Error","state","setState","stateList","division","setDivision","divisionError","tinNo","setTinNo","tinNoError","regNo","setRegNo","regNoError","shortName","setShortName","shortNameError","city","setCity","cityError","pinNo","setPinNO","pinNoError","group","setGroup","groupError","mailId","setMailId","mailIdError","contactNo","setContactNo","contactNoError","Modal","onHide","dialogClassName","backdrop","keyboard","closeButton","Title","Body","onSubmit","MDBInput","wrapperClass","type","tabindex","label","onChange","e","target","value","name","style","color","Form","Select","item","State_Name","Footer","Button","variant","width","UnitSetUp","setShow","useState","verticalActive","setVerticalActive","unitNameLogo","setUnitNameLogo","setunitName","setUnitNameError","setShortNameError","setGroupError","setdivision","setDivisionError","setTinNoError","setRegNoError","setAddressLine1Error","setCityError","setPinNoError","setContactNoError","setMailIdError","setStateList","stateError","setStateError","setData","isEditFormOpen","setIsEditFormOpen","unitId","setUnitId","handleTinValidation","test","getCompanyUnitData","trackPromise","unitService","getCompanyUnits","Company_Units","stateValues","useEffect","adminService","states","closeEditForm","_Fragment","MDBCol","size","MDBTabs","MDBTabsItem","MDBTabsLink","active","MDBTabsContent","MDBTabsPane","UnitForm","preventDefault","isValid","length","payload","saveCompanyUnits","status","result","error","defaultPageSize","Unit_Full_Name","Unit_Short_Name","Group_Id","Division_Id","Tin_Num","Reg_Num","Address_Line_1","City","State","Pin_Code","Contact_No","Email_Id","Unit_Id","editFormDetails","window","confirm","deleteCompanyUnits","editCompanyUnits","saveCompanyUsers","post","editCompanyUsers","deleteCompanyUsers","getCompanyUsers","console","CompanyUserTable","deleteUserRecord","UserSetUp","userName","setUserName","userNameError","setUserNameError","empId","setEmpId","empIdError","setEmpIdError","department","setDepartment","departmentError","setDepartmentError","designation","setDesignation","designationError","setDesignationError","mobileNumber","setMobileNumber","mobileNumberError","setMobileNumberError","personalMaildId","setPersonalMaildId","personalMaildIdError","setPersonalMaildIdError","userLevel","setUserLevel","userLevelError","setUserLevelError","setStatus","statusError","setStatusError","loginId","setLoginId","loginIdError","setLoginIdError","basicData","setBasicData","basicDesgination","setbasicDesgination","basicDepartment","setBasicDepartment","selectedUnit","setSelectedUnit","selectedUnitError","setSelectedUnitError","units","handleUnitSetup","userService","getCompanyUserData","Company_Users","paginationFactory","page","sizePerPage","lastPageText","firstPageText","nextPageText","prePageText","showTotal","alwaysShowAllBtns","hideSizePerPage","onPageChange","onSizePerPageChange","handleUserLevel","handleEditUserDetails","MDBRow","Department_Name","Department_Id","Devision_Name","Devision_Id","block","User_Name","User_Employee_Id","Designation_Id","Mobile_Num","Mail_Id","User_Role","Status","User_Login_ID","saveCompanyBuyers","editCompanyBuyers","deleteCompanyBuyers","getCompanyBuyers","BuyerGroupTable","deleteBuyerGroupRecord","BuyerGroup","selectedBuyerGroup","setSelectedBuyerGroup","selectedBuyerGroupError","setSelectedBuyerGroupError","buyerId","setBuyerId","buyerName","setBuyerName","buyerNameError","setBuyerNameError","contactNumber","setcontactNumber","contactNumberError","setContactNumberError","buyerGroupData","setBuyerGroupData","buyerGroups","handleBuyerGroupSetup","buyerService","getCompanyBuyersData","handleEditBuyer","Company_Buyers","required","Buyer_Group_Name","Buyer_Group_Id","Buyer_Contact_No","Buyer_Email_Id","Buyer_Name","Buyer_Id","saveGender","log","getGender","updateGender","deleteGender","GenderTable","Gender","gender","setGender","genderData","setGenderData","genderId","setGenderId","handleGender","apiCall","genderService","_error$response","_error$response$data","handleForm","tabIndex","id","_error$response2","_error$response2$data","saveProductType","getProductType","editProductType","deleteProductType","ProductTypeTable","deleteProduct","ProductType","productType","setProductType","productTypeId","setProductTypeId","productTypeData","setProductTypeData","isEditMode","selectedProductTypeError","setSelectedProductTypeError","handleProductType","productTypeService","product_type","product","Product_Type","saveSeason","getSeason","updateSeason","deleteSeasonType","SeasonTable","Season","season","setSeason","seasonData","setSeasonData","seasonDataId","setSeasonDataId","seasonService","handleSeason","request","Season_Name","saveSizeGrid","getSizeGrid","updateSizeGrid","deleteSizeGrid","SizeGridTable","_ref2","SizeGrid","sizeGrid","setSizeGrid","sizeGridData","setSizeGridData","sizeGridDataId","setSizeGridDataId","handleSizeGrid","sizeGridService","sizegrid","Size_Grid","savePrintType","getPrintType","updatePrintType","deletePrintType","PrintTypeTable","PrintType","printType","setPrintType","printTypeData","setPrintTypeData","printTypeId","setPrintTypeId","handlePrintType","print_type","printTypeService","WashingTypeTable","deleteWashingRecord","saveWashingType","getWashingType","updateWashingType","WashingType","washingType","setWashingType","editMode","setEditMode","currentWashingType","setCurrentWashingType","washingTypeData","setWashingTypeData","handleWashingType","washing_type","saveOrUpdate","washingtypeService","Washing_Type","saveEmbType","getEmbType","updateEmbType","deleteEmbType","EmbTypeTable","EmbType","embType","setEmbType","embTypeData","setEmbTypeData","empTypeId","setEmpTypeId","arguments","undefined","Emb_Type","handleEmbType","embTypeService","emb_type","DataSetUp","addressLine2","setAddressLine2","street","setStreet","contactNoRec","setContactNoRec","faxNo","setFaxNo","website","setWebsite","handleVerticalClick","Administrator","basicActive","setBasicActive","handleBasicClick","class","apiUrl","getStyleEntry","saveStyleEntry","editStyleEntry","deleteStyleEntry","getPODetails","savePODetails","editPODetails","deletePODetails","getStyleLookupDetails","StyleEntryTable","values","Style_No","images","JSON","parse","Style_Images","image","index","src","alt","height","marginRight","_ref3","PODetailsTable","PO_No","moment","format","_ref4","rowSpans","rowGroups","lastStyleNo","spanCount","groupIndex","forEach","currentStyleNo","calculateRowSpansAndGroups","i","previousStyleNo","rowClass","cellIndex","textAlign","verticalAlign","rowSpan","styleNoList","styleNo","setStyleNo","styleNoError","BuyerName","StyleDescription","SizeGridName","GenderView","MerchantName","MerchantContact","fPONo","setFPONo","fPONoError","PONo","setPONo","PONoError","OCNo","setOCNo","embTypeList","embTypeError","printTypeList","printTypeError","washingTypeList","washingTypeError","deliveryDate","setDeliveryDate","deliveryDateError","pcd","setPCD","pcdError","shipmentMode","setShipmentMode","shipmentModeError","others","setOthers","note","setNote","sizesArray","setRows","addNewRow","handleDeleteRow","calculateTotal","handlePODetails","htmlFor","position","top","left","backgroundColor","padding","fontSize","Print_Type","DatePicker","selected","date","dateFormat","placeholderText","customInput","border","sizeKey","rowIndex","garmentColor","updatedRows","destinationCountry","sizes","total","float","marginTop","handleEditRow","handleEditStyleEntry","sizeKeys","disabled","cellPadding","isEditable","borderRadius","ProductionOrder","setEmbTypeError","setWashingTypeError","setStyleNoError","POId","setPOId","setPONoError","setFPONoError","setPrintTypeError","setShipmentModeError","setDeliveryDateError","setPCDError","setStyleNoList","setEmbTypeList","setPrintTypeList","setWashingTypeList","setSizeKeys","setGarmentColor","setDestinationCountry","setSizesArray","setSizes","reduce","acc","curr","editingIndex","setEditingIndex","setStyleDescription","setSizeGridName","setMerchantName","setMerchantContact","setGenderView","rowData","setRowData","Object","sum","parseInt","newSizes","filter","_","initialSizes","StyleNoList","sessionStorage","getItem","SizeGridList","sizeGridId","find","grid","Style_Description","Size_Grid_Name","Marchent_Name","Marchent_Contact","sizeGridIdValue","Size_Grid_Id","SizeGridValue","Size_Grid_Value","selectedSizes","split","trim","handleSizesChange","getPOData","styleStoreService","PO_Details","setItem","stringify","setExistingGarmentData","keys","OrderModal","entries","key","parsedValue","isNaN","add","PO_Id","Note","F_PO_No","OC_No","Others","Shipment_Mode","Delivery_Date","PCD","garmentData","Garment_Data","EditOrderModal","handleStyleEntry","setBuyer","buyer","buyerList","productTypeList","productTypeError","genderList","genderError","setMarchantName","marchantName","marchantNameError","setBuyerOrderRefNo","buyerOrderRefNo","buyerOrderRefNoError","styleDescription","styleDescriptionError","sizeGridList","sizeGridError","seasonList","seasonError","setMarchantContact","marchantContact","marchantContactError","handleImageUpload","imageUploadError","base64Images","handleDeleteImage","setCurrentIndex","currentIndex","InputGroup","display","alignItems","paddingRight","justifyContent","cursor","event","right","background","accept","StyleEntry","setBuyerOrderRefNoError","setSeasonError","noteError","setNoteError","setProductTypeError","setGenderError","setMarchantNameError","StyleNoError","setStyleDescriptionError","setSizeGridError","setMarchantContactError","setBuyerList","setGenderList","setSizeGridList","setSeasonList","nextStyleNumber","setNextStyleNumber","setProductTypeList","styleId","setStyleEntryId","setBase64Images","setImageUploadError","files","totalFiles","base64ImagesArray","reader","FileReader","file","onload","base64Image","push","readAsDataURL","indexToDelete","document","getElementById","updatedImages","getStyleEntryData","Style_Entry","Next_Style_No","StyleModal","Buyer_Order_Ref_No","StyleLookupTable","firstImage","qty","totalQty","garment","StyleLookup","Style_Lookup","MOCK_DATA","expenses","employees","contact","StyleDashboard","treeValue","setTreeValue","TreeState","create","StyleStore","LandingPage","Tabs","defaultActiveKey","Tab","eventKey"],"sourceRoot":""}