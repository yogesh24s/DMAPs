{"version":3,"file":"static/js/349.88053be2.chunk.js","mappings":"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","sources":["components/Login.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport EmailLogo from '../assets/images/username_icon.svg';\r\nimport PasswordLogo from '../assets/images/password_icon.svg';\r\nimport ShowPasswordLogo from '../assets/images/show_password.png';\r\nimport HidePasswordLogo from '../assets/images/hide_password.png';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport DMAPLogo from '../../src/assets/images/DMAPLogo.png';\r\nimport infoIcon from '../../src/assets/images/info_icon.svg';\r\nimport { useHistory } from 'react-router-dom';\r\nimport loginService from '../services/loginService';\r\nimport helper from '../services/tokenStore';\r\nimport { trackPromise } from 'react-promise-tracker';\r\nimport infoData from '../assets/data/info.json';\r\nimport './Login.scss';\r\nimport { Tooltip } from '../../node_modules/bootstrap/dist/js/bootstrap.esm.min.js';\r\nimport tokenStore from '../services/tokenStore';\r\n\r\nfunction Login() {\r\n    useEffect(() => {\r\n        var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle=\"tooltip\"]'));\r\n        tooltipTriggerList.map(function (tooltipTriggerEl) {\r\n            return new Tooltip(tooltipTriggerEl);\r\n        });\r\n\r\n        // TODO: Clear session storage below can be avoided once logout functionality is implemented.\r\n        loginService.logout();\r\n    }, []);\r\n\r\n    const history = useHistory();\r\n\r\n    const [data, setData] = useState({\r\n        username: \"\",\r\n        password: \"\"\r\n    });\r\n\r\n    const [userNameError, setUserNameError] = useState('');\r\n    const [errorHighlight, setErrorHighlight] = useState(false);\r\n    const [showPassword, setShowPassword] = useState(false);\r\n\r\n    const { username, password } = data;\r\n\r\n    const changeHandler = e => {\r\n        setData({ ...data, [e.target.name]: e.target.value });\r\n    }\r\n\r\n    function openForgotPasswordPage() {\r\n        history.push('/forgotPassword');\r\n    }\r\n\r\n    const validateForm = () => {\r\n        let isValid = true;\r\n\r\n        if (!data.username) {\r\n            setUserNameError('User Name is required');\r\n            isValid = false;\r\n        } else if (!/^[a-zA-Z0-9 ]{3,20}$/.test(data.username)) {\r\n            setUserNameError('User Name must be between 3 and 20 characters long and can only contain letters, numbers, and spaces');\r\n            isValid = false;\r\n        } else {\r\n            setUserNameError('');\r\n        }\r\n\r\n        return isValid;\r\n    }\r\n\r\n    const submitHandler = e => {\r\n        e.preventDefault();\r\n        if (!validateForm()) {\r\n            setErrorHighlight(true);\r\n            return;\r\n        }\r\n\r\n        const payload = {\r\n            'userName': data.username,\r\n            'password': data.password\r\n        }\r\n\r\n        trackPromise(loginService.login({ \"data\": [payload] }).then((response) => {\r\n            let token = response.data[0].data[0].token;\r\n            if (response.data[0].data[0].result === \"success\") {\r\n                tokenStore.setUserName(data.username);\r\n                helper.setToken(token);\r\n                history.push(\"/landingpage\");\r\n            } else {\r\n                alert(\"Password and userName are wrong\");\r\n            }\r\n        }).catch((error) => {\r\n            alert(error.response.data.error);\r\n        }));\r\n    }\r\n\r\n    const toggleShowPassword = () => {\r\n        setShowPassword(!showPassword);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Navbar className=\"navbar-login\">\r\n                <Navbar.Brand className='navbar-cls' href=\"#home\">\r\n                    <img\r\n                        src={DMAPLogo}\r\n                        className=\"d-inline-block align-top logo-cls\"\r\n                        alt='DMAP'\r\n                    />\r\n                </Navbar.Brand>\r\n            </Navbar>\r\n\r\n            <div className=\"login-view\">\r\n                <div className=\"row no-gutter bg-image\">\r\n                    <div className=\"login-container\">\r\n                        <div className=\"login div-wrapper d-flex justify-content-center align-items-center\">\r\n                            <div className=\"logincard\">\r\n                                <form onSubmit={submitHandler} autoComplete=\"off\">\r\n                                    <small className=\"inputheader\">\r\n                                        Username\r\n                                        <img\r\n                                            src={infoIcon}\r\n                                            className=\"info-icon-style login-icon-style cursor-pointer\"\r\n                                            alt='Username'\r\n                                            title={infoData.login.username}\r\n                                            data-bs-toggle=\"tooltip\" data-bs-placement=\"top\"\r\n                                        />\r\n                                    </small>\r\n                                    <div className=\"row mb-3\">\r\n                                        <div className=\"form-group col-md-12 input-cls\">\r\n                                            <input\r\n                                                type=\"text\"\r\n                                                name=\"username\"\r\n                                                value={username}\r\n                                                onChange={changeHandler}\r\n                                                className={errorHighlight ? 'form-control usernameWarning' : 'form-control'}\r\n                                                placeholder=\"Enter your username\"\r\n                                            />\r\n                                            <img className=\"icon-cls\" src={EmailLogo} alt=\"image not found\" />\r\n                                        </div>\r\n                                        {userNameError && (\r\n                                            <span className='errortext col-md-12'>{userNameError}</span>\r\n                                        )}\r\n                                    </div>\r\n\r\n                                    <small className=\"inputheader\">\r\n                                        Password\r\n                                        <img\r\n                                            src={infoIcon}\r\n                                            className=\"info-icon-style login-icon-style cursor-pointer\"\r\n                                            alt='Password'\r\n                                            title={infoData.login.password}\r\n                                            data-bs-toggle=\"tooltip\"\r\n                                            data-bs-placement=\"top\"\r\n                                        />\r\n                                    </small>\r\n\r\n                                    <div className=\"row mb-3\">\r\n                                        <div className=\"form-group col-md-12 input-cls\">\r\n                                            <div className=\"input-group\">\r\n                                                <input\r\n                                                    type={showPassword ? \"text\" : \"password\"}\r\n                                                    name=\"password\"\r\n                                                    value={password}\r\n                                                    onChange={changeHandler}\r\n                                                    className=\"form-control\"\r\n                                                    placeholder=\"Enter your password\"\r\n                                                />\r\n                                                \r\n                                                <div className=\"input-group-append\">\r\n                                                    <span className=\"input-group-text\" onClick={toggleShowPassword}>\r\n                                                        <img\r\n                                                            src={showPassword ? HidePasswordLogo : ShowPasswordLogo}\r\n                                                            alt={showPassword ? \"Hide password\" : \"Show password\"}\r\n                                                            style={{ cursor: 'pointer' }}\r\n                                                        />\r\n                                                    </span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"form-group col-md-12\">\r\n                                            <button\r\n                                                type=\"submit\"\r\n                                                className=\"btn btn-primary login-btn mt-1\"\r\n                                                disabled={!data.username || !data.password}\r\n                                            >\r\n                                                <span>Login</span>\r\n                                            </button>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className='row mt-3 align-center'>\r\n                                        <label className='forgot-cls opacity-50' onClick={openForgotPasswordPage}>\r\n                                            Forgot Password?\r\n                                        </label>\r\n                                    </div>\r\n                                    <br />\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div>\r\n                <footer className='login-footer'>\r\n                    <p className=\"footertext\">\r\n                        <span className=\"powered-by\">Powered by </span>\r\n                        <a href=\"#\" target=\"_blank\">\r\n                            <img className=\"footerlogopos\" src={DMAPLogo} alt=\"image not found\" />\r\n                        </a>\r\n                    </p>\r\n                </footer>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Login;\r\n"],"names":["useEffect","slice","call","document","querySelectorAll","map","tooltipTriggerEl","Tooltip","loginService","logout","history","useHistory","data","setData","useState","username","password","userNameError","setUserNameError","errorHighlight","setErrorHighlight","showPassword","setShowPassword","changeHandler","e","target","name","value","_jsxs","children","_jsx","Navbar","className","Brand","href","src","DMAPLogo","alt","onSubmit","preventDefault","validateForm","isValid","test","payload","trackPromise","login","then","response","token","result","tokenStore","setUserName","helper","setToken","push","alert","catch","error","autoComplete","infoIcon","title","infoData","type","onChange","placeholder","EmailLogo","onClick","toggleShowPassword","HidePasswordLogo","ShowPasswordLogo","style","cursor","disabled"],"sourceRoot":""}