{"version":3,"file":"static/js/533.5351134b.chunk.js","mappings":"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","sources":["components/LandingLayOuts/Administrator/AdministratorLayOuts/CompanyUnitTable.js","services/adminService.js","components/LandingLayOuts/Administrator/AdministratorLayOuts/UnitSetUp.js","services/userService.js","components/LandingLayOuts/Administrator/AdministratorLayOuts/CompanyUserTable.js","components/LandingLayOuts/Administrator/AdministratorLayOuts/UserSetUp.js","services/buyerService.js","components/LandingLayOuts/Administrator/AdministratorLayOuts/DMAPs_Data/BuyerGroupTable.js","components/LandingLayOuts/Administrator/AdministratorLayOuts/DMAPs_Data/BuyerGroup.js","components/LandingLayOuts/Administrator/AdministratorLayOuts/DataSetUp.js","components/LandingLayOuts/Administrator/Administrator.js","services/styleStoreService.js","components/LandingLayOuts/StyleStore/StyleStoreLayOuts/StyleEntryTable.js","components/LandingLayOuts/StyleStore/StyleStoreLayOuts/PO_Details/ProductionOrderTable.js","components/LandingLayOuts/StyleStore/StyleStoreLayOuts/PO_Details/ProductionOrder.js","components/LandingLayOuts/StyleStore/StyleStoreLayOuts/StyleEntry.js","components/LandingLayOuts/StyleStore/StyleStoreLayOuts/StyleLookupTable.js","components/LandingLayOuts/StyleStore/StyleStoreLayOuts/StyleLookup.js","components/LandingLayOuts/StyleStore/StyleStoreLayOuts/StyleDashboard.js","components/LandingLayOuts/StyleStore/StyleStore.js","components/LandingPage.js"],"sourcesContent":["import React from 'react'\r\nimport unitService from \"../../../../services/unitService\"\r\nimport { trackPromise } from 'react-promise-tracker';\r\nimport { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport { useTable } from 'react-table';\r\n\r\nexport default function CompanyUnitTable(props) {\r\n    //const [data, setData] = useState([]);\r\n    let data = props.data\r\n\tconst columns = React.useMemo(\r\n\t\t() => [\r\n\t\t  {\r\n\t\t\tHeader: 'Full Name',\r\n\t\t\taccessor: 'Unit_Full_Name',\r\n\t\t  },\r\n\t\t  {\r\n\t\t\tHeader: 'Short Name',\r\n\t\t\taccessor: 'Unit_Short_Name',\r\n\t\t  },\r\n\t\t  {\r\n\t\t\tHeader: 'Registration No.',\r\n\t\t\taccessor: 'Reg_Num',\r\n\t\t  },\r\n\t\t  {\r\n\t\t\tHeader: 'Address',\r\n\t\t\taccessor: 'Address_Line_1',\r\n\t\t  },\r\n\t\t  {\r\n\t\t\tHeader: 'City',\r\n\t\t\taccessor: 'City',\r\n\t\t  },\r\n\t\t  {\r\n\t\t\tHeader: 'State',\r\n\t\t\taccessor: 'State',\r\n\t\t  },\r\n\t\t  {\r\n\t\t\tHeader: 'Pincode',\r\n\t\t\taccessor: 'Pin_Code',\r\n\t\t  },\r\n\t\t  {\r\n\t\t\tHeader: 'Contact No.',\r\n\t\t\taccessor: 'Contact_No',\r\n\t\t  },\r\n\t\t  {\r\n\t\t\tHeader: 'E-mail ID',\r\n\t\t\taccessor: 'Email_Id',\r\n\t\t  },\r\n\t\t  {\r\n\t\t\tHeader: 'Action',\r\n\t\t\taccessor: 'action', // You can set a dummy accessor for the action column\r\n\t\t\tCell: ({ row }) => ([\r\n\t\t\t\t<i className='fa fa-edit pointer' onClick={(data) => {\r\n\t\t\t\t  props.openEditForm(row.original)\r\n\t\t\t\t}} title='Edit'> </i>,  <i className='fa fa-trash ml-15 pointer' onClick={(data) => {\r\n\t\t\t\t\tprops.deleteUnitRecord(row.original)\r\n\t\t\t\t  }} title='Delete' > </i>]\r\n\t\t\t),\r\n\t\t  },\r\n\t\t],\r\n\t\t[]\r\n\t  );\r\n\t\t\r\n\t  const {\r\n\t\tgetTableProps,\r\n\t\tgetTableBodyProps,\r\n\t\theaderGroups,\r\n\t\trows,\r\n\t\tprepareRow,\r\n\t  } = useTable({\r\n\t\tcolumns,\r\n\t\tdata,\r\n\t  });\r\n\t\r\n  return (\r\n    <div className='mt-4'>\r\n      <table {...getTableProps()} className=\"table striped\" striped>\r\n        <thead>\r\n          {headerGroups.map((headerGroup) => (\r\n            <tr {...headerGroup.getHeaderGroupProps()}>\r\n              {headerGroup.headers.map((column) => (\r\n                <th {...column.getHeaderProps()}>{column.render('Header')}</th>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </thead>\r\n        <tbody {...getTableBodyProps()}>\r\n          {rows.map((row) => {\r\n            prepareRow(row);\r\n            return (\r\n              <tr {...row.getRowProps()}>\r\n                {row.cells.map((cell) => {\r\n                  return (\r\n                    <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\r\n                  );\r\n                })}\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n\r\n  )\r\n}\r\n","// import api from \"./interceptor\";\r\nimport api from \"./interceptor\";\r\n\r\nclass adminService {\r\n  getBasicDetails() {\r\n    const apiUrl = process.env.REACT_APP_API_URL; // Read base URL from environment\r\n    return api\r\n      .get(`${apiUrl}/api/basicDetails`)\r\n      .then((response) => {\r\n        return response;\r\n      })\r\n      .catch((err) => {\r\n        // Handle errors and show meaningful messages\r\n        if (err.response && err.response.data && err.response.data.message) {\r\n          alert(err.response.data.message);\r\n        } else {\r\n          alert(\"An error occurred. Please try again.\");\r\n        }\r\n      });\r\n  }\r\n}\r\n\r\nexport default new adminService();\r\n","/**\r\n * owner : \r\n * author :\r\n */\r\n\r\nimport { useEffect, useState } from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Form from 'react-bootstrap/Form';\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\r\nimport Tooltip from 'react-bootstrap/Tooltip';\r\n\r\nimport './UnitSetUp.scss';\r\n\r\nimport {\r\n\tMDBTabs,\r\n\tMDBTabsItem,\r\n\tMDBTabsLink,\r\n\tMDBTabsContent,\r\n\tMDBTabsPane,\r\n\tMDBCol,\r\n\tMDBInput\r\n} from 'mdb-react-ui-kit';\r\n\r\nimport unitService from \"../../../../services/unitService\";\r\nimport { trackPromise } from 'react-promise-tracker';\r\nimport CompanyUnitTable from './CompanyUnitTable';\r\nimport adminService from \"../../../../services/adminService\"\r\n\r\n\r\nexport default function UnitSetUp() {\r\n\r\n\tconst [show, setShow] = useState(false);\r\n\tconst handleClose = () => setShow(false);\r\n\r\n\tconst [verticalActive, setVerticalActive] = useState('tabV1');\r\n\tconst [unitNameLogo, setUnitNameLogo] = useState(\"\")\r\n\tconst [unitName, setunitName] = useState('')\r\n\tconst [unitNameError, setUnitNameError] = useState(\"\")\r\n\tconst [shortName, setShortName] = useState('')\r\n\tconst [shortNameError, setShortNameError] = useState('');\r\n\tconst [group, setGroup] = useState('')\r\n\tconst [groupError, setGroupError] = useState('');\r\n\tconst [division, setdivision] = useState('')\r\n\tconst [divisionError, setDivisionError] = useState('');\r\n\tconst [tinNo, setTinNo] = useState('')\r\n\tconst [tinNoError, setTinNoError] = useState('');\r\n\tconst [regNo, setRegNo] = useState('')\r\n\tconst [regNoError, setRegNoError] = useState('');\r\n\tconst [addressLine1, setAddressLine1] = useState('')\r\n\tconst [addressLine1Error, setAddressLine1Error] = useState('');\r\n\tconst [city, setCity] = useState('')\r\n\tconst [cityError, setCityError] = useState('');\r\n\tconst [pinNo, setPinNO] = useState('')\r\n\tconst [pinNoError, setPinNoError] = useState('');\r\n\tconst [contactNo, setContactNo] = useState('');\r\n\tconst [contactNoError, setContactNoError] = useState('');\r\n\tconst [mailId, setMailId] = useState('')\r\n\tconst [mailIdError, setMailIdError] = useState('');\r\n\tconst [state, setState] = useState('');\r\n\tconst [stateList, setStateList] = useState([]);\r\n\tconst [stateError, setStateError] = useState('');\r\n\tconst [data, setData] = useState([]);\r\n\tconst [isEditFormOpen, setIsEditFormOpen] = useState(false);\r\n\tconst [unitId, setUnitId] = useState(\"\");\r\n\tconst handleVerticalClick = (value) => {\r\n\t\tif (value === verticalActive) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tsetVerticalActive(value);\r\n\t};\r\n\r\n\tconst handleTinValidation = (value) => {\r\n\t\t// Define a regular expression pattern for a 11-digit TIN\r\n\t\tconst tinPattern = /^$|^\\d{11}$/;\r\n\t\t\r\n\t\t// Return whether the value matches the pattern\r\n\t\treturn tinPattern.test(value);\r\n\t};\r\n\t\r\n\r\n\tconst handleUnitSetup = (e) => {\r\n\t\te.preventDefault();\r\n\t\tlet isValid = true;\r\n\r\n\t\tif (!unitName) {\r\n\t\t\tsetUnitNameError('Unit Name is required');\r\n\t\t\tisValid = false;\r\n\t\t} else {\r\n\t\t\tsetUnitNameError('');\r\n\t\t}\r\n\r\n\t\tif (!shortName) {\r\n\t\t\tsetShortNameError('Short Name is required');\r\n\t\t\tisValid = false;\r\n\t\t} else if (/[^a-zA-Z0-9]/.test(shortName)) {\r\n\t\t\tsetShortNameError('Short Name cannot contain spaces or special characters');\r\n\t\t\tisValid = false;\r\n\t\t} else {\r\n\t\t\tsetShortNameError('');\r\n\t\t}\r\n\r\n\t\tif (!group) {\r\n\t\t\tsetGroupError('Group is required');\r\n\t\t\tisValid = false;\r\n\t\t} else {\r\n\t\t\tsetGroupError('');\r\n\t\t}\r\n\r\n\t\tif (!division) {\r\n\t\t\tsetDivisionError('Division is required');\r\n\t\t\tisValid = false;\r\n\t\t} else {\r\n\t\t\tsetDivisionError('');\r\n\t\t}\r\n\r\n\t\tif (!tinNo) {\r\n\t\t\tsetTinNoError('TIN NO. should be 11 digits');\r\n\t\t\tisValid = false;\r\n\t\t} else if (!handleTinValidation(tinNo) && tinNo.length != '11') {\r\n\t\t\tsetTinNoError('TIN NO. should be 11 digits');\r\n\t\t\tisValid = false;\r\n\t\t} else {\r\n\t\t\tsetTinNoError('');\r\n\t\t}\r\n\r\n\t\tif (!regNo) {\r\n\t\t\tsetRegNoError('Registration No is required');\r\n\t\t\tisValid = false;\r\n\t\t} else if (!/^[a-zA-Z0-9]+$/.test(regNo)) {\r\n\t\t\tsetRegNoError('Registration No must contain only alphanumeric characters');\r\n\t\t\tisValid = false;\r\n\t\t} else {\r\n\t\t\tsetRegNoError('');\r\n\t\t}\r\n\r\n\t\tif (!addressLine1) {\r\n\t\t\tsetAddressLine1Error('Address is required');\r\n\t\t\tisValid = false;\r\n\t\t} else {\r\n\t\t\tsetAddressLine1Error('');\r\n\t\t}\r\n\r\n\t\tif (!city) {\r\n\t\t\tsetCityError('City is required');\r\n\t\t\tisValid = false;\r\n\t\t} else {\r\n\t\t\tsetCityError('');\r\n\t\t}\r\n\r\n\t\tif (!state) {\r\n\t\t\tsetStateError('State is required');\r\n\t\t\tisValid = false;\r\n\t\t} else {\r\n\t\t\tsetStateError('');\r\n\t\t}\r\n\r\n\t\tif (!pinNo) {\r\n\t\t\tsetPinNoError('Pin Number is required');\r\n\t\t\tisValid = false;\r\n\t\t} else if (!/^\\d{6}$/.test(pinNo)) {\r\n\t\t\tsetPinNoError('Pin Number must be a 6-digit number');\r\n\t\t\tisValid = false;\r\n\t\t} else {\r\n\t\t\tsetPinNoError('');\r\n\t\t}\r\n\r\n\t\tif (!contactNo) {\r\n\t\t\tsetContactNoError('Contact Number is required');\r\n\t\t\tisValid = false;\r\n\t\t} else if (!/^[6789]\\d{9}$/.test(contactNo)) {\r\n\t\t\tsetContactNoError('Please enter a valid 10-digit Indian mobile number');\r\n\t\t\tisValid = false;\r\n\t\t} else {\r\n\t\t\tsetContactNoError('');\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\r\n\t\tif (!mailId) {\r\n\t\t\tsetMailIdError('Mail id is required');\r\n\t\t\tisValid = false;\r\n\t\t} else if (!/\\S+@\\S+\\.\\S+/.test(mailId)) { // Check if email format is invalid\r\n\t\t\tsetMailIdError('Invalid email format');\r\n\t\t\tisValid = false;\r\n\t\t} else {\r\n\t\t\tsetMailIdError('');\r\n\t\t}\r\n\r\n\t\tif (!isValid) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tlet payload = {\r\n\t\t\t\"Unit_Full_Name\": unitName,\r\n\t\t\t\"Unit_Short_Name\": shortName,\r\n\t\t\t\"Group_Id\": group,\r\n\t\t\t\"Division_Id\": division,\r\n\t\t\t\"Tin_Num\": tinNo,\r\n\t\t\t\"Reg_Num\": regNo,\r\n\t\t\t\"Address_Line_1\": addressLine1,\r\n\t\t\t\"City\": city,\r\n\t\t\t\"State\": state,\r\n\t\t\t\"Pin_Code\": pinNo,\r\n\t\t\t\"Contact_No\": contactNo,\r\n\t\t\t\"Email_Id\": mailId\r\n\t\t}\r\n\r\n\t\ttrackPromise(unitService.saveCompanyUnits({ \"data\": [payload] }).then((response) => {\r\n\t\t\t//check login response\r\n\t\t\tif (response.status === 200 && response.data.data.status == \"success\") {\r\n\t\t\t\t// alert(response.data.result);\r\n\t\t\t\tstateValues()\r\n\t\t\t\tgetCompanyUnitData()\r\n\t\t\t\thandleClose()\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\talert(response.data.data.result);\r\n\t\t\t}\r\n\r\n\t\t}).catch((error) => {\r\n\t\t\t//console.log(error.response.data.error)\r\n\t\t\talert(error.response.data.error);\r\n\t\t})\r\n\t\t);\r\n\r\n\t}\r\n\tconst getCompanyUnitData = () => {\r\n\t\ttrackPromise(\r\n\t\t\tunitService.getCompanyUnits().then((response) => {\r\n\t\t\t\tsetData(response.data.Company_Units)\r\n\t\t\t})\r\n\t\t);\r\n\t}\r\n\r\n\tconst getBasicDetails = () => {\r\n        trackPromise(\r\n            adminService.getBasicDetails().then((response) => {\r\n                setStateList(response.data[0].data[0].data.states)\r\n            })\r\n        );\r\n    }\r\n\r\n\tuseEffect(() => {\r\n\t\tgetBasicDetails();\r\n\t\tgetCompanyUnitData()\r\n\t}, [])\r\n\r\n\r\n\tfunction stateValues() {\r\n\r\n\t\tsetUnitNameError('');\r\n\t\tsetShortNameError('');\r\n\t\tsetGroupError('');\r\n\t\tsetDivisionError('');\r\n\t\tsetTinNoError('');\r\n\t\tsetRegNoError('');\r\n\t\tsetAddressLine1Error('');\r\n\t\tsetCityError('');\r\n\t\tsetStateError('');\r\n\t\tsetPinNoError('');\r\n\t\tsetContactNoError('');\r\n\t\tsetMailIdError('');\r\n\t\t\r\n\t\tsetunitName('')\r\n\t\tsetShortName('')\r\n\t\tsetGroup('')\r\n\t\tsetdivision('')\r\n\t\tsetTinNo('')\r\n\t\tsetRegNo('')\r\n\t\tsetAddressLine1('')\r\n\t\tsetCity('')\r\n\t\tsetState('')\r\n\t\tsetPinNO('')\r\n\t\tsetContactNo('')\r\n\t\tsetMailId('')\r\n\t}\r\n\r\n\tuseEffect((\r\n\r\n\t) => { }, [])\r\n\r\n\r\n\tconst iconActionHandler = (cell, row, rowIndex) => {\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<i className=\"fas fa-edit action-icon\" title=\"Edit\" > </i>\r\n\t\t\t</>\r\n\t\t);\r\n\t};\r\n\tconst openEditForm = (data) => {\r\n        editFormDetails(data)\r\n        setIsEditFormOpen(true);\r\n    };\r\n\tfunction editFormDetails(data) {\r\n\r\n\t\tsetUnitNameError('');\r\n\t\tsetShortNameError('');\r\n\t\tsetGroupError('');\r\n\t\tsetDivisionError('');\r\n\t\tsetTinNoError('');\r\n\t\tsetRegNoError('');\r\n\t\tsetAddressLine1Error('');\r\n\t\tsetCityError('');\r\n\t\tsetStateError('');\r\n\t\tsetPinNoError('');\r\n\t\tsetContactNoError('');\r\n\t\tsetMailIdError('');\r\n\r\n\t\r\n\r\n\t\tsetunitName(data.Unit_Full_Name)\r\n\t\tsetShortName(data.Unit_Short_Name)\r\n\t\tsetGroup(data.Group_Id)\r\n\t\tsetdivision(data.Division_Id)\r\n\t\tsetTinNo(data.Tin_Num)\r\n\t\tsetRegNo(data.Reg_Num)\r\n\t\tsetAddressLine1(data.Address_Line_1)\r\n\t\tsetCity(data.City)\r\n\t\tsetState(data.State)\r\n\t\tsetPinNO(data.Pin_Code)\r\n\t\tsetContactNo(data.Contact_No)\r\n\t\tsetMailId(data.Email_Id)\r\n\t\tsetUnitId(data.Unit_Id)\r\n\t}\r\n    const closeEditForm = () => {\r\n        setIsEditFormOpen(false);\r\n    };\r\n\r\n// Delete Unit Records\r\n\r\nconst deleteUnitRecord = (data) => {\r\n\tif (window.confirm(\"Are you sure to delete the Company Unit ?\"))\r\n    {\r\n\t\tlet payload = {\r\n\t\t\t\"Unit_Short_Name\":data.Unit_Short_Name,\r\n\t\t\t\"Unit_Id\": data.Unit_Id\r\n\t\t}\r\n\t\ttrackPromise(unitService.deleteCompanyUnits({ \"data\": [payload] }).then((response) => {\r\n\t\t\t//check login response\r\n\t\t\tif (response.status === 200) {\r\n\t\t\t\tgetCompanyUnitData()\r\n\t\t\t}\t\r\n\t\t\telse {\r\n\t\t\t\talert(response.data.message);\r\n\t\t\t}\r\n\r\n\t\t}).catch((error) => {\r\n\t\t\t//console.log(error.response.data.error)\r\n\t\t\talert(error.response.data.error);\r\n\t\t})\r\n\t\t);\r\n\t}\r\n\r\n};\r\n\r\n\tconst handleEditUnit = (e) => {\r\n\r\n\t\te.preventDefault();\r\n\t\tlet isValid = true;\r\n\r\n\t\tif (!unitName) {\r\n\t\t\tsetUnitNameError('Unit Name is required');\r\n\t\t\tisValid = false;\r\n\t\t} else {\r\n\t\t\tsetUnitNameError('');\r\n\t\t}\r\n\r\n\t\tif (!shortName) {\r\n\t\t\tsetShortNameError('Short Name is required');\r\n\t\t\tisValid = false;\r\n\t\t} else if (/[^a-zA-Z0-9]/.test(shortName)) {\r\n\t\t\tsetShortNameError('Short Name cannot contain spaces or special characters');\r\n\t\t\tisValid = false;\r\n\t\t} else {\r\n\t\t\tsetShortNameError('');\r\n\t\t}\r\n\r\n\t\tif (!group) {\r\n\t\t\tsetGroupError('Group is required');\r\n\t\t\tisValid = false;\r\n\t\t} else {\r\n\t\t\tsetGroupError('');\r\n\t\t}\r\n\r\n\t\tif (!division) {\r\n\t\t\tsetDivisionError('Division is required');\r\n\t\t\tisValid = false;\r\n\t\t} else {\r\n\t\t\tsetDivisionError('');\r\n\t\t}\r\n\r\n\t\tif (!tinNo) {\r\n\t\t\tsetTinNoError('TIN NO. should be 11 digits');\r\n\t\t\tisValid = false;\r\n\t\t} else if (!handleTinValidation(tinNo) && tinNo.length != '11') {\r\n\t\t\tsetTinNoError('TIN NO. should be 11 digits');\r\n\t\t\tisValid = false;\r\n\t\t} else {\r\n\t\t\tsetTinNoError('');\r\n\t\t}\r\n\r\n\t\tif (!regNo) {\r\n\t\t\tsetRegNoError('Registration No is required');\r\n\t\t\tisValid = false;\r\n\t\t} else if (!/^[a-zA-Z0-9]+$/.test(regNo)) {\r\n\t\t\tsetRegNoError('Registration No must contain only alphanumeric characters');\r\n\t\t\tisValid = false;\r\n\t\t} else {\r\n\t\t\tsetRegNoError('');\r\n\t\t}\r\n\r\n\t\tif (!addressLine1) {\r\n\t\t\tsetAddressLine1Error('Address is required');\r\n\t\t\tisValid = false;\r\n\t\t} else {\r\n\t\t\tsetAddressLine1Error('');\r\n\t\t}\r\n\r\n\t\tif (!city) {\r\n\t\t\tsetCityError('City is required');\r\n\t\t\tisValid = false;\r\n\t\t} else {\r\n\t\t\tsetCityError('');\r\n\t\t}\r\n\r\n\t\tif (!state) {\r\n\t\t\tsetStateError('State is required');\r\n\t\t\tisValid = false;\r\n\t\t} else {\r\n\t\t\tsetStateError('');\r\n\t\t}\r\n\r\n\t\tif (!pinNo) {\r\n\t\t\tsetPinNoError('Pin Number is required');\r\n\t\t\tisValid = false;\r\n\t\t} else if (!/^\\d{6}$/.test(pinNo)) {\r\n\t\t\tsetPinNoError('Pin Number must be a 6-digit number');\r\n\t\t\tisValid = false;\r\n\t\t} else {\r\n\t\t\tsetPinNoError('');\r\n\t\t}\r\n\r\n\t\tif (!contactNo) {\r\n\t\t\tsetContactNoError('Contact Number is required');\r\n\t\t\tisValid = false;\r\n\t\t} else if (!/^[6789]\\d{9}$/.test(contactNo)) {\r\n\t\t\tsetContactNoError('Please enter a valid 10-digit Indian mobile number');\r\n\t\t\tisValid = false;\r\n\t\t} else {\r\n\t\t\tsetContactNoError('');\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\r\n\t\tif (!mailId) {\r\n\t\t\tsetMailIdError('Mail id is required');\r\n\t\t\tisValid = false;\r\n\t\t} else if (!/\\S+@\\S+\\.\\S+/.test(mailId)) { // Check if email format is invalid\r\n\t\t\tsetMailIdError('Invalid email format');\r\n\t\t\tisValid = false;\r\n\t\t} else {\r\n\t\t\tsetMailIdError('');\r\n\t\t}\r\n\r\n\t\tif (!isValid) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tlet payload = {\r\n\t\t\t\"Unit_Full_Name\": unitName,\r\n\t\t\t\"Unit_Short_Name\": shortName,\r\n\t\t\t\"Group_Id\": group,\r\n\t\t\t\"Division_Id\": division,\r\n\t\t\t\"Tin_Num\": tinNo,\r\n\t\t\t\"Reg_Num\": regNo,\r\n\t\t\t\"Address_Line_1\": addressLine1,\r\n\t\t\t\"City\": city,\r\n\t\t\t\"State\": state,\r\n\t\t\t\"Pin_Code\": pinNo,\r\n\t\t\t\"Contact_No\": contactNo,\r\n\t\t\t\"Email_Id\": mailId,\r\n\t\t\t\"Unit_Id\": unitId\r\n\t\t}\r\n\r\n\t\ttrackPromise(unitService.editCompanyUnits({ \"data\": [payload] }).then((response) => {\r\n\t\t\t//check login response\r\n\t\t\tif (response.status === 200 && response.data.data.status == \"success\") {\r\n\t\t\t\t// alert(response.data.result)\r\n\t\t\t\tgetCompanyUnitData()\r\n\t\t\t\tcloseEditForm()\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\talert(response.data.data.result);\r\n\t\t\t}\r\n\r\n\t\t}).catch((error) => {\r\n\t\t\t//console.log(error.response.data.error)\r\n\t\t\talert(error.response.data.error);\r\n\t\t})\r\n\t\t);\r\n\r\n\t}\r\n\r\n\treturn <>\r\n\t\t\t<MDBCol size='1' style={{ width : \"13%\" }} className='no-pad-right'>\r\n\t\t\t\t<MDBTabs className='flex-column text-center vertical-tab'>\r\n\t\t\t\t\t<MDBTabsItem className=\"vertical-link\">\r\n\t\t\t\t\t\t<MDBTabsLink onClick={() => handleVerticalClick('tabV1')} active={verticalActive === 'tabV1'}>\r\n\t\t\t\t\t\t\tBaseline\r\n\t\t\t\t\t\t</MDBTabsLink>\r\n\t\t\t\t\t</MDBTabsItem>\r\n\t\t\t\t</MDBTabs>\r\n\t\t\t</MDBCol>\r\n\t\t\t<MDBCol size='11' style={{ width : \"87%\" }} className='no-pad-left'>\r\n\t\t\t\t<MDBTabsContent className='unit-tab-content'>\r\n\t\t\t\t\t<MDBTabsPane show={verticalActive === 'tabV1'}>\r\n\t\t\t\t\t\t<div className='row'>\r\n\t\t\t\t\t\t\t<div className='col-8'>\r\n\t\t\t\t\t\t\t\t<h1 className='h1'> Company Units </h1>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className='col-4 text-right'>\r\n\t\t\t\t\t\t\t\t<Button className='primary-btn mt-10' onClick={() => {setShow(true);stateValues() }}>\r\n\t\t\t\t\t\t\t\t<i className='fa fa-plus fa-white'> </i> Unit \r\n\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t<Modal\r\n\t\t\t\t\t\t\t\t\tshow={show}\r\n\t\t\t\t\t\t\t\t\tonHide={() => setShow(false)}\r\n\t\t\t\t\t\t\t\t\tdialogClassName=\"modal-50w\"\r\n\t\t\t\t\t\t\t\t\tbackdrop=\"static\"\r\n\t\t\t\t\t\t\t\t\tkeyboard={false}>\r\n\r\n\t\t\t\t\t\t\t\t\t<Modal.Header closeButton>\r\n\t\t\t\t\t\t\t\t\t\t<Modal.Title> Add New Unit  </Modal.Title>\r\n\t\t\t\t\t\t\t\t\t</Modal.Header>\r\n\t\t\t\t\t\t\t\t\t<Modal.Body>\r\n\t\t\t\t\t\t\t\t\t\t<form onSubmit={handleUnitSetup}>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='row'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className='col-6'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<MDBInput wrapperClass='mb-3' type='text' tabindex=\"1\" label='Name of Unit' onChange={(e) => { setunitName(e.target.value) }} value={unitName} name='unitName' />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{unitNameError && <p style={{ color: 'red' }}>{unitNameError}</p>}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<MDBInput label='Address' type='text' tabindex=\"3\" wrapperClass='mb-3' onChange={(e) => { setAddressLine1(e.target.value) }} value={addressLine1} name='addressLine1' />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{addressLine1Error && <p style={{ color: 'red' }}>{addressLine1Error}</p>}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Form.Select className='mb-3' tabindex=\"5\" label='State' onChange={(e) => { setState(e.target.value) }} value={state} name='state'  >\r\n                                                        <option> Select State </option>\r\n                                                        {stateList.map((item) => (\r\n                                                            <option key={item.State_Name} value={item.State_Name}>\r\n                                                                {item.State_Name}\r\n                                                            </option>\r\n                                                        ))}\r\n                                                    </Form.Select>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<MDBInput wrapperClass='mb-3' tabindex=\"7\" type='text' label='Division' onChange={(e) => { setdivision(e.target.value); }} value={division} name='division' />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{divisionError && <p style={{ color: 'red' }}>{divisionError}</p>}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<MDBInput wrapperClass='mb-3' type='number' tabindex=\"9\" label='TIN No.' onChange={(e) => { setTinNo(e.target.value) }} value={tinNo} name='tinNo' />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{tinNoError && <p style={{ color: 'red' }}>{tinNoError}</p>}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<MDBInput wrapperClass='mb-3' tabindex=\"11\" type='text' label='Registration No.' onChange={(e) => { setRegNo(e.target.value) }} value={regNo} name='regNo' />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{regNoError && <p style={{ color: 'red' }}>{regNoError}</p>}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className='col-6'>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<MDBInput wrapperClass='mb-3' type='text' tabindex=\"2\" label='Short Name' onChange={(e) => { setShortName(e.target.value) }} value={shortName} name='shortName' />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{shortNameError && <p style={{ color: 'red' }}>{shortNameError}</p>}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<MDBInput wrapperClass='mb-3' tabindex=\"4\" type='text' label='City' onChange={(e) => { setCity(e.target.value) }} value={city} name='city' />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{cityError && <p style={{ color: 'red' }}>{cityError}</p>}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<MDBInput wrapperClass='mb-3' tabindex=\"6\" type='number' label='Pincode' onChange={(e) => { setPinNO(e.target.value) }} value={pinNo} name='pinNo' />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{pinNoError && <p style={{ color: 'red' }}>{pinNoError}</p>}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<MDBInput wrapperClass='mb-3' type='text' tabindex=\"8\" label='Group' onChange={(e) => { setGroup(e.target.value) }} value={group} name='group' />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{groupError && <p style={{ color: 'red' }}>{groupError}</p>}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<MDBInput wrapperClass='mb-3' type='email' tabindex=\"10\" label='Admin E-Mail ID' onChange={(e) => { setMailId(e.target.value) }} value={mailId} name='mailId' />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{mailIdError && <p style={{ color: 'red' }}>{mailIdError}</p>}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<MDBInput wrapperClass='mb-3' type='number' tabindex=\"12\" label='Admin Contact No.' onChange={(e) => { setContactNo(e.target.value) }} value={contactNo} name='contactNo' />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{contactNoError && <p style={{ color: 'red' }}>{contactNoError}</p>}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</form>\r\n\r\n\t\t\t\t\t\t\t\t\t</Modal.Body>\r\n\t\t\t\t\t\t\t\t\t<Modal.Footer>\r\n\t\t\t\t\t\t\t\t\t\t<Button variant=\"secondary\" onClick={handleClose} style={{ width: '15%' }} >\r\n\t\t\t\t\t\t\t\t\t\t\tCancel\r\n\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t\t<Button variant=\"primary\" type='submit' onClick={handleUnitSetup}  style={{ width: '15%' }}>\r\n\t\t\t\t\t\t\t\t\t\t\tSave\r\n\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t</Modal.Footer>\r\n\t\t\t\t\t\t\t\t</Modal>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className='col-12'>\r\n\r\n\t\t\t\t\t\t\t\t<CompanyUnitTable defaultPageSize={10} data={data} openEditForm={openEditForm} deleteUnitRecord = {deleteUnitRecord} />\r\n\r\n\t\t\t\t\t\t\t\t<Modal show={isEditFormOpen} onHide={closeEditForm} dialogClassName=\"modal-50w\"\r\n\t\t\t\t\t\t\t\t\tbackdrop=\"static\">\r\n\t\t\t\t\t\t\t\t\t<Modal.Header closeButton>\r\n\t\t\t\t\t\t\t\t\t\t<Modal.Title>Edit Company Unit</Modal.Title>\r\n\t\t\t\t\t\t\t\t\t</Modal.Header>\r\n\t\t\t\t\t\t\t\t\t<Modal.Body>\r\n\t\t\t\t\t\t\t\t\t\t<form onSubmit={handleEditUnit}>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='row'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className='col-6'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<MDBInput wrapperClass='mb-3' type='text' tabindex=\"1\" label='Name of Unit' readOnly onChange={(e) => { setunitName(e.target.value) }} value={unitName} name='unitName' />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{unitNameError && <p style={{ color: 'red' }}>{unitNameError}</p>}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<MDBInput label='Address' type='text' wrapperClass='mb-3'  tabindex=\"3\" onChange={(e) => { setAddressLine1(e.target.value) }} value={addressLine1} name='addressLine1' />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{addressLine1Error && <p style={{ color: 'red' }}>{addressLine1Error}</p>}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <MDBInput wrapperClass='mb-3' label='State'  tabindex=\"5\" onChange={(e) => { setState(e.target.value) }} value={state} name='state' />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{stateError && <p style={{ color: 'red' }}>{stateError}</p>} */}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Form.Select className='mb-3' tabindex=\"5\" label='State' onChange={(e) => { setState(e.target.value) }} value={state} name='state'  >\r\n                                                        <option> Select State </option>\r\n                                                        {stateList.map((item) => (\r\n                                                            <option key={item.State_Name} value={item.State_Name}>\r\n                                                                {item.State_Name}\r\n                                                            </option>\r\n                                                        ))}\r\n                                                    </Form.Select>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<MDBInput wrapperClass='mb-3' type='text'  tabindex=\"7\" label='Division' onChange={(e) => { setdivision(e.target.value); }} value={division} name='division' />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{divisionError && <p style={{ color: 'red' }}>{divisionError}</p>}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<MDBInput wrapperClass='mb-3' type='number'  tabindex=\"9\" label='TIN No.' onChange={(e) => { setTinNo(e.target.value) }} value={tinNo} name='tinNo' />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{tinNoError && <p style={{ color: 'red' }}>{tinNoError}</p>}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<MDBInput wrapperClass='mb-3' type='text'  tabindex=\"11\" label='Registration No.' onChange={(e) => { setRegNo(e.target.value) }} value={regNo} name='regNo' />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{regNoError && <p style={{ color: 'red' }}>{regNoError}</p>}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className='col-6'>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<MDBInput wrapperClass='mb-3' type='text' label='Short Name'  tabindex=\"2\" readOnly onChange={(e) => { setShortName(e.target.value) }} value={shortName} name='shortName' />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{shortNameError && <p style={{ color: 'red' }}>{shortNameError}</p>}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<MDBInput wrapperClass='mb-3' label='City' type='text'  tabindex=\"4\" onChange={(e) => { setCity(e.target.value) }} value={city} name='city' />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{cityError && <p style={{ color: 'red' }}>{cityError}</p>}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<MDBInput wrapperClass='mb-3' label='Pincode' type='number'  tabindex=\"6\" onChange={(e) => { setPinNO(e.target.value) }} value={pinNo} name='pinNo' />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{pinNoError && <p style={{ color: 'red' }}>{pinNoError}</p>}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<MDBInput wrapperClass='mb-3' label='Group' type='text'  tabindex=\"8\" onChange={(e) => { setGroup(e.target.value) }} value={group} name='group' />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{groupError && <p style={{ color: 'red' }}>{groupError}</p>}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<MDBInput wrapperClass='mb-3' type='email' label='Admin E-Mail ID'  tabindex=\"10\" onChange={(e) => { setMailId(e.target.value) }} value={mailId} name='mailId' />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{mailIdError && <p style={{ color: 'red' }}>{mailIdError}</p>}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<MDBInput wrapperClass='mb-3' type='number'  tabindex=\"12\" label='Admin Contact No.' onChange={(e) => { setContactNo(e.target.value) }} value={contactNo} name='contactNo' />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{contactNoError && <p style={{ color: 'red' }}>{contactNoError}</p>}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</form>\r\n\r\n\t\t\t\t\t\t\t\t\t</Modal.Body>\r\n\t\t\t\t\t\t\t\t\t<Modal.Footer>\r\n                                        <Button variant=\"secondary\" onClick={closeEditForm} style={{ width: '15%' }}>\r\n                                            Cancel\r\n                                        </Button>\r\n                                        <Button variant=\"primary\" onClick={handleEditUnit} style={{ width: '15%' }}>\r\n                                            Save\r\n                                        </Button>\r\n                                    </Modal.Footer>\r\n\t\t\t\t\t\t\t\t</Modal>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</MDBTabsPane>\r\n\t\t\t\t</MDBTabsContent>\r\n\t\t\t</MDBCol>\r\n\r\n\t</>\r\n}","/**\r\n * owner : \r\n * author : \r\n */\r\nimport api from \"./interceptor\";\r\n\r\nclass userService {\r\n\r\n    saveCompanyUsers(payload) {\r\n      const apiUrl = process.env.REACT_APP_API_URL; // Read base URL from environment\r\n      return api.post(`${apiUrl}/api/saveCompanyUsers`, payload);\r\n    }\r\n\r\n    editCompanyUsers(payload) {\r\n      const apiUrl = process.env.REACT_APP_API_URL; // Read base URL from environment\r\n      return api.post(`${apiUrl}/api/editCompanyUsers`, payload);\r\n    }\r\n\r\n    deleteCompanyUsers(payload) {\r\n      const apiUrl = process.env.REACT_APP_API_URL; // Read base URL from environment\r\n      return api.post(`${apiUrl}/api/deleteCompanyUsers`, payload);\r\n    }\r\n\r\n    getCompanyUsers() {\r\n      const apiUrl = process.env.REACT_APP_API_URL; // Read base URL from environment\r\n      return api\r\n        .get(`${apiUrl}/api/getCompanyUsers`)\r\n        .then((response) => {\r\n          return response;\r\n        })\r\n        .catch((err) => {\r\n          console.error(\"Error fetching company users:\", err);\r\n        });\r\n    }\r\n}\r\n\r\nexport default new userService();\r\n","import React from 'react'\r\nimport userService from \"../../../../services/userService\";\r\nimport { trackPromise } from 'react-promise-tracker';\r\nimport { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport { useTable } from 'react-table';\r\n\r\nexport default function CompanyUserTable(props) {\r\n\t//const [data, setData] = useState([])\r\n    let data = props.data\r\n\t\r\n\tconst columns = React.useMemo(\r\n\t\t() => [\r\n\t\t  \r\n\t\t  {\r\n\t\t\tHeader: 'User Name',\r\n\t\t\taccessor: 'User_Name',\r\n\t\t  },\r\n\t\t  {\r\n\t\t\tHeader: 'Employee ID',\r\n\t\t\taccessor: 'User_Employee_Id',\r\n\t\t  },\r\n\t\t  {\r\n\t\t\tHeader: 'Unit Name',\r\n\t\t\taccessor: 'Unit_Short_Name',\r\n\t\t  },\r\n\t\t  {\r\n\t\t\tHeader: 'Department',\r\n\t\t\taccessor: 'Department_Id',\r\n\t\t  },\r\n\t\t  {\r\n\t\t\tHeader: 'Designation',\r\n\t\t\taccessor: 'Designation_Id',\r\n\t\t  },\r\n\t\t  {\r\n\t\t\tHeader: 'Contact No.',\r\n\t\t\taccessor: 'Mobile_Num',\r\n\t\t  },\r\n\t\t  {\r\n\t\t\tHeader: 'E-Mail',\r\n\t\t\taccessor: 'Mail_Id',\r\n\t\t  },\r\n\t\t  {\r\n\t\t\tHeader: 'Role',\r\n\t\t\taccessor: 'User_Role',\r\n\t\t  },\r\n\t\t  {\r\n\t\t\tHeader: 'Action',\r\n\t\t\taccessor: 'action', // You can set a dummy accessor for the action column\r\n\t\t\tCell: ({ row }) => (\r\n\t\t\t\t[\r\n\t\t\t\t\t<i className='fa fa-edit pointer' onClick={(data) => {\r\n\t\t\t\t\t  props.openEditForm(row.original)\r\n\t\t\t\t\t}} title='Edit'> </i>,  \r\n\t\t\t\t\t<i className='fa fa-trash ml-15 pointer' onClick={(data) => {\r\n\t\t\t\t\t\tprops.deleteUserRecord(row.original)\r\n\t\t\t\t\t  }} title='Delete' > </i>\r\n\t\t\t\t]\r\n\t\t\t),\r\n\t\t  },\r\n\t\t],\r\n\t\t[]\r\n\t  );\r\n\t\t\r\n\t  const {\r\n\t\tgetTableProps,\r\n\t\tgetTableBodyProps,\r\n\t\theaderGroups,\r\n\t\trows,\r\n\t\tprepareRow,\r\n\t  } = useTable({\r\n\t\tcolumns,\r\n\t\tdata,\r\n\t  });\r\n\t\r\n\t\r\n  return (\r\n    <div className='mt-4'>\r\n      <table {...getTableProps()} className=\"table\">\r\n        <thead>\r\n          {headerGroups.map((headerGroup) => (\r\n            <tr {...headerGroup.getHeaderGroupProps()}>\r\n              {headerGroup.headers.map((column) => (\r\n                <th {...column.getHeaderProps()}>{column.render('Header')}</th>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </thead>\r\n        <tbody {...getTableBodyProps()}>\r\n          {rows.map((row) => {\r\n            prepareRow(row);\r\n            return (\r\n              <tr {...row.getRowProps()}>\r\n                {row.cells.map((cell) => {\r\n                  return (\r\n                    <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\r\n                  );\r\n                })}\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  )\r\n}\r\n","/**\r\n * owner : \r\n * author :\r\n */\r\n\r\nimport { useEffect, useState } from 'react';\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\nimport Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Form from 'react-bootstrap/Form';\r\n\r\nimport './UserSetUp.scss';\r\n\r\nimport {\r\n    MDBTabs,\r\n    MDBTabsItem,\r\n    MDBTabsLink,\r\n    MDBTabsContent,\r\n    MDBTabsPane,\r\n    MDBRow,\r\n    MDBCol,\r\n    MDBInput\r\n} from 'mdb-react-ui-kit';\r\n\r\n\r\nimport userService from \"../../../../services/userService\";\r\nimport { trackPromise } from 'react-promise-tracker';\r\nimport CompanyUserTable from './CompanyUserTable';\r\nimport adminService from \"../../../../services/adminService\"\r\n\r\nexport default function UserSetUp() {\r\n\r\n    const [show, setShow] = useState(false);\r\n    const handleClose = () => setShow(false);\r\n\r\n    const [verticalActive, setVerticalActive] = useState('tabV1');\r\n    const [userName, setUserName] = useState(\"\")\r\n    const [userNameError, setUserNameError] = useState(\"\")\r\n\r\n    const [empId, setEmpId] = useState(\"\")\r\n    const [empIdError, setEmpIdError] = useState(\"\")\r\n\r\n    const [department, setDepartment] = useState(\"\")\r\n    const [departmentError, setDepartmentError] = useState(\"\")\r\n    \r\n    const [designation, setDesignation] = useState(\"\")\r\n    const [designationError, setDesignationError] = useState(\"\")\r\n\r\n    const [mobileNumber, setMobileNumber] = useState(\"\")\r\n    const [mobileNumberError, setMobileNumberError] = useState(\"\")\r\n\r\n    const [personalMaildId, setPersonalMaildId] = useState(\"\")\r\n    const [personalMaildIdError, setPersonalMaildIdError] = useState(\"\")\r\n\r\n    const [userLevel, setUserLevel] = useState(\"\")\r\n    const [userLevelError, setUserLevelError] = useState(\"\")\r\n\r\n    const [status, setStatus] = useState(\"\")\r\n    const [statusError, setStatusError] = useState(\"\")\r\n\r\n    const [loginId, setLoginId] = useState(\"\")\r\n    const [loginIdError, setLoginIdError] = useState(\"\")\r\n\r\n    const [basicData, setBasicData] = useState([])\r\n    const [basicDesgination, setbasicDesgination] = useState([])\r\n    const [basicDepartment, setBasicDepartment] = useState([])\r\n\r\n    const [selectedUnit, setSelectedUnit] = useState('');\r\n    const [selectedUnitError, setSelectedUnitError] = useState('');\r\n\r\n    const [data, setData] = useState([])\r\n    const [isEditFormOpen, setIsEditFormOpen] = useState(false);\r\n\r\n    const handleVerticalClick = (value) => {\r\n        if (value === verticalActive) {\r\n            return;\r\n        }\r\n        setVerticalActive(value);\r\n    };\r\n\r\n    const getBasicDetails = () => {\r\n        trackPromise(\r\n            adminService.getBasicDetails().then((response) => {\r\n                setBasicData(response.data[0].data[0].data.units)\r\n                setbasicDesgination(response.data[0].data[0].data.designation)\r\n                setBasicDepartment(response.data[0].data[0].data.department)\r\n            })\r\n        );\r\n    }\r\n\r\n    useEffect(() => {\r\n        getBasicDetails()\r\n    }, [])\r\n    // function stateValues() {\r\n\r\n    // }\r\n\r\n\r\n    const handleUnitSetup = (e) => {\r\n        e.preventDefault();\r\n        let isValid = true;\r\n\t\tif (!selectedUnit) {\r\n\t\t\tsetSelectedUnitError('Unit is required');\r\n\t\t\tisValid = false;\r\n\t\t} else {\r\n\t\t\tsetSelectedUnitError('');\r\n\t\t}\r\n\r\n\t\tif (!userName) {\r\n            setUserNameError('User Name is required');\r\n            isValid = false;\r\n        } else if (!/^[a-zA-Z0-9_ ]{3,20}$/.test(userName)) {\r\n            setUserNameError('User Name must be between 3 and 20 characters long and can only contain letters, numbers, underscores, and spaces');\r\n            isValid = false;\r\n        } else {\r\n            setUserNameError('');\r\n        }\r\n        \r\n\r\n\t\tif (!empId) {\r\n            setEmpIdError('Employee ID is required');\r\n            isValid = false;\r\n        } else if (!/^[a-zA-Z0-9]+$/.test(empId)) {\r\n            setEmpIdError('Employee ID must contain only alphanumeric characters');\r\n            isValid = false;\r\n        } else {\r\n            setEmpIdError('');\r\n        }\r\n\r\n\t\tif (!loginId) {\r\n\t\t\tsetLoginIdError('Login Id is required');\r\n\t\t\tisValid = false;\r\n\t\t} else {\r\n\t\t\tsetLoginIdError('');\r\n\t\t}\r\n\r\n        if (!department) {\r\n\t\t\tsetDepartmentError('Department is required');\r\n\t\t\tisValid = false;\r\n\t\t} else {\r\n\t\t\tsetDepartmentError('');\r\n\t\t}\r\n\r\n\t\tif (!designation) {\r\n\t\t\tsetDesignationError('Designation is required');\r\n\t\t\tisValid = false;\r\n\t\t} else {\r\n\t\t\tsetDesignationError('');\r\n\t\t}\r\n\r\n\t\tif (!mobileNumber) {\r\n            setMobileNumberError('Mobile Number is required');\r\n            isValid = false;\r\n        } else if (!/^[6-9]\\d{9}$/.test(mobileNumber)) {\r\n            setMobileNumberError('Invalid Indian mobile number');\r\n            isValid = false;\r\n        } else {\r\n            setMobileNumberError('');\r\n        }\r\n\r\n\t\tif (!personalMaildId) {\r\n            setPersonalMaildIdError('Mail ID is required');\r\n            isValid = false;\r\n        } else if (!/\\S+@\\S+\\.\\S+/.test(personalMaildId)) { // Check if email format is invalid\r\n            setPersonalMaildIdError('Invalid email format');\r\n            isValid = false;\r\n        } else {\r\n            setPersonalMaildIdError('');\r\n        }\r\n\r\n        if (!status) {\r\n\t\t\tsetStatusError('Status is required');\r\n\t\t\tisValid = false;\r\n\t\t} else {\r\n\t\t\tsetStatusError('');\r\n\t\t}\r\n\r\n\t\tif (!userLevel) {\r\n\t\t\tsetUserLevelError('User Level is required');\r\n\t\t\tisValid = false;\r\n\t\t} else {\r\n\t\t\tsetUserLevelError('');\r\n\t\t}\r\n\r\n\t\tif (!isValid) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n        let payload = {\r\n            \"Unit_Short_Name\": selectedUnit,\r\n            \"User_Name\": userName,\r\n            \"User_Employee_Id\": empId,\r\n            \"User_Login_ID\": loginId,\r\n            \"Department_Id\": department,\r\n            \"Designation_Id\": designation,\r\n            \"Mobile_Num\": mobileNumber,\r\n            \"Mail_Id\": personalMaildId,\r\n            \"status\": status,\r\n            \"User_Role\": userLevel\r\n        }\r\n        trackPromise(userService.saveCompanyUsers({ \"data\": [payload] }).then((response) => {\r\n            //check login response\r\n            if (response.status == 200 && response.data.data.status == \"success\") {\r\n                // alert(response.data.result);\r\n                getCompanyUserData()\r\n                handleClose()\r\n            }\r\n            else {\r\n                alert(response.data.data.result);\r\n            }\r\n\r\n        }).catch((error) => {\r\n            //console.log(error.response.data.error)\r\n            alert(error.response.data.error);\r\n        })\r\n        );\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n    }, [])\r\n\r\n    const getCompanyUserData = () => {\r\n        trackPromise(\r\n            userService.getCompanyUsers().then((response) => {\r\n                setData(response.data.Company_Users)\r\n            })\r\n        );\r\n    }\r\n    useEffect(() => {\r\n        getCompanyUserData()\r\n    }, [])\r\n\r\n    const pagination = paginationFactory({\r\n        page: 1,\r\n        sizePerPage: 10,\r\n        lastPageText: \">>\",\r\n        firstPageText: \"<<\",\r\n        nextPageText: \">\",\r\n        prePageText: \"<\",\r\n        showTotal: true,\r\n        alwaysShowAllBtns: true,\r\n        hideSizePerPage: true,\r\n        onPageChange: function (page, sizePerPage) { },\r\n        onSizePerPageChange: function (page, sizePerPage) { },\r\n    });\r\n    const iconActionHandler = (cell, row, rowIndex) => {\r\n        return (\r\n            <>\r\n                <i className=\"fas fa-edit action-icon\" title=\"Edit\" > </i>\r\n            </>\r\n        );\r\n    };\r\n\r\n   \r\n\r\n    const handleUserLevel = (e) => {\r\n        setUserLevel(e.target.value);\r\n    };\r\n\r\n    const handleStatus = (e) => {\r\n        setStatus(e.target.value);\r\n    };\r\n    function editFormDetails (data) {\r\n        setSelectedUnit(data.Unit_Short_Name)\r\n        setUserName(data.User_Name)\r\n        setEmpId(data.User_Employee_Id)\r\n        setDepartment(data.Department_Id)\r\n        setDesignation(data.Designation_Id)\r\n        setMobileNumber(data.Mobile_Num)\r\n        setPersonalMaildId(data.Mail_Id)\r\n        setUserLevel(data.User_Role)\r\n        setStatus(data.Status)\r\n        setLoginId(data.User_Login_ID)\r\n        \r\n    }\r\n    function settingValuesToEmpty () {\r\n        setSelectedUnit(\"\")\r\n        setUserName(\"\")\r\n        setEmpId(\"\")\r\n        setDepartment(\"\")\r\n        setDesignation(\"\")\r\n        setMobileNumber(\"\")\r\n        setPersonalMaildId(\"\")\r\n        setUserLevel()\r\n        setStatus(\"\")\r\n        setLoginId(\"\")\r\n\r\n        setSelectedUnitError('');\r\n        setUserNameError('');\r\n        setEmpIdError('');\r\n        setLoginIdError('');\r\n\t\tsetDepartmentError('');\r\n        setDesignationError('');\r\n        setMobileNumberError('');\r\n        setPersonalMaildIdError('');\r\n        setStatusError('');\r\n\t\tsetUserLevelError('');\r\n    }\r\n    const openEditForm = (data) => {\r\n        \r\n        setSelectedUnitError('');\r\n        setUserNameError('');\r\n        setEmpIdError('');\r\n        setLoginIdError('');\r\n\t\tsetDepartmentError('');\r\n        setDesignationError('');\r\n        setMobileNumberError('');\r\n        setPersonalMaildIdError('');\r\n        setStatusError('');\r\n\t\tsetUserLevelError('');\r\n\r\n        editFormDetails(data)\r\n        setIsEditFormOpen(true);\r\n    };\r\n\r\n    const closeEditForm = () => {\r\n        setIsEditFormOpen(false);\r\n    };\r\n    function handleForm() {\r\n        settingValuesToEmpty()\r\n        setShow(true)\r\n    }\r\n\r\n    const handleEditUserDetails = (e) => {\r\n        e.preventDefault();\r\n        let isValid = true;\r\n\t\tif (!selectedUnit) {\r\n\t\t\tsetSelectedUnitError('Unit is required');\r\n\t\t\tisValid = false;\r\n\t\t} else {\r\n\t\t\tsetSelectedUnitError('');\r\n\t\t}\r\n\r\n\t\tif (!userName) {\r\n            setUserNameError('User Name is required');\r\n            isValid = false;\r\n        } else if (!/^[a-zA-Z0-9_ ]{3,20}$/.test(userName)) {\r\n            setUserNameError('User Name must be between 3 and 20 characters long and can only contain letters, numbers, underscores, and spaces');\r\n            isValid = false;\r\n        } else {\r\n            setUserNameError('');\r\n        }\r\n        \r\n\r\n\t\tif (!empId) {\r\n            setEmpIdError('Employee ID is required');\r\n            isValid = false;\r\n        } else if (!/^[a-zA-Z0-9]+$/.test(empId)) {\r\n            setEmpIdError('Employee ID must contain only alphanumeric characters');\r\n            isValid = false;\r\n        } else {\r\n            setEmpIdError('');\r\n        }\r\n\r\n\t\tif (!loginId) {\r\n\t\t\tsetLoginIdError('Login Id is required');\r\n\t\t\tisValid = false;\r\n\t\t} else {\r\n\t\t\tsetLoginIdError('');\r\n\t\t}\r\n\r\n        if (!department) {\r\n\t\t\tsetDepartmentError('Department is required');\r\n\t\t\tisValid = false;\r\n\t\t} else {\r\n\t\t\tsetDepartmentError('');\r\n\t\t}\r\n\r\n\t\tif (!designation) {\r\n\t\t\tsetDesignationError('Designation is required');\r\n\t\t\tisValid = false;\r\n\t\t} else {\r\n\t\t\tsetDesignationError('');\r\n\t\t}\r\n\r\n\t\tif (!mobileNumber) {\r\n            setMobileNumberError('Mobile Number is required');\r\n            isValid = false;\r\n        } else if (!/^[6-9]\\d{9}$/.test(mobileNumber)) {\r\n            setMobileNumberError('Invalid Indian mobile number');\r\n            isValid = false;\r\n        } else {\r\n            setMobileNumberError('');\r\n        }\r\n\r\n\t\tif (!personalMaildId) {\r\n            setPersonalMaildIdError('Mail ID is required');\r\n            isValid = false;\r\n        } else if (!/\\S+@\\S+\\.\\S+/.test(personalMaildId)) { // Check if email format is invalid\r\n            setPersonalMaildIdError('Invalid email format');\r\n            isValid = false;\r\n        } else {\r\n            setPersonalMaildIdError('');\r\n        }\r\n\r\n        if (!status) {\r\n\t\t\tsetStatusError('Status is required');\r\n\t\t\tisValid = false;\r\n\t\t} else {\r\n\t\t\tsetStatusError('');\r\n\t\t}\r\n\r\n\t\tif (!userLevel) {\r\n\t\t\tsetUserLevelError('User Level is required');\r\n\t\t\tisValid = false;\r\n\t\t} else {\r\n\t\t\tsetUserLevelError('');\r\n\t\t}\r\n\r\n\t\tif (!isValid) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n        let payload = {\r\n            \"Unit_Short_Name\": selectedUnit,\r\n            \"User_Name\": userName,\r\n            \"User_Employee_Id\": empId,\r\n            \"User_Login_ID\": loginId,\r\n            \"Department_Id\": department,\r\n            \"Designation_Id\": designation,\r\n            \"Mobile_Num\": mobileNumber,\r\n            \"Mail_Id\": personalMaildId,\r\n            \"status\": status,\r\n            \"User_Role\": userLevel\r\n        }\r\n        trackPromise(userService.editCompanyUsers({ \"data\": [payload] }).then((response) => {\r\n            //check login response\r\n            if (response.status == 200 && response.data.data.status == \"success\") {\r\n                // alert(response.data.result);\r\n                getCompanyUserData()\r\n                closeEditForm()\r\n            }\r\n            else {\r\n                alert(response.data.data.result);\r\n            }\r\n\r\n        }).catch((error) => {\r\n            //console.log(error.response.data.error)\r\n            alert(error.response.data.error);\r\n        })\r\n        );\r\n    }\r\n\r\n    const deleteUserRecord = (data) => {\r\n      \r\n        if (window.confirm(\"Are you sure to delete the Company User ?\"))\r\n        { \r\n            let payload = {\r\n                \"User_Employee_Id\":data.User_Employee_Id\r\n                }\r\n                trackPromise(userService.deleteCompanyUsers({ \"data\": [payload] }).then((response) => {\r\n                //check login response\r\n                if (response.status === 200) {\r\n                    getCompanyUserData()\r\n                }\r\n                else {\r\n                    alert(response.data.message);\r\n                }\r\n                \r\n                }).catch((error) => {\r\n                //console.log(error.response.data.error)\r\n                alert(error.response.data.error);\r\n                })\r\n                );   \r\n        }\r\n    };\r\n    \r\n    return <>\r\n        <MDBRow>\r\n            <MDBCol size='1' style={{ width : \"13%\" }} className='no-pad-right'>\r\n                <MDBTabs className='flex-column text-center vertical-tab'>\r\n                    <MDBTabsItem className=\"vertical-link\">\r\n                        <MDBTabsLink onClick={() => handleVerticalClick('tabV1')} active={verticalActive === 'tabV1'}>\r\n                            Baseline\r\n                        </MDBTabsLink>\r\n                    </MDBTabsItem>\r\n                </MDBTabs>\r\n            </MDBCol>\r\n            <MDBCol size='11' style={{ width : \"87%\" }} className='no-pad-left'>\r\n                <MDBTabsContent className='unit-tab-content'>\r\n                    <MDBTabsPane show={verticalActive === 'tabV1'}>\r\n                        <div className='row'>\r\n                        <div className='col-8'>\r\n\t\t\t\t\t\t\t\t<h1 className='h1'> Company Users </h1>\r\n\t\t\t\t\t\t\t</div>\r\n                            <div className='col-4 text-right '>\r\n                                <Button className='primary-btn mt-10' onClick={handleForm}>\r\n                                <i className='fa fa-plus fa-white'> </i> User \r\n                                </Button>\r\n                                <Modal\r\n                                    show={show}\r\n                                    onHide={() => setShow(false)}\r\n                                    dialogClassName=\"modal-50w\"\r\n                                    backdrop=\"static\"\r\n                                    keyboard={false}>\r\n\r\n                                    <Modal.Header closeButton style={{color:'white'}}>\r\n                                        <Modal.Title> Add New User </Modal.Title>\r\n                                    </Modal.Header>\r\n                                    <Modal.Body>\r\n                                        <form onSubmit={handleUnitSetup}>\r\n                                            <div className='row' >\r\n                                        \r\n                                                <div className='col-6'>\r\n\r\n                                                <MDBInput wrapperClass='mb-3' type='text' label='Name' tabindex=\"1\" onChange={(e) => { setUserName(e.target.value) }} value={userName} name=' username' />\r\n                                                {userNameError && <p style={{ color: 'red' }}>{userNameError}</p>}\r\n\r\n                                                <MDBInput wrapperClass='mb-3' type='email' label='E-Mail ID' tabindex=\"3\" onChange={(e) => { setPersonalMaildId(e.target.value) }} value={personalMaildId} name='PersonalMaildId' />\r\n                                                { personalMaildIdError && <p style={{ color: 'red' }}>{personalMaildIdError}</p>}\r\n\r\n                                                <Form.Select className='mb-3' tabindex=\"5\" onChange={(e) => { setSelectedUnit(e.target.value) }} value={selectedUnit} name=\"selectedUnit\" >\r\n                                                        <option value=''>Select Unit</option>\r\n                                                        {basicData.map((item) => (\r\n                                                            <option key={item.Unit_Id} value={item.Unit_Short_Name}>\r\n                                                                {item.Unit_Full_Name}\r\n                                                            </option>\r\n                                                        ))}\r\n                                                    </Form.Select>\r\n                                                    { selectedUnitError && <p style={{ color: 'red' }}>{selectedUnitError}</p>}\r\n                                                    \r\n                                                <Form.Select className='mb-3' tabindex=\"7\" onChange={(e) => { setDepartment(e.target.value) }} value={department} name=' department' >\r\n                                                        <option> Select Department </option>\r\n                                                        {basicDepartment.map((item) => (\r\n                                                            <option key={item.Department_Id} value={item.Department_Name}>\r\n                                                                {item.Department_Name}\r\n                                                            </option>\r\n                                                        ))}\r\n                                                    </Form.Select>\r\n                                                    { departmentError && <p style={{ color: 'red' }}>{departmentError}</p>}\r\n\r\n                                                    <Form.Select className='mb-3' tabindex=\"9\" onChange={handleStatus} value={status}>\r\n                                                        <option> Select Status </option>\r\n                                                        <option value=\"active\">Active</option>\r\n                                                        <option value=\"inactive\">InActive</option>\r\n                                                    </Form.Select>\r\n                                                    { statusError && <p style={{ color: 'red' }}>{statusError}</p>}\r\n\r\n                                                </div> \r\n\r\n                                                <div className='col-6'>\r\n\r\n                                                <MDBInput wrapperClass='mb-3' type='text' label='Login ID' tabindex=\"2\" onChange={(e) => { setLoginId(e.target.value) }} value={loginId} name='LoginId' />\r\n                                                { loginIdError && <p style={{ color: 'red' }}>{loginIdError}</p>}\r\n                                                  \r\n                                                <MDBInput wrapperClass='mb-3' type='text' tabindex=\"4\" label='Employee ID' onChange={(e) => { setEmpId(e.target.value) }} value={empId} name=' EmpId' />\r\n                                                { empIdError && <p style={{ color: 'red' }}>{empIdError}</p>}\r\n\r\n                                                    <Form.Select className='mb-3' tabindex=\"6\" onChange={(e) => { setDesignation(e.target.value) }} value={designation} name=' designation' >\r\n                                                        <option> Select Designation </option>\r\n                                                        {basicDesgination.map((item) => (\r\n                                                            <option key={item.Devision_Id} value={item.Devision_Name}>\r\n                                                                {item.Devision_Name}\r\n                                                            </option>\r\n                                                        ))}\r\n                                                    </Form.Select>\r\n                                                    { designationError && <p style={{ color: 'red' }}>{designationError}</p>}\r\n\r\n                                                    <Form.Select className='mb-3' tabindex=\"8\" onChange={handleUserLevel} value={userLevel}>\r\n                                                        <option> Select Role </option>\r\n                                                        <option value=\"general\">General</option>\r\n                                                        <option value=\"admin\">Admin</option>\r\n                                                        <option value=\"superAdmin\">Super Admin</option>\r\n                                                    </Form.Select>\r\n                                                    { userLevelError && <p style={{ color: 'red' }}>{userLevelError}</p>}\r\n                                                \r\n                                                    <MDBInput wrapperClass='mb-3' type='number' tabindex=\"10\" label='Contact No.' onChange={(e) => { setMobileNumber(e.target.value) }} value={mobileNumber} name=' mobileNumber' />\r\n                                                    { mobileNumberError && <p style={{ color: 'red' }}>{mobileNumberError}</p>}\r\n                                                </div>\r\n                                            </div>\r\n                                        </form>\r\n\r\n                                    </Modal.Body>\r\n                                    <Modal.Footer>\r\n                                    <Button variant=\"secondary\" onClick={handleClose} style={{ width: '15%' }}>\r\n                                             Cancel \r\n                                        </Button>\r\n                                    <Button variant=\"primary\" type='submit' block onClick={handleUnitSetup} style={{ width: '15%' }}>\r\n                                            Save\r\n                                        </Button>\r\n\r\n                                        \r\n                                        \r\n                                    </Modal.Footer>\r\n                                </Modal>\r\n                            </div>\r\n                            <div className='col-12'>\r\n                                <CompanyUserTable data={data} openEditForm={openEditForm} deleteUserRecord = {deleteUserRecord}/>\r\n                                <Modal show={isEditFormOpen} onHide={closeEditForm} dialogClassName=\"modal-50w\"\r\n                                    backdrop=\"static\">\r\n                                    <Modal.Header closeButton>\r\n                                        <Modal.Title>Edit Company Users </Modal.Title>\r\n                                    </Modal.Header>\r\n                                    <Modal.Body>\r\n                                        <form onSubmit={handleEditUserDetails}>\r\n                                            <div className='row'>\r\n                                                <div className='col-6'>\r\n                                                \r\n                                                <MDBInput wrapperClass='mb-3' label='Name' onChange={(e) => { setUserName(e.target.value) }} value={userName} name=' username' />\r\n                                                {userNameError && <p style={{ color: 'red' }}>{userNameError}</p>}\r\n\r\n                                                <MDBInput wrapperClass='mb-3' label='E-Mail ID' onChange={(e) => { setPersonalMaildId(e.target.value) }} value={personalMaildId} name='PersonalMaildId' />\r\n                                                { personalMaildIdError && <p style={{ color: 'red' }}>{personalMaildIdError}</p>}\r\n\r\n                                                <Form.Select className='mb-3' label='Unit' name=\"Unit\" onChange={(e) => { setSelectedUnit(e.target.value) }} value={selectedUnit}>\r\n                                                    <option value=''>Select Unit</option>\r\n                                                    {basicData.map((item) => (\r\n                                                        <option key={item.Unit_Id} value={item.Unit_Short_Name}>\r\n                                                            {item.Unit_Full_Name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </Form.Select>\r\n                                                { selectedUnitError && <p style={{ color: 'red' }}>{selectedUnitError}</p>}\r\n\r\n                                                    <Form.Select className='mb-3' onChange={(e) => { setDepartment(e.target.value) }} value={department} name='department' >\r\n                                                        <option> Select Department </option>\r\n                                                        {basicDepartment.map((item) => (\r\n                                                            <option key={item.Department_Id} value={item.Department_Name}>\r\n                                                                {item.Department_Name}\r\n                                                            </option>\r\n                                                        ))}\r\n                                                    </Form.Select>\r\n                                                    { departmentError && <p style={{ color: 'red' }}>{departmentError}</p>}\r\n\r\n                                                    <Form.Select className='mb-3' onChange={(e) => { setStatus(e.target.value) }} value={status}>\r\n                                                        <option> Status </option>\r\n                                                        <option value=\"active\">Active</option>\r\n                                                        <option value=\"inactive\">InActive</option>\r\n                                                    </Form.Select>\r\n\r\n                                            \r\n\r\n                                                </div>\r\n                                                <div className='col-6'>\r\n                                                \r\n                                                <MDBInput wrapperClass='mb-3' label='Login ID' onChange={(e) => { setLoginId(e.target.value) }} value={loginId} name='LoginId' />\r\n                                                { loginIdError && <p style={{ color: 'red' }}>{loginIdError}</p>}\r\n\r\n                                                \r\n                                                <MDBInput wrapperClass='mb-3' label='Employee ID' onChange={(e) => { setEmpId(e.target.value) }} value={empId} name=' EmpId' />\r\n                                                { empIdError && <p style={{ color: 'red' }}>{empIdError}</p>}\r\n\r\n                                                \r\n                                                <Form.Select className='mb-3' onChange={(e) => { setDesignation(e.target.value) }} value={designation} name='designation' >\r\n                                                        <option> Select Designation </option>\r\n                                                        {basicDesgination.map((item) => (\r\n                                                            <option key={item.Devision_Id} value={item.Devision_Name}>\r\n                                                                {item.Devision_Name}\r\n                                                            </option>\r\n                                                        ))}\r\n                                                    </Form.Select>\r\n\r\n                                                    { designationError && <p style={{ color: 'red' }}>{designationError}</p>}\r\n\r\n                                                    <Form.Select className='mb-3' onChange={handleUserLevel} value={userLevel}>\r\n                                                        <option> Role </option>\r\n                                                        <option value=\"general\">General</option>\r\n                                                        <option value=\"admin\">Admin</option>\r\n                                                        <option value=\"superAdmin\">Super Admin</option>\r\n                                                    </Form.Select>\r\n                                                    { userLevelError && <p style={{ color: 'red' }}>{userLevelError}</p>}\r\n\r\n                                                    <MDBInput wrapperClass='mb-3' label='Contact No.' onChange={(e) => { setMobileNumber(e.target.value) }} value={mobileNumber} name=' mobileNumber' />\r\n                                                    { mobileNumberError && <p style={{ color: 'red' }}>{mobileNumberError}</p>}\r\n\r\n                                                </div>\r\n                                            </div>\r\n                                        </form>\r\n\r\n                                    </Modal.Body>\r\n                                    <Modal.Footer>\r\n                                        <Button variant=\"secondary\" onClick={closeEditForm}>\r\n                                            Cancel\r\n                                        </Button>\r\n                                        <Button variant=\"primary\" onClick={handleEditUserDetails}>\r\n                                            Save\r\n                                        </Button>\r\n                                    </Modal.Footer>\r\n                                </Modal>\r\n                            </div>\r\n                        </div>\r\n                    </MDBTabsPane>\r\n                </MDBTabsContent>\r\n            </MDBCol>\r\n        </MDBRow>\r\n    </>\r\n}","/**\r\n * owner : \r\n * author :\r\n */\r\nimport api from \"./interceptor\";\r\n\r\nclass buyerService {\r\n\r\n    saveCompanyBuyers(payload) {\r\n      const apiUrl = process.env.REACT_APP_API_URL; // Read base URL from environment\r\n      return api.post(`${apiUrl}/api/saveBuyers`, payload);\r\n    }\r\n\r\n    editCompanyBuyers(payload) {\r\n      const apiUrl = process.env.REACT_APP_API_URL; // Read base URL from environment\r\n      return api.post(`${apiUrl}/api/editBuyers`, payload);\r\n    }\r\n\r\n    deleteCompanyBuyers(payload) {\r\n      const apiUrl = process.env.REACT_APP_API_URL; // Read base URL from environment\r\n      return api.post(`${apiUrl}/api/deleteBuyers`, payload);\r\n    }\r\n\r\n    getCompanyBuyers() {\r\n      const apiUrl = process.env.REACT_APP_API_URL; // Read base URL from environment\r\n      return api\r\n        .get(`${apiUrl}/api/getBuyers`)\r\n        .then((response) => {\r\n          return response;\r\n        })\r\n        .catch((err) => {\r\n          console.error(\"Error fetching buyers:\", err);\r\n        });\r\n    }\r\n}\r\n\r\nexport default new buyerService();\r\n","import React from 'react'\r\nimport { useTable } from 'react-table';\r\n\r\nexport default function BuyerGroupTable(props) {\r\n\t\r\n\t// const [data, setData] = useState([])\r\n    let data = props.data\r\n\t\r\n\tconst columns = React.useMemo(\r\n\t\t() => [\r\n\t\t  {\r\n\t\t\tHeader: 'Buyer Group Name',\r\n\t\t\taccessor: 'Buyer_Group_Name',\r\n\t\t  },\r\n\t\t  {\r\n\t\t\tHeader: 'Buyer',\r\n\t\t\taccessor: 'Buyer_Name',\r\n\t\t  },\r\n\t\t  {\r\n\t\t\tHeader: 'E-Mail',\r\n\t\t\taccessor: 'Buyer_Email_Id',\r\n\t\t  },\r\n\t\t  {\r\n\t\t\tHeader: 'Contact No.',\r\n\t\t\taccessor: 'Buyer_Contact_No',\r\n\t\t  },\r\n\t\t  {\r\n\t\t\tHeader: 'Action',\r\n\t\t\taccessor: 'action', // You can set a dummy accessor for the action column\r\n\t\t\tCell: ({ row }) => (\r\n\t\t\t\t[\r\n\t\t\t\t\t<i className='fa fa-edit pointer' onClick={(data) => {\r\n\t\t\t\t\t  props.openEditForm(row.original)\r\n\t\t\t\t\t}} title='Edit'> </i>,  \r\n\t\t\t\t\t<i className='fa fa-trash ml-15 pointer' onClick={(data) => {\r\n\t\t\t\t\t\tprops.deleteBuyerGroupRecord(row.original)\r\n\t\t\t\t\t  }} title='Delete' > </i>\r\n\t\t\t\t]\r\n\t\t\t),\r\n\t\t  },\r\n\t\t],\r\n\t\t[]\r\n\t  );\r\n\t\t\r\n\t  const {\r\n\t\tgetTableProps,\r\n\t\tgetTableBodyProps,\r\n\t\theaderGroups,\r\n\t\trows,\r\n\t\tprepareRow,\r\n\t  } = useTable({\r\n\t\tcolumns,\r\n\t\tdata,\r\n\t  });\r\n\t\r\n\t\r\n  return (\r\n    <div className='mt-4'>\r\n      <table {...getTableProps()} className=\"table\">\r\n        <thead>\r\n          {headerGroups.map((headerGroup) => (\r\n            <tr {...headerGroup.getHeaderGroupProps()}>\r\n              {headerGroup.headers.map((column) => (\r\n                <th {...column.getHeaderProps()}>{column.render('Header')}</th>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </thead>\r\n        <tbody {...getTableBodyProps()}>\r\n          {rows.map((row) => {\r\n            prepareRow(row);\r\n            return (\r\n              <tr {...row.getRowProps()}>\r\n                {row.cells.map((cell) => {\r\n                  return (\r\n                    <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\r\n                  );\r\n                })}\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  )\r\n}\r\n","/**\r\n * owner : \r\n * author :\r\n */\r\n\r\nimport { useEffect, useState } from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Form from 'react-bootstrap/Form';\r\n\r\nimport './dataSet.scss';\r\n\r\nimport buyerService from \"../../../../../services/buyerService\";\r\nimport { trackPromise } from 'react-promise-tracker';\r\nimport BuyerGroupTable from './BuyerGroupTable';\r\nimport adminService from '../../../../../services/adminService';\r\n\r\nimport {\r\n\tMDBInput\r\n} from 'mdb-react-ui-kit';\r\n\r\nexport default function BuyerGroup() {\r\n\r\n\tconst [show, setShow] = useState(false);\r\n\tconst handleClose = () => setShow(false);\r\n\r\n\tconst [selectedBuyerGroup, setSelectedBuyerGroup] = useState('');\r\n\tconst [selectedBuyerGroupError, setSelectedBuyerGroupError] = useState('');\r\n\tconst [buyerId, setBuyerId] = useState('');\r\n\r\n\tconst [buyerName, setBuyerName] = useState(\"\");\r\n\tconst [buyerNameError, setBuyerNameError] = useState(\"\");\r\n\r\n\tconst [contactNumber, setcontactNumber] = useState(\"\");\r\n\tconst [contactNumberError, setContactNumberError] = useState(\"\");\r\n\r\n\tconst [mailId, setMailId] = useState(\"\");\r\n\tconst [mailIdError, setMailIdError] = useState(\"\");\r\n\r\n\tconst [buyerGroupData, setBuyerGroupData] = useState([]);\r\n\tconst [data, setData] = useState([]);\r\n\r\n\tconst [isEditFormOpen, setIsEditFormOpen] = useState(false);\r\n\r\n\tconst closeEditForm = () => {\r\n        setIsEditFormOpen(false);\r\n    };\r\n\r\n\tconst getBasicDetails = () => {\r\n\t\ttrackPromise(\r\n\t\t\tadminService.getBasicDetails().then((response) => {\r\n\t\t\t\tsetBuyerGroupData(response.data[0].data[0].data.buyerGroups)\r\n\t\t\t})\r\n\t\t);\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tgetBasicDetails()\r\n\t}, [])\r\n\r\n\tconst handleBuyerGroupSetup = (e) => {\r\n\t\te.preventDefault();\r\n\t\tlet isValid = true;\r\n\r\n\t\tif (!selectedBuyerGroup) {\r\n\t\t\tsetSelectedBuyerGroupError('Buyer Group is required');\r\n\t\t\tisValid = false;\r\n\t\t} else {\r\n\t\t\tsetSelectedBuyerGroupError('');\r\n\t\t}\r\n\r\n\t\tif (!mailId) {\r\n\t\t\tsetMailIdError('Mail ID is required');\r\n\t\t\tisValid = false;\r\n\t\t} else if (!/^[\\w-]+(\\.[\\w-]+)*@([\\w-]+\\.)+[a-zA-Z]{2,7}$/.test(mailId)) { // Check email format\r\n\t\t\tsetMailIdError('Invalid email format');\r\n\t\t\tisValid = false;\r\n\t\t} else {\r\n\t\t\tsetMailIdError('');\r\n\t\t}\r\n\r\n\t\tif (!buyerName) {\r\n\t\t\tsetBuyerNameError('Buyer Name is required');\r\n\t\t\tisValid = false;\r\n\t\t} else {\r\n\t\t\tsetBuyerNameError('');\r\n\t\t}\r\n\r\n\t\tif (!contactNumber) {\r\n\t\t\tsetContactNumberError('Contact Number is required');\r\n\t\t\tisValid = false;\r\n\t\t} else if (!/^[0-9]{10}$/.test(contactNumber)) {\r\n\t\t\tsetContactNumberError('Contact Number must be a 10-digit number');\r\n\t\t\tisValid = false;\r\n\t\t} else {\r\n\t\t\tsetContactNumberError('');\r\n\t\t}\r\n\t\t\r\n\t\tif (!isValid) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tlet payload = {\r\n\t\t\t\"Buyer_Group_Name\": selectedBuyerGroup,\r\n\t\t\t\"Buyer_Name\": buyerName,\r\n\t\t\t\"Buyer_Contact_No\": contactNumber,\r\n\t\t\t\"Buyer_Email_Id\": mailId\r\n\t\t}\r\n\t\ttrackPromise(buyerService.saveCompanyBuyers({ \"data\": [payload] }).then((response) => {\r\n\t\t\t//check login response\r\n\t\t\tif (response.status == 200) {\r\n\t\t\t\t// alert(response.data.result);\r\n\t\t\t\tgetCompanyBuyersData()\r\n\t\t\t\thandleClose()\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\talert(response.data.result);\r\n\t\t\t}\r\n\r\n\t\t}).catch((error) => {\r\n\t\t\t//console.log(error.response.data.error)\r\n\t\t\talert(error.response.data.error);\r\n\t\t})\r\n\t\t);\r\n\t}\r\n\r\n\tconst handleEditBuyer = (e) => {\r\n\t\te.preventDefault();\r\n\t\t\r\n\t\tlet isValid = true;\r\n\r\n\t\tif (!selectedBuyerGroup) {\r\n\t\t\tsetSelectedBuyerGroupError('Buyer Group is required');\r\n\t\t\tisValid = false;\r\n\t\t} else {\r\n\t\t\tsetSelectedBuyerGroupError('');\r\n\t\t}\r\n\r\n\t\tif (!mailId) {\r\n\t\t\tsetMailIdError('Mail ID is required');\r\n\t\t\tisValid = false;\r\n\t\t} else if (!/^[\\w-]+(\\.[\\w-]+)*@([\\w-]+\\.)+[a-zA-Z]{2,7}$/.test(mailId)) { // Check email format\r\n\t\t\tsetMailIdError('Invalid email format');\r\n\t\t\tisValid = false;\r\n\t\t} else {\r\n\t\t\tsetMailIdError('');\r\n\t\t}\r\n\r\n\t\tif (!buyerName) {\r\n\t\t\tsetBuyerNameError('Buyer Name is required');\r\n\t\t\tisValid = false;\r\n\t\t} else {\r\n\t\t\tsetBuyerNameError('');\r\n\t\t}\r\n\r\n\t\tif (!contactNumber) {\r\n\t\t\tsetContactNumberError('Contact Number is required');\r\n\t\t\tisValid = false;\r\n\t\t} else if (!/^[0-9]{10}$/.test(contactNumber)) {\r\n\t\t\tsetContactNumberError('Contact Number must be a 10-digit number');\r\n\t\t\tisValid = false;\r\n\t\t} else {\r\n\t\t\tsetContactNumberError('');\r\n\t\t}\r\n\r\n\t\tif (!isValid) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tlet payload = {\r\n\t\t\t\"Buyer_Id\" : buyerId,\r\n\t\t\t\"Buyer_Group_Name\": selectedBuyerGroup,\r\n\t\t\t\"Buyer_Name\": buyerName,\r\n\t\t\t\"Buyer_Contact_No\": contactNumber,\r\n\t\t\t\"Buyer_Email_Id\": mailId\r\n\t\t}\r\n\r\n\t\ttrackPromise(buyerService.editCompanyBuyers({ \"data\": [payload] }).then((response) => {\r\n\t\t\t//check login response\r\n\t\t\tif (response.status === 200) {\r\n\t\t\t\t// alert(response.data.result)\r\n\t\t\t\tgetCompanyBuyersData()\r\n\t\t\t\tcloseEditForm()\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\talert(response.data.message);\r\n\t\t\t}\r\n\r\n\t\t}).catch((error) => {\r\n\t\t\t//console.log(error.response.data.error)\r\n\t\t\talert(error.response.data.error);\r\n\t\t})\r\n\t\t);\r\n\r\n\t}\r\n\r\n\tconst getCompanyBuyersData = () => {\r\n\t\ttrackPromise(\r\n\t\t\tbuyerService.getCompanyBuyers().then((response) => {\r\n\t\t\t\tsetData(response.data.Company_Buyers)\r\n\t\t\t})\r\n\t\t);\r\n\t}\r\n\tuseEffect(() => {\r\n\t\tgetCompanyBuyersData()\r\n\t}, [])\r\n\r\n\tfunction editFormDetails(data) {\r\n\t\t\r\n\t\tsetSelectedBuyerGroupError('');\r\n\t\tsetMailIdError('');\r\n\t\tsetBuyerNameError('');\r\n\t\tsetContactNumberError('');\r\n\r\n\t\tsetSelectedBuyerGroup(data.Buyer_Group_Name);\r\n\t\tsetcontactNumber(data.Buyer_Contact_No);\r\n\t\tsetMailId(data.Buyer_Email_Id);\r\n\t\tsetBuyerName(data.Buyer_Name);\r\n\t\tsetBuyerId(data.Buyer_Id);\r\n\t}\r\n\tfunction settingValuesToEmpty() {\r\n\r\n\t\tsetSelectedBuyerGroupError('');\r\n\t\tsetMailIdError('');\r\n\t\tsetBuyerNameError('');\r\n\t\tsetContactNumberError('');\r\n\r\n\t\tsetBuyerId(\"\");\r\n\t\tsetSelectedBuyerGroup(\"\");\r\n\t\tsetcontactNumber(\"\");\r\n\t\tsetMailId(\"\");\r\n\t\tsetBuyerName(\"\");\r\n\t}\r\n\tconst openEditForm = (data) => {\r\n\t\teditFormDetails(data)\r\n\t\tsetIsEditFormOpen(true);\r\n\r\n\t};\r\n\r\n\tfunction handleForm() {\r\n\t\tsettingValuesToEmpty()\r\n\t\tsetShow(true)\r\n\t}\r\n\r\n\r\n\tconst deleteBuyerGroupRecord = (data) => {\r\n\t\tif (window.confirm(\"Are you sure to delete the Company Buyer ?\")) {\r\n\t\t\tlet payload = {\r\n\t\t\t\t\"Buyer_Id\": data.Buyer_Id\r\n\t\t\t}\r\n\t\t\ttrackPromise(buyerService.deleteCompanyBuyers({ \"data\": [payload] }).then((response) => {\r\n\t\t\t\t//check login response\r\n\t\t\t\tif (response.status === 200) {\r\n\t\t\t\t\tgetCompanyBuyersData()\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\talert(response.data.message);\r\n\t\t\t\t}\r\n\r\n\t\t\t}).catch((error) => {\r\n\t\t\t\t//console.log(error.response.data.error)\r\n\t\t\t\talert(error.response.data.error);\r\n\t\t\t})\r\n\t\t\t);\r\n\t\t}\r\n\t};\r\n\r\n\treturn <>\r\n\t\t<div className='row'>\r\n\t\t\t<div className='col-8'>\r\n\t\t\t\t<h1 className='h1'> Buyer Group </h1>\r\n\t\t\t</div>\r\n\t\t\t<div className='col-4 text-right '>\r\n\t\t\t\t<Button className='primary-btn mt-10' onClick={handleForm}>\r\n\t\t\t\t<i className='fa fa-plus fa-white'> </i> Buyer \r\n\t\t\t\t</Button>\r\n\t\t\t\t<Modal\r\n\t\t\t\t\tshow={show}\r\n\t\t\t\t\tonHide={() => setShow(false)}\r\n\t\t\t\t\tdialogClassName=\"modal-50w\"\r\n\t\t\t\t\tbackdrop=\"static\"\r\n\t\t\t\t\tkeyboard={false}>\r\n\r\n\t\t\t\t\t<Modal.Header closeButton style={{ color: 'white' }}>\r\n\t\t\t\t\t\t<Modal.Title> Add New Buyer </Modal.Title>\r\n\t\t\t\t\t</Modal.Header>\r\n\t\t\t\t\t<Modal.Body>\r\n\t\t\t\t\t\t<form onSubmit={handleBuyerGroupSetup}>\r\n\t\t\t\t\t\t\t<div className='row' >\r\n\t\t\t\t\t\t\t\t<div className='col-6'>\r\n\t\t\t\t\t\t\t\t\t<Form.Select className='mb-3' tabindex=\"1\" required onChange={(e) => { setSelectedBuyerGroup(e.target.value) }} value={selectedBuyerGroup} name=\"selectedBuyerGroup\" >\r\n\t\t\t\t\t\t\t\t\t\t<option > Select Buyer Group</option>\r\n\t\t\t\t\t\t\t\t\t\t{buyerGroupData.map((item) => (\r\n\t\t\t\t\t\t\t\t\t\t\t<option key={item.Buyer_Group_Id} value={item.Buyer_Group_Name}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{item.Buyer_Group_Name}\r\n\t\t\t\t\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t</Form.Select>\r\n\t\t\t\t\t\t\t\t\t{selectedBuyerGroupError && <p style={{ color: 'red' }}>{selectedBuyerGroupError}</p>}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t<MDBInput wrapperClass='mb-3' type='email' required label='E-Mail ID' tabindex=\"3\" onChange={(e) => { setMailId(e.target.value) }} value={mailId} name='mailId' />\r\n\r\n\t\t\t\t\t\t\t\t\t{mailIdError && <p style={{ color: 'red' }}>{mailIdError}</p>}\r\n\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t<div className='col-6'>\r\n\r\n\t\t\t\t\t\t\t\t\t<MDBInput wrapperClass='mb-3' required type='text' label='Buyer' tabindex=\"2\" onChange={(e) => { setBuyerName(e.target.value) }} value={buyerName} name='Buyer' />\r\n\r\n\t\t\t\t\t\t\t\t\t{buyerNameError && <p style={{ color: 'red' }}>{buyerNameError}</p>}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t<MDBInput wrapperClass='mb-3' required type='number' tabindex=\"4\" label='Contact No.' onChange={(e) => { setcontactNumber(e.target.value) }} value={contactNumber} name=' contactNumber' />\r\n\r\n\t\t\t\t\t\t\t\t\t{contactNumberError && <p style={{ color: 'red' }}>{contactNumberError}</p>}\r\n\r\n\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</form>\r\n\r\n\t\t\t\t\t</Modal.Body>\r\n\t\t\t\t\t<Modal.Footer>\r\n\t\t\t\t\t\t<Button variant=\"secondary\" onClick={handleClose} style={{ width: '15%' }}>\r\n\t\t\t\t\t\t\tCancel\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t<Button variant=\"primary\" onClick={handleBuyerGroupSetup} style={{ width: '15%' }}>\r\n\t\t\t\t\t\t\tSave\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</Modal.Footer>\r\n\t\t\t\t</Modal>\r\n\t\t\t</div>\r\n\t\t\t<div className='col-12'>\r\n\r\n\t\t\t\t<BuyerGroupTable data={data} openEditForm={openEditForm} deleteBuyerGroupRecord={deleteBuyerGroupRecord} />\r\n\r\n\t\t\t\t<Modal show={isEditFormOpen} onHide={closeEditForm} dialogClassName=\"modal-50w\"\r\n\t\t\t\t\tbackdrop=\"static\">\r\n\t\t\t\t\t<Modal.Header closeButton>\r\n\t\t\t\t\t\t<Modal.Title>Edit Company Buyer</Modal.Title>\r\n\t\t\t\t\t</Modal.Header>\r\n\t\t\t\t\t<Modal.Body>\r\n\t\t\t\t\t\t<form onSubmit={handleEditBuyer}>\r\n\t\t\t\t\t\t<div className='row' >\r\n\t\t\t\t\t\t\t\t<div className='col-6'>\r\n\t\t\t\t\t\t\t\t\t<Form.Select className='mb-3' tabindex=\"5\" onChange={(e) => { setSelectedBuyerGroup(e.target.value) }} value={selectedBuyerGroup} name=\"selectedBuyerGroup\" >\r\n\t\t\t\t\t\t\t\t\t\t<option > Select Buyer Group</option>\r\n\t\t\t\t\t\t\t\t\t\t{buyerGroupData.map((item) => (\r\n\t\t\t\t\t\t\t\t\t\t\t<option key={item.Buyer_Group_Id} value={item.Buyer_Group_Name}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{item.Buyer_Group_Name}\r\n\t\t\t\t\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t</Form.Select>\r\n\t\t\t\t\t\t\t\t\t{selectedBuyerGroupError && <p style={{ color: 'red' }}>{selectedBuyerGroupError}</p>}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t<MDBInput wrapperClass='mb-3' type='email' label='E-Mail ID' tabindex=\"3\" onChange={(e) => { setMailId(e.target.value) }} value={mailId} name='mailId' />\r\n\r\n\t\t\t\t\t\t\t\t\t{mailIdError && <p style={{ color: 'red' }}>{mailIdError}</p>}\r\n\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t<div className='col-6'>\r\n\r\n\t\t\t\t\t\t\t\t\t<MDBInput wrapperClass='mb-3' type='text' label='Buyer' tabindex=\"2\" onChange={(e) => { setBuyerName(e.target.value) }} value={buyerName} name='Buyer' />\r\n\t\t\t\t\t\t\t\t\t{buyerNameError && <p style={{ color: 'red' }}>{buyerNameError}</p>}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t<MDBInput wrapperClass='mb-3' type='number' tabindex=\"10\" label='Contact No.' onChange={(e) => { setcontactNumber(e.target.value) }} value={contactNumber} name=' contactNumber' />\r\n\r\n\t\t\t\t\t\t\t\t\t{contactNumberError && <p style={{ color: 'red' }}>{contactNumberError}</p>}\r\n\r\n\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</form>\r\n\r\n\t\t\t\t\t</Modal.Body>\r\n\t\t\t\t\t<Modal.Footer>\r\n\t\t\t\t\t\t<Button variant=\"secondary\" onClick={closeEditForm} style={{ width: '15%' }}>\r\n\t\t\t\t\t\t\tCancel\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t<Button variant=\"primary\" onClick={handleEditBuyer} style={{ width: '15%' }}>\r\n\t\t\t\t\t\t\tSave\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</Modal.Footer>\r\n\t\t\t\t</Modal>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</>\r\n}","/**\r\n * owner : \r\n * author :\r\n */\r\n\r\nimport { useEffect, useState } from 'react';\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\nimport Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Form from 'react-bootstrap/Form';\r\nimport BuyerGroup from './DMAPs_Data/BuyerGroup';\r\n\r\nimport './DataSetUp.scss';\r\n\r\nimport {\r\n    MDBTabs,\r\n    MDBTabsItem,\r\n    MDBTabsLink,\r\n    MDBTabsContent,\r\n    MDBTabsPane,\r\n    MDBRow,\r\n    MDBCol,\r\n    MDBInput\r\n} from 'mdb-react-ui-kit';\r\n\r\n\r\n// import userService from \"../../../services/userService\";\r\nimport { trackPromise } from 'react-promise-tracker';\r\n\r\n\r\nexport default function DataSetUp() {\r\n    const [verticalActive, setVerticalActive] = useState('tabV3');\r\n    const [unitName, setunitName] = useState('')\r\n    const [shortName, setShortName] = useState('')\r\n    const [group, setGroup] = useState('')\r\n    const [division, setdivision] = useState('')\r\n    const [tinNo, setTinNo] = useState('')\r\n    const [regNo, setRegNo] = useState('')\r\n    const [addressLine1, setAddressLine1] = useState('')\r\n    const [addressLine2, setAddressLine2] = useState('')\r\n    const [street, setStreet] = useState('')\r\n    const [city, setCity] = useState('')\r\n    const [pinNo, setPinNO] = useState('')\r\n    const [contactNo, setContactNo] = useState('')\r\n    const [contactNoRec, setContactNoRec] = useState('')\r\n    const [faxNo, setFaxNo] = useState('')\r\n    const [mailId, setMailId] = useState('')\r\n    const [website, setWebsite] = useState('')\r\n    const [state, setState] = useState('')\r\n    const [show, setShow] = useState(false);\r\n    const handleClose = () => setShow(false);\r\n\r\n    const handleUnitSetup = (e) => {\r\n        e.preventDefault();\r\n\r\n        console.log('hello');\r\n    }\r\n    \r\n    const handleVerticalClick = (value) => {\r\n        if (value === verticalActive) {\r\n            return;\r\n        }\r\n        setVerticalActive(value);\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        let payload = {\r\n            \"Unit_Full_Name\": unitName,\r\n            \"Unit_Short_Name\": shortName,\r\n            \"Group_Id\": group,\r\n            \"Division_Id\": division,\r\n            \"Tin_Num\": tinNo,\r\n            \"Reg_Num\": regNo,\r\n            \"Address_Line_1\": addressLine1,\r\n            \"Address_Line_2\": addressLine2,\r\n            \"Street\": street,\r\n            \"City\": city,\r\n            \"State\": state,\r\n            \"Pin_Code\": pinNo,\r\n            \"Contact_No\": contactNo,\r\n            \"Contact_No_Rec\" : contactNoRec,\r\n            \"Email_Id\": mailId,\r\n            \"Website_Link\": website,\r\n            \"Fax_No\": faxNo\r\n\r\n\r\n        }\r\n        alert('suceess')\r\n        // trackPromise(unitService.saveCompanyUnits(payload).then((response) => {\r\n        //     //check login response\r\n        //     if (response.data.status == 'Success') {\r\n        //         alert(response.data.message);\r\n\r\n        //     }\r\n        //     else if (response.data.status == 'Failed') {\r\n        //         alert(response.data.message);\r\n        //     }\r\n\r\n        // }).catch((error) => {\r\n        //     //console.log(error.response.data.error)\r\n        //     alert(error.response.data.error);\r\n        // })\r\n        // );\r\n\r\n\r\n    }\r\n \r\n    useEffect(() => {\r\n\r\n    }, [])\r\n\r\n    const pagination = paginationFactory({\r\n        page: 1,\r\n        sizePerPage: 10,\r\n        lastPageText: \">>\",\r\n        firstPageText: \"<<\",\r\n        nextPageText: \">\",\r\n        prePageText: \"<\",\r\n        showTotal: true,\r\n        alwaysShowAllBtns: true,\r\n        hideSizePerPage: true,\r\n        onPageChange: function (page, sizePerPage) { },\r\n        onSizePerPageChange: function (page, sizePerPage) { },\r\n    });\r\n    const iconActionHandler = (cell, row, rowIndex) => {\r\n        return (\r\n            <>\r\n                <i className=\"fas fa-edit action-icon\" title=\"Edit\" > </i>\r\n            </>\r\n        );\r\n    };\r\n\r\n    const products = [\r\n        {\r\n            id: 1,\r\n            Buyer_Group: \"Mexx\",\r\n            Buyer: \"Mexx Kids ware\",\r\n            Address: \"63-D, Basant Lok Community Centre, Vasant Vihar, New Delhi 110057\",\r\n            Action: \"\"\r\n        },\r\n        {\r\n            id: 2,\r\n            Buyer_Group: \"Mexx\",\r\n            Buyer: \"Mexx Sports ware\",\r\n            Address: \"63-D, Basant Lok Community Centre, Vasant Vihar, New Delhi 110057\",\r\n            Action: \"\"\r\n        },\r\n        {\r\n            id: 3,\r\n            Buyer_Group: \"Levis\",\r\n            Buyer: \"Levi's - Men's Wear\",\r\n            Address: \"001A & 002A, The Grand Sigma Mall, Ground Floor, Near-Wockhardt Hospital, Cunningham Road, Bengaluru, Karnataka 560052\",\r\n            Action: \"\"\r\n        }\r\n    ];\r\n    const columns = [{\r\n        dataField: 'id',\r\n        text: 'No',\r\n        sort: true\r\n    }, {\r\n        dataField: 'Buyer_Group',\r\n        text: 'Buyer Group'\r\n    }, {\r\n        dataField: 'Buyer',\r\n        text: 'Buyer',\r\n        sort: true\r\n    },\r\n    {\r\n        dataField: 'Address',\r\n        text: 'Address',\r\n        sort: true\r\n    },\r\n    {\r\n        dataField: \"Action\",\r\n        text: \"Action\",\r\n        formatter: iconActionHandler,\r\n        sort: false,\r\n        classes: \"actions-column\"\r\n    }\r\n    ];\r\n\r\n    return <>\r\n        <MDBRow>\r\n            <MDBCol size='1' style={{ width : \"13%\" }} className='no-pad-right'>\r\n                <MDBTabs className='flex-column text-center vertical-tab'>\r\n\r\n                    <MDBTabsItem className=\"vertical-link\">\r\n                        <MDBTabsLink onClick={() => handleVerticalClick('tabV1')} active={verticalActive === 'tabV1'}>\r\n                            Human Resources\r\n                        </MDBTabsLink>\r\n                    </MDBTabsItem>\r\n                    \r\n                    <MDBTabsItem className=\"vertical-link\">\r\n                        <MDBTabsLink onClick={() => handleVerticalClick('tabV2')} active={verticalActive === 'tabV2'}>\r\n                            Administrator\r\n                        </MDBTabsLink>\r\n                    </MDBTabsItem>\r\n\r\n                    <MDBTabsItem className=\"vertical-link\">\r\n                        <MDBTabsLink onClick={() => handleVerticalClick('tabV3')} active={verticalActive === 'tabV3'}>\r\n                            Buyer Group\r\n                        </MDBTabsLink>\r\n                    </MDBTabsItem>\r\n                    \r\n                    <MDBTabsItem className=\"vertical-link\">\r\n                        <MDBTabsLink onClick={() => handleVerticalClick('tabV4')} active={verticalActive === 'tabV4'}>\r\n                            Product Type\r\n                        </MDBTabsLink>\r\n                    </MDBTabsItem>\r\n                    \r\n                    <MDBTabsItem className=\"vertical-link\">\r\n                        <MDBTabsLink onClick={() => handleVerticalClick('tabV5')} active={verticalActive === 'tabV5'}>\r\n                            Gender\r\n                        </MDBTabsLink>\r\n                    </MDBTabsItem>\r\n                    \r\n                    <MDBTabsItem className=\"vertical-link\">\r\n                        <MDBTabsLink onClick={() => handleVerticalClick('tabV6')} active={verticalActive === 'tabV6'}>\r\n                            Season\r\n                        </MDBTabsLink>\r\n                    </MDBTabsItem>\r\n                    \r\n                    <MDBTabsItem className=\"vertical-link\">\r\n                        <MDBTabsLink onClick={() => handleVerticalClick('tabV7')} active={verticalActive === 'tabV7'}>\r\n                            Size Grid\r\n                        </MDBTabsLink>\r\n                    </MDBTabsItem>\r\n                    \r\n                    <MDBTabsItem className=\"vertical-link\">\r\n                        <MDBTabsLink onClick={() => handleVerticalClick('tabV8')} active={verticalActive === 'tabV8'}>\r\n                            Emb Type\r\n                        </MDBTabsLink>\r\n                    </MDBTabsItem>\r\n                    \r\n                    <MDBTabsItem className=\"vertical-link\">\r\n                        <MDBTabsLink onClick={() => handleVerticalClick('tabV9')} active={verticalActive === 'tabV9'}>\r\n                            Print Type\r\n                        </MDBTabsLink>\r\n                    </MDBTabsItem>\r\n                    \r\n                    <MDBTabsItem className=\"vertical-link\">\r\n                        <MDBTabsLink onClick={() => handleVerticalClick('tabV10')} active={verticalActive === 'tabV10'}>\r\n                            Washing Type\r\n                        </MDBTabsLink>\r\n                    </MDBTabsItem>\r\n                    \r\n                    <MDBTabsItem className=\"vertical-link\">\r\n                        <MDBTabsLink onClick={() => handleVerticalClick('tabV11')} active={verticalActive === 'tabV11'}>\r\n                            Shipment Mode\r\n                        </MDBTabsLink>\r\n                    </MDBTabsItem>\r\n                    \r\n                    <MDBTabsItem className=\"vertical-link\">\r\n                        <MDBTabsLink onClick={() => handleVerticalClick('tabV12')} active={verticalActive === 'tabV12'}>\r\n                            Country\r\n                        </MDBTabsLink>\r\n                    </MDBTabsItem>\r\n                    \r\n                    <MDBTabsItem className=\"vertical-link\">\r\n                        <MDBTabsLink onClick={() => handleVerticalClick('tabV13')} active={verticalActive === 'tabV13'}>\r\n                            Garment Colour\r\n                        </MDBTabsLink>\r\n                    </MDBTabsItem>\r\n                </MDBTabs>\r\n            </MDBCol>\r\n            <MDBCol size='11' style={{ width : \"87%\" }} className='no-pad-left'>\r\n                <MDBTabsContent className='unit-tab-content'>\r\n                    <MDBTabsPane show={verticalActive === 'tabV1'}>\r\n\r\n                    </MDBTabsPane>\r\n                    <MDBTabsPane show={verticalActive === 'tabV2'}>\r\n\r\n                    </MDBTabsPane>\r\n                    <MDBTabsPane show={verticalActive === 'tabV3'}>\r\n                        <BuyerGroup></BuyerGroup>\r\n                    </MDBTabsPane>\r\n                </MDBTabsContent>\r\n            </MDBCol>\r\n        </MDBRow>\r\n    </>\r\n}","/**\r\n * owner : \r\n * author :\r\n */\r\n\r\nimport { useEffect, useState } from 'react';\r\nimport './Administrator.scss';\r\nimport UnitSetUp from './AdministratorLayOuts/UnitSetUp';\r\nimport UserSetUp from './AdministratorLayOuts/UserSetUp';\r\nimport DataSetUp from './AdministratorLayOuts/DataSetUp';\r\n\r\nimport {\r\n    MDBTabs,\r\n    MDBTabsItem,\r\n    MDBTabsLink,\r\n    MDBTabsContent,\r\n    MDBTabsPane,\r\n    MDBRow\r\n} from 'mdb-react-ui-kit';\r\n\r\nexport default function Administrator() {\r\n\r\n    const [basicActive, setBasicActive] = useState('tab1');\r\n    const handleBasicClick = (value) => {\r\n        if (value === basicActive) {\r\n            return;\r\n        }\r\n        setBasicActive(value);\r\n    };\r\n\r\n    useEffect(() => {\r\n\r\n    }, [])\r\n\r\n    return <>\r\n        <MDBTabs className=\"admin-tab\">\r\n            <MDBTabsItem>\r\n                <MDBTabsLink  onClick={() => handleBasicClick('tab1')} active={basicActive === 'tab1'}>\r\n                    <i class=\"fa-solid fa-screwdriver-wrench\"></i> Company Units\r\n                </MDBTabsLink>\r\n                \r\n            </MDBTabsItem>\r\n            <MDBTabsItem>\r\n                <MDBTabsLink onClick={() => handleBasicClick('tab2')} active={basicActive === 'tab2'}>\r\n                    <i class=\"fa-solid fa-users\"></i> Users\r\n                </MDBTabsLink>\r\n            </MDBTabsItem>\r\n            <MDBTabsItem>\r\n                <MDBTabsLink onClick={() => handleBasicClick('tab3')} active={basicActive === 'tab3'}>\r\n                    <i class=\"fa-solid fa-address-book\"></i>  DMAPs Data\r\n                </MDBTabsLink>\r\n\r\n            </MDBTabsItem>\r\n            \r\n        </MDBTabs>\r\n\r\n        <MDBTabsContent className='inner-tab-content'>\r\n            <MDBTabsPane className=\"company-unit-tab\" show={basicActive === 'tab1'}>\r\n                <MDBRow>\r\n                    <UnitSetUp />\r\n                </MDBRow>\r\n            </MDBTabsPane>\r\n            \r\n            <MDBTabsPane className=\"user-tab\" show={basicActive === 'tab2'}>\r\n                <UserSetUp />\r\n            </MDBTabsPane>\r\n            <MDBTabsPane  className=\"data-tab\" show={basicActive === 'tab3'}>\r\n                <DataSetUp />\r\n            </MDBTabsPane>\r\n            \r\n        </MDBTabsContent>\r\n    </>\r\n}","/**\r\n * owner : \r\n * author : \r\n */\r\nimport api from \"./interceptor\";\r\n\r\nconst apiUrl = process.env.REACT_APP_API_URL; // Base URL from environment variable\r\n\r\nclass styleStoreService {\r\n  \r\n  getStyleEntry() {\r\n    return api\r\n      .get(`${apiUrl}/api/getStyleEntry/`) // Use environment variable\r\n      .then((response) => {\r\n        return response;\r\n      })\r\n      .catch((err) => {\r\n        console.error(\"Error fetching style entry:\", err);\r\n      });\r\n  }\r\n  \r\n  saveStyleEntry(payload) {\r\n    return api.post(`${apiUrl}/api/saveStyleEntry/`, payload); // Use environment variable\r\n  }\r\n\r\n  editStyleEntry(payload) {\r\n    return api.post(`${apiUrl}/api/editStyleEntry/`, payload); // Use environment variable\r\n  }\r\n\r\n  deleteStyleEntry(payload) {\r\n    return api.post(`${apiUrl}/api/deleteStyleEntry/`, payload); // Use environment variable\r\n  }\r\n\r\n  getPODetails() {\r\n    return api\r\n      .get(`${apiUrl}/api/getPODetails/`) // Use environment variable\r\n      .then((response) => {\r\n        return response;\r\n      })\r\n      .catch((err) => {\r\n        console.error(\"Error fetching PO details:\", err);\r\n      });\r\n  }\r\n\r\n  savePODetails(payload) {\r\n    return api.post(`${apiUrl}/api/savePODetails/`, payload); // Use environment variable\r\n  }\r\n\r\n  editPODetails(payload) {\r\n    return api.post(`${apiUrl}/api/editPODetails/`, payload); // Use environment variable\r\n  }\r\n\r\n  deletePODetails(payload) {\r\n    return api.post(`${apiUrl}/api/deletePODetails/`, payload); // Use environment variable\r\n  }\r\n\r\n  getStyleLookupDetails() {\r\n    return api\r\n      .get(`${apiUrl}/api/getStyleLookupDetails/`) // Use environment variable\r\n      .then((response) => {\r\n        return response;\r\n      })\r\n      .catch((err) => {\r\n        console.error(\"Error fetching style lookup details:\", err);\r\n      });\r\n  }\r\n\r\n}\r\n\r\nexport default new styleStoreService();\r\n","import React from 'react';\r\nimport { useTable } from 'react-table';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function StyleEntryTable(props) {\r\n    const { data, openEditForm, deleteStyleEntry } = props;\r\n\r\n    const columns = React.useMemo(\r\n        () => [\r\n            {\r\n                Header: 'DMAPS No.',\r\n                accessor: 'Style_No',\r\n                Cell: ({ row }) => (\r\n                    <div\r\n                        className='custom-link'\r\n                        onClick={() => openEditForm(row.original)}\r\n                    >\r\n                        {row.values.Style_No}\r\n                    </div>\r\n                ),\r\n            },\r\n            {\r\n                Header: 'Buyer',\r\n                accessor: 'Buyer_Name',\r\n            },\r\n            {\r\n                Header: 'Buyer Style No.',\r\n                accessor: 'Style_Description',\r\n            },\r\n            {\r\n                Header: 'Size Grid Name',\r\n                accessor: 'Size_Grid_Name',\r\n            },\r\n            {\r\n                Header: 'Product Type',\r\n                accessor: 'Product_Type',\r\n            },\r\n            {\r\n                Header: 'Merchant Name',\r\n                accessor: 'Marchent_Name',\r\n            },\r\n            {\r\n                Header: 'Merchant Contact',\r\n                accessor: 'Marchent_Contact',\r\n            },\r\n            {\r\n                Header: 'Images',\r\n                accessor: 'Style_Images',\r\n                Cell: ({ row }) => {\r\n                    const images = JSON.parse(row.original.Style_Images);\r\n                    return (\r\n                        <div>\r\n                            {images.map((image, index) => (\r\n                                <img\r\n                                    key={index}\r\n                                    src={image}\r\n                                    alt={`Thumbnail ${index}`}\r\n                                    style={{ width: '25px', height: '25px', marginRight: '5px' }}\r\n                                />\r\n                            ))}\r\n                        </div>\r\n                    );\r\n                },\r\n            },\r\n            {\r\n                Header: 'Action',\r\n                accessor: 'action',\r\n                Cell: ({ row }) => (\r\n                    <>\r\n                        <i\r\n                            className='fa fa-edit pointer'\r\n                            onClick={() => openEditForm(row.original)}\r\n                            title='Edit'\r\n                        ></i>\r\n                        <i\r\n                            className='fa fa-trash ml-15 pointer'\r\n                            onClick={() => deleteStyleEntry(row.original)}\r\n                            title='Delete'\r\n                        ></i>\r\n                    </>\r\n                ),\r\n            },\r\n        ],\r\n        [openEditForm, deleteStyleEntry]\r\n    );\r\n\r\n    const {\r\n        getTableProps,\r\n        getTableBodyProps,\r\n        headerGroups,\r\n        rows,\r\n        prepareRow,\r\n    } = useTable({\r\n        columns,\r\n        data,\r\n    });\r\n\r\n    return (\r\n        <div className='mt-4'>\r\n            <table {...getTableProps()} className=\"table striped\">\r\n                <thead>\r\n                    {headerGroups.map((headerGroup) => (\r\n                        <tr {...headerGroup.getHeaderGroupProps()}>\r\n                            {headerGroup.headers.map((column) => (\r\n                                <th {...column.getHeaderProps()}>{column.render('Header')}</th>\r\n                            ))}\r\n                        </tr>\r\n                    ))}\r\n                </thead>\r\n                <tbody {...getTableBodyProps()}>\r\n                    {rows.map((row) => {\r\n                        prepareRow(row);\r\n                        return (\r\n                            <tr {...row.getRowProps()}>\r\n                                {row.cells.map((cell) => (\r\n                                    <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\r\n                                ))}\r\n                            </tr>\r\n                        );\r\n                    })}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n}\r\n\r\nStyleEntryTable.propTypes = {\r\n    data: PropTypes.array.isRequired,\r\n    openEditForm: PropTypes.func.isRequired,\r\n    deleteStyleEntry: PropTypes.func.isRequired,\r\n};\r\n","import React from 'react';\r\nimport { useTable } from 'react-table';\r\n\r\nexport default function PODetailsTable(props) {\r\n    const { data, openEditForm } = props;\r\n\r\n\r\n    const columns = React.useMemo(\r\n        () => [\r\n            {\r\n                Header: 'DMAPS No.',\r\n                accessor: 'Style_No',\r\n            },\r\n            {\r\n                Header: 'Order No.',\r\n                accessor: 'PO_No',\r\n                Cell: ({ row }) => (\r\n                    <div\r\n                        className='custom-link'\r\n                        onClick={() => openEditForm(row.original)}\r\n                    >\r\n                        {row.values.PO_No}\r\n                    </div>\r\n                ),\r\n            },\r\n            {\r\n                Header: (\r\n                    <span title=\"Order Confirmation Number\">\r\n                        OC No.\r\n                    </span>\r\n                ),\r\n                accessor: 'OC_No',\r\n            },\r\n            {\r\n                Header: (\r\n                    <span title=\"Embroidery Type\">\r\n                        Emb Type\r\n                    </span>\r\n                ),\r\n                accessor: 'Emb_Type',\r\n            },\r\n            {\r\n                Header: 'Print Type',\r\n                accessor: 'Print_Type',\r\n            },\r\n            {\r\n                Header: 'Washing Type',\r\n                accessor: 'Washing_Type',\r\n            },\r\n            {\r\n                Header: 'Shipment Mode',\r\n                accessor: 'Shipment_Mode',\r\n            },\r\n            {\r\n                Header: 'Delivery Date',\r\n                accessor: 'Delivery_Date',\r\n            },\r\n            {\r\n                Header: (\r\n                    <span title=\"Plan to Cut Date\">\r\n                        PCD\r\n                    </span>\r\n                ),\r\n                accessor: 'PCD',\r\n            },\r\n            {\r\n                Header: 'Action',\r\n                accessor: 'action',\r\n                Cell: ({ row }) => (\r\n                    <>\r\n                        <i className='fa fa-edit pointer' onClick={() => props.openEditForm(row.original)} title='Edit'> </i>\r\n                        <i className='fa fa-trash ml-15 pointer' onClick={() => props.deletePODetails(row.original)} title='Delete'> </i>\r\n                    </>\r\n                ),\r\n            },\r\n        ],\r\n        [props]\r\n    );\r\n    \r\n    const {\r\n        getTableProps,\r\n        getTableBodyProps,\r\n        headerGroups,\r\n        rows,\r\n        prepareRow,\r\n    } = useTable({\r\n        columns,\r\n        data,\r\n    });\r\n\r\n    // Helper function to calculate the row span and group index for Style_No\r\n    const calculateRowSpansAndGroups = (data) => {\r\n        const rowSpans = {};\r\n        const rowGroups = {};\r\n        let lastStyleNo = null;\r\n        let spanCount = 0;\r\n        let groupIndex = 0;\r\n\r\n        data.forEach((row, index) => {\r\n            const currentStyleNo = row.Style_No;\r\n\r\n            if (currentStyleNo === lastStyleNo) {\r\n                spanCount++;\r\n            } else {\r\n                if (lastStyleNo !== null) {\r\n                    rowSpans[lastStyleNo] = spanCount;\r\n                    rowGroups[lastStyleNo] = groupIndex;\r\n                    groupIndex++;\r\n                }\r\n                lastStyleNo = currentStyleNo;\r\n                spanCount = 1;\r\n            }\r\n\r\n            if (index === data.length - 1) {\r\n                rowSpans[lastStyleNo] = spanCount;\r\n                rowGroups[lastStyleNo] = groupIndex;\r\n            }\r\n        });\r\n\r\n        return { rowSpans, rowGroups };\r\n    };\r\n\r\n    const { rowSpans, rowGroups } = calculateRowSpansAndGroups(data);\r\n\r\n    // Function to determine if the row should be styled as odd or even\r\n    const getRowClassName = (index, styleNo) => {\r\n        const groupIndex = rowGroups[styleNo];\r\n        return groupIndex % 2 === 0 ? 'row-even' : 'row-odd';\r\n    };\r\n\r\n    return (\r\n        <div className='mt-4'>\r\n            <table {...getTableProps()} className=\"table striped\">\r\n                <thead>\r\n                    {headerGroups.map((headerGroup) => (\r\n                        <tr {...headerGroup.getHeaderGroupProps()}>\r\n                            {headerGroup.headers.map((column) => (\r\n                                <th {...column.getHeaderProps()}>{column.render('Header')}</th>\r\n                            ))}\r\n                        </tr>\r\n                    ))}\r\n                </thead>\r\n                <tbody {...getTableBodyProps()}>\r\n                    {rows.map((row, i) => {\r\n                        prepareRow(row);\r\n                        const currentStyleNo = row.original.Style_No;\r\n                        const previousStyleNo = i > 0 ? rows[i - 1].original.Style_No : null;\r\n                        const rowClass = getRowClassName(i, currentStyleNo);\r\n\r\n                        return (\r\n                            <tr {...row.getRowProps()} className={rowClass}>\r\n                                {row.cells.map((cell, cellIndex) => {\r\n                                    if (cellIndex === 0) {\r\n                                        if (i === 0 || currentStyleNo !== previousStyleNo) {\r\n                                            return (\r\n                                                <td style={{ textAlign: 'center', verticalAlign: 'middle' }} {...cell.getCellProps()} rowSpan={rowSpans[currentStyleNo]}>\r\n                                                    {cell.render('Cell')}\r\n                                                </td>\r\n                                            );\r\n                                        } else {\r\n                                            return null; // Skip the cell for merged rows\r\n                                        }\r\n                                    } else {\r\n                                        return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>;\r\n                                    }\r\n                                })}\r\n                            </tr>\r\n                        );\r\n                    })}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n}\r\n","/**\r\n * owner : \r\n * author :\r\n */\r\n\r\nimport { useEffect, useState } from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Form from 'react-bootstrap/Form';\r\nimport './ProductionOrder.scss';\r\nimport { MDBInput } from 'mdb-react-ui-kit';\r\nimport styleStoreService from \"../../../../../services/styleStoreService\";\r\nimport { trackPromise } from 'react-promise-tracker';\r\nimport PODetailsTable from './ProductionOrderTable';\r\nimport adminService from \"../../../../../services/adminService\"\r\n\r\nexport default function ProductionOrder() {\r\n\tconst [show, setShow] = useState(false);\r\n\tconst handleClose = () => setShow(false);\r\n\tconst [embType, setEmbType] = useState('')\r\n\tconst [embTypeError, setEmbTypeError] = useState('');\r\n\tconst [washingType, setWashingType] = useState('')\r\n\tconst [washingTypeError, setWashingTypeError] = useState('');\r\n\tconst [note, setNote] = useState('')\r\n\tconst [styleNo, setStyleNo] = useState('')\r\n\tconst [styleNoError, setStyleNoError] = useState('')\r\n\tconst [POId, setPOId] = useState(\"\");\r\n\tconst [fPONo, setFPONo] = useState('')\r\n\tconst [PONo, setPONo] = useState('')\r\n\tconst [PONoError, setPONoError] = useState('')\r\n\tconst [OCNo, setOCNo] = useState('')\r\n\tconst [fPONoError, setFPONoError] = useState('');\r\n\tconst [printType, setPrintType] = useState('')\r\n\tconst [printTypeError, setPrintTypeError] = useState('');\r\n\tconst [others, setOthers] = useState('')\r\n\tconst [shipmentMode, setShipmentMode] = useState('')\r\n\tconst [shipmentModeError, setShipmentModeError] = useState('')\r\n\tconst [deliveryDate, setDeliveryDate] = useState('')\r\n\tconst [deliveryDateError, setDeliveryDateError] = useState('')\r\n\tconst [pcd, setPCD] = useState('')\r\n\tconst [pcdError, setPCDError] = useState('')\r\n\tconst [data, setData] = useState([]);\r\n\tconst [isEditFormOpen, setIsEditFormOpen] = useState(false);\r\n\tconst [styleNoList, setStyleNoList] = useState([]);\r\n\tconst [embTypeList, setEmbTypeList] = useState([]);\r\n\tconst [printTypeList, setPrintTypeList] = useState([]);\r\n\tconst [washingTypeList, setWashingTypeList] = useState([]);\r\n\tconst [rows, setRows] = useState([]);\r\n\tconst [sizeKeys, setSizeKeys] = useState([]);\r\n  \tconst [garmentColor, setGarmentColor] = useState('');\r\n  \tconst [destinationCountry, setDestinationCountry] = useState('');\r\n  \tconst [sizesArray, setSizesArray] = useState([]); // Default sizes\r\n \tconst [sizes, setSizes] = useState(sizesArray.reduce((acc, curr) => ({ ...acc, [curr]: 0 }), {})); // Dynamically initialize sizes state based on sizesArray\r\n \tconst [editingIndex, setEditingIndex] = useState(null);\r\n \tconst [BuyerName, setBuyerName] = useState('');\r\n  \tconst [StyleDescription, setStyleDescription] = useState('');\r\n  \tconst [SizeGridName, setSizeGridName] = useState('');\r\n  \tconst [ProductType, setProductType] = useState('');\r\n  \tconst [MerchantName, setMerchantName] = useState('');\r\n  \tconst [MerchantContact, setMerchantContact] = useState('');\r\n  \tconst [GenderView, setGenderView] = useState('');\r\n  \tconst [rowData, setRowData] = useState(null); // Initialize rowData\r\n// Calculate total of all sizes\r\n\tconst calculateTotal = (sizes) => {\r\n\t\treturn Object.values(sizes).reduce((sum, size) => sum + (parseInt(size) || 0), 0);\r\n\t};\r\n\r\n\tconst addNewRow = () => {\r\n\t\t// Add a new row\r\n\t\tconst newSizes = sizesArray.reduce((acc, sizeKey) => {\r\n\t\t\tacc[sizeKey] = \"\"; // Initialize each size with an empty string\r\n\t\t\treturn acc;\r\n\t\t}, {});\r\n\t\r\n\t\tsetRows([...rows, {\r\n\t\t\tgarmentColor,\r\n\t\t\tdestinationCountry,\r\n\t\t\tsizes: newSizes, // Use the new sizes object\r\n\t\t\ttotal: calculateTotal(newSizes),\r\n\t\t\tisEditable: true,\r\n\t\t}]);\r\n\t\t// Reset the form\r\n\t\tsetGarmentColor(\"\");\r\n\t\tsetDestinationCountry(\"\");\r\n\t\tsetSizes({}); // Reset sizes to an empty object\r\n  \t};\r\n\r\n\tconst handleEditRow = (rowIndex) => {\r\n    \tconst updatedRows = [...rows];\r\n    \tupdatedRows[rowIndex].isEditable = !updatedRows[rowIndex].isEditable; // Toggle edit mode\r\n    \tsetRows(updatedRows);\r\n  \t};\r\n\t  \r\n\tconst handleDeleteRow = (rowIndex) => {\r\n\t\tconst updatedRows = rows.filter((_, index) => index !== rowIndex);\r\n\t\tsetRows(updatedRows);\r\n\t};\r\n\r\n\tconst handleSizesChange = (data) => {\r\n    \tconst selectedSizes = data.split(',').map(size => size.trim());\r\n    \tsetSizesArray(selectedSizes);\r\n    \t// Initialize a new sizes object\r\n\t\tconst initialSizes = selectedSizes.reduce((acc, size) => {\r\n\t\tacc[size] = ''; // Default each size value as empty\r\n\t\treturn acc;\r\n\t\t}, {});\r\n\r\n\t\t// Reset rows with new sizes\r\n\t\tconst newRow = {\r\n\t\tgarmentColor: '',\r\n\t\tdestinationCountry: '',\r\n\t\tsizes: initialSizes,\r\n\t\ttotal: 0, // Initial total is 0\r\n\t\tisEditable : false\r\n\t\t};\r\n\r\n\t\tsetRows([newRow]); // Only one row initially\r\n  \t};\r\n\r\n//  UseEffect to ensure rows are updated when sizesArray changes\r\n\tuseEffect(() => {\r\n\t\tif (sizesArray.length > 0) {\r\n\t\tconst initialSizes = sizesArray.reduce((acc, size) => {\r\n\t\t\tacc[size] = ''; // Initialize size values as empty strings\r\n\t\t\treturn acc;\r\n\t\t}, {});\r\n\r\n\t\tconst newRow = {\r\n\t\t\tgarmentColor: '',\r\n\t\t\tdestinationCountry: '',\r\n\t\t\tsizes: initialSizes,\r\n\t\t\ttotal: 0,\r\n\t\t\tisEditable : false\r\n\t\t};\r\n\r\n\t\t// Set the new row in rows\r\n\t\tsetRows([newRow]);\r\n\t\t}\r\n\t}, [sizesArray]);\r\n  \r\n\tconst handleSizeGrid = (value) => {\r\n\t\tlet StyleNoList = JSON.parse(sessionStorage.getItem('StyleNoList')) || [];\r\n\t\tlet SizeGridList = JSON.parse(sessionStorage.getItem('StyleGridList')) || [];\r\n\t\tconst sizeGridId = StyleNoList.find(grid => grid.Style_No == value);\r\n\t\tif (sizeGridId) {\r\n\t\t\t// Set other details\r\n\t\t\tsetBuyerName(sizeGridId.Buyer_Name);\r\n\t\t\tsetStyleDescription(sizeGridId.Style_Description);\r\n\t\t\tsetSizeGridName(sizeGridId.Size_Grid_Name);\r\n\t\t\tsetProductType(sizeGridId.Product_Type);\r\n\t\t\tsetMerchantName(sizeGridId.Marchent_Name);\r\n\t\t\tsetMerchantContact(sizeGridId.Marchent_Contact);\r\n\t\t\tsetGenderView(sizeGridId.Gender);\r\n\t\t\tconst sizeGridIdValue = SizeGridList.find(grid => grid.Size_Grid_Id == sizeGridId.Size_Grid);\r\n\t\t\tlet SizeGridValue = sizeGridIdValue ? sizeGridIdValue.Size_Grid_Value : null;\r\n\t\t\t// Ensure SizeGridValue is not null or undefined\r\n\t\t\tif (SizeGridValue) {\r\n\t\t\t\t// Make sure to clean any previous sizes before setting new ones\r\n\t\t\t\tsetSizesArray([]); \r\n\t\t\t\thandleSizesChange(SizeGridValue);\r\n\t\t\t} else {\r\n\t\t\t\tconsole.error(\"Size grid value is not available.\");\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t// Reset the fields if no matching style number is found\r\n\t\t\tsetBuyerName('');\r\n\t\t\tsetStyleDescription('');\r\n\t\t\tsetSizeGridName('');\r\n\t\t\tsetProductType('');\r\n\t\t\tsetMerchantName('');\r\n\t\t\tsetMerchantContact('');\r\n\t\t\tsetGenderView('');\r\n\t\t\tsetRows([]); // Clear existing rows\r\n\t\t\tsetSizesArray([]); // Clear sizes array\r\n\t\t}\r\n\t};\r\n\r\n\tconst handlePODetails = (e) => {\r\n\t\te.preventDefault();\r\n\t\tlet isValid = true;\r\n\t\tif (!embType) {\r\n\t\t\tsetEmbTypeError('Emb Type is required');\r\n\t\t\tisValid = false;\r\n\t\t}\r\n\t    else {\r\n\t\t\tsetEmbTypeError('');\r\n\t\t}\r\n\r\n\t\tif (!washingType) {\r\n\t\t\tsetWashingTypeError('Washing Type is required');\r\n\t\t\tisValid = false;\r\n\t\t} else {\r\n\t\t\tsetWashingTypeError('');\r\n\t\t}\r\n\r\n\t\tif (!styleNo) {\r\n\t\t\tsetStyleNoError('DMAPS No. is required');\r\n\t\t\tisValid = false;\r\n\t\t} else {\r\n\t\t\tsetStyleNoError('');\r\n\t\t}\r\n\r\n\t\tif (!fPONo) {\r\n\t\t\tsetFPONoError('FPO No. is required');\r\n\t\t\tisValid = false;\r\n\t\t} else {\r\n\t\t\tsetFPONoError('');\r\n\t\t}\r\n\r\n\t\tif (!PONo) {\r\n\t\t\tsetPONoError('Order No. is required');\r\n\t\t\tisValid = false;\r\n\t\t} else {\r\n\t\t\tsetPONoError('');\r\n\t\t}\r\n\r\n\t\tif (!printType) {\r\n\t\t\tsetPrintTypeError('Print Type is required');\r\n\t\t\tisValid = false;\r\n\t\t} else {\r\n\t\t\tsetPrintTypeError('');\r\n\t\t}\r\n\r\n\t\tif (!pcd) {\r\n\t\t\tsetPCDError('PCD is required');\r\n\t\t\tisValid = false;\r\n\t\t} \r\n\t\telse {\r\n\t\t\tsetPCDError('');\r\n\t\t}\r\n\r\n\t\tif (!deliveryDate) {\r\n\t\t\tsetDeliveryDateError('Delivery Date is required');\r\n\t\t\tisValid = false;\r\n\t\t} \r\n\t\telse {\r\n\t\t\tsetDeliveryDateError('');\r\n\t\t}\r\n\r\n\t\tif (!shipmentMode) {\r\n\t\t\tsetShipmentModeError('Shipment Mode is required');\r\n\t\t\tisValid = false;\r\n\t\t} \r\n\t\telse {\r\n\t\t\tsetShipmentModeError('');\r\n\t\t}\r\n\r\n\t\tconst totalSizes = Object.entries(sizes)\r\n        .filter(([key]) => key !== 'total') // Exclude 'total' key\r\n        .reduce((acc, [_, value]) => {\r\n            const parsedValue = parseInt(value);\r\n            return acc + (isNaN(parsedValue) ? 0 : parsedValue);\r\n        }, 0);\r\n\t\r\n\t\tif (!isValid) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// const modifiedData = rows.map(item => {\r\n\t\t// \treturn {\r\n\t\t// \t\tgarmentColor: item.garmentColor,\r\n\t\t// \t\tdestinationCountry: item.destinationCountry,\r\n\t\t// \t\ttotal: item.total,\r\n\t\t// \t\t...item.sizes // Spread sizes into the new object\r\n\t\t// \t};\r\n\t\t// });\r\n\t\t\r\n\t\t// // Now modifiedData contains the desired structure\r\n\t\t// console.log(modifiedData);\r\n\t\tconst updatedRows = rows.map((row) => ({\r\n\t\t\t...row,\r\n\t\t\tisEditable: false, // Set isEditable to false before saving\r\n\t\t}));\r\n\r\n\t\tlet payload = {\r\n\t\t\t\"Style_No\": styleNo,\r\n\t\t\t\"F_PO_No\":fPONo,\r\n\t\t\t\"PO_No\":PONo,\r\n\t\t\t\"OC_No\":OCNo,\r\n\t\t\t\"Emb_Type\": embType,\r\n\t\t\t\"Print_Type\": printType,\r\n\t\t\t\"Washing_Type\": washingType,\r\n\t\t\t\"Others\":others,\r\n\t\t\t\"Shipment_Mode\" : shipmentMode,\r\n\t\t\t\"Delivery_Date\" : deliveryDate,\r\n\t\t\t\"PCD\" : pcd,\r\n\t\t\t\"Note\": note,\r\n\t\t\t\"Garment_Data\" : JSON.stringify(updatedRows)\r\n\t\t}\r\n\r\n\t\ttrackPromise(styleStoreService.savePODetails({ \"data\": [payload] }).then((response) => {\r\n\t\t\t//check login response\r\n\t\t\tif (response.status === 200 && response.data.data.status == \"success\") {\r\n\t\t\t\t// alert(response.data.result);\r\n\t\t\t\tstateValues()\r\n\t\t\t\tgetPOData()\r\n\t\t\t\thandleClose()\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\talert(response.data.data.result);\r\n\t\t\t}\r\n\r\n\t\t}).catch((error) => {\r\n\t\t\t//console.log(error.response.data.error)\r\n\t\t\talert(error.response.data.error);\r\n\t\t})\r\n\t\t);\r\n\r\n\t}\r\n\r\n\tconst getPOData = () => {\r\n\t\ttrackPromise(\r\n\t\t\tstyleStoreService.getPODetails().then((response) => {\r\n\t\t\t\tsetData(response.data.PO_Details)\r\n\t\t\t})\r\n\t\t);\r\n\t}\r\n\r\n\tconst getBasicDetails = () => {\r\n        trackPromise(\r\n            adminService.getBasicDetails().then((response) => {\r\n                setStyleNoList(response.data[0].data[0].data.styleNo);\r\n\t\t\t\tsetEmbTypeList(response.data[0].data[0].data.embType)\r\n\t\t\t\tsetPrintTypeList(response.data[0].data[0].data.printType)\r\n\t\t\t\tsetWashingTypeList(response.data[0].data[0].data.washingType)\r\n\t\t\t\tsessionStorage.setItem('StyleNoList', JSON.stringify(response.data[0].data[0].data.styleNo));\r\n\t\t\t\tsessionStorage.setItem('StyleGridList', JSON.stringify(response.data[0].data[0].data.sizeGrid));\r\n            })\r\n        );\r\n    }\r\n\r\n\tuseEffect(() => {\r\n\t\tgetBasicDetails();\r\n\t\tgetPOData()\r\n\t}, [])\r\n\r\n\r\n\tfunction stateValues() {\r\n\t\tgetBasicDetails();\r\n\t\tsetNote('');\r\n\t\tsetStyleNo('')\r\n\t\tsetStyleNoError('');\r\n\t\tsetEmbType('')\r\n\t\tsetEmbTypeError('')\r\n\t\tsetWashingType('')\r\n\t\tsetWashingTypeError('')\r\n\t\tsetFPONo('')\r\n\t\tsetFPONoError('')\r\n\t\tsetPONo('')\r\n\t\tsetPONoError('')\r\n\t\tsetOCNo('')\r\n\t\tsetPrintType('')\r\n\t\tsetPrintTypeError('')\r\n\t\tsetOthers('')\r\n\t\tsetShipmentMode('')\r\n\t\tsetShipmentModeError('')\r\n\t\tsetDeliveryDate('')\r\n\t\tsetDeliveryDateError('')\r\n\t\tsetPCD('')\r\n\t\tsetPCDError('')\r\n\t\tsetGarmentColor('');\r\n\t\tsetDestinationCountry('');\r\n\t\tsetSizes({});\r\n\t}\r\n\r\n\tconst openEditForm = (data) => {\r\n\t\t// Reset existing size data before editing\r\n\t\tsetSizesArray([]); \r\n\t\teditFormDetails(data);\r\n\t\tsetIsEditFormOpen(true); \r\n\t};\r\n\r\n\tconst setExistingGarmentData = (data) => {\r\n\t\tsetSizeKeys(data.length > 0 ? Object.keys(data[0].sizes) : []);\r\n\t\tsetRows(data);\r\n\t};\r\n\r\n\tfunction editFormDetails(data) {\r\n\t\tsetStyleNoError('');\r\n\t\t// Set all the relevant fields\r\n\t\tsetPOId(data.PO_Id);\r\n\t\tsetEmbType(data.Emb_Type);\r\n\t\tsetWashingType(data.Washing_Type);\r\n\t\tsetNote(data.Note);\r\n\t\tsetStyleNo(data.Style_No);\r\n\t\tsetFPONo(data.F_PO_No);\r\n\t\tsetPONo(data.PO_No);\r\n\t\tsetOCNo(data.OC_No);\r\n\t\tsetPrintType(data.Print_Type);\r\n\t\tsetOthers(data.Others);\r\n\t\tsetShipmentMode(data.Shipment_Mode);\r\n\t\tsetDeliveryDate(data.Delivery_Date);\r\n\t\tsetPCD(data.PCD);\r\n\t\tsetBuyerName(data.Buyer_Name);\r\n\t\tsetStyleDescription(data.Style_Description);\r\n\t\tsetSizeGridName(data.Size_Grid_Name);\r\n\t\tsetProductType(data.Product_Type);\r\n\t\tsetMerchantName(data.Marchent_Name);\r\n\t\tsetMerchantContact(data.Marchent_Contact);\r\n\t\tsetGenderView(data.Gender);\r\n\t  \r\n\t\t// Parse and set garment data\r\n\t\tconst garmentData = JSON.parse(data.Garment_Data);\r\n\t\tif (garmentData.length !== 0) {\r\n\t\t  setExistingGarmentData(garmentData);\r\n\t\t} else {\r\n\t\t  handleSizeGrid(data.Style_No);\r\n\t\t}\r\n\t}\r\n\t  \r\n    const closeEditForm = () => {\r\n        setIsEditFormOpen(false);\r\n    };\r\n\r\n// Delete Unit Records\r\n\r\n\tconst deletePODetails = (data) => {\r\n\tif (window.confirm(\"Are you sure to delete the Style Entry ?\"))\r\n    {\r\n\t\tlet payload = {\r\n\t\t\t\"PO_Id\":data.PO_Id\r\n\t\t}\r\n\t\ttrackPromise(styleStoreService.deletePODetails({ \"data\": [payload] }).then((response) => {\r\n\t\t\t//check login response\r\n\t\t\tif (response.status === 200) {\r\n\t\t\t\tgetPOData()\r\n\t\t\t}\t\r\n\t\t\telse {\r\n\t\t\t\talert(response.data.message);\r\n\t\t\t}\r\n\r\n\t\t}).catch((error) => {\r\n\t\t\t//console.log(error.response.data.error)\r\n\t\t\talert(error.response.data.error);\r\n\t\t})\r\n\t\t);\r\n\t}\r\n\t};\r\n\r\n\tconst handleEditStyleEntry  = (e, data, index) => {\r\n\r\n\te.preventDefault();\r\n\tlet isValid = true;\r\n\r\n\tif (!embType) {\r\n\t\tsetEmbTypeError('Emb Type is required');\r\n\t\tisValid = false;\r\n\t}\r\n\telse {\r\n\t\tsetEmbTypeError('');\r\n\t}\r\n\r\n\tif (!washingType) {\r\n\t\tsetWashingTypeError('Washing Type is required');\r\n\t\tisValid = false;\r\n\t} else {\r\n\t\tsetWashingTypeError('');\r\n\t}\r\n\r\n\tif (!styleNo) {\r\n\t\tsetStyleNoError('DMAPS No. is required');\r\n\t\tisValid = false;\r\n\t} else {\r\n\t\tsetStyleNoError('');\r\n\t}\r\n\r\n\tif (!fPONo) {\r\n\t\tsetFPONoError('FPO No. is required');\r\n\t\tisValid = false;\r\n\t} else {\r\n\t\tsetFPONoError('');\r\n\t}\r\n\r\n\tif (!PONo) {\r\n\t\tsetPONoError('Order No. is required');\r\n\t\tisValid = false;\r\n\t} else {\r\n\t\tsetPONoError('');\r\n\t}\r\n\r\n\tif (!printType) {\r\n\t\tsetPrintTypeError('Print Type is required');\r\n\t\tisValid = false;\r\n\t} else {\r\n\t\tsetPrintTypeError('');\r\n\t}\r\n\r\n\tif (!pcd) {\r\n\t\tsetPCDError('PCD is required');\r\n\t\tisValid = false;\r\n\t} \r\n\telse {\r\n\t\tsetPCDError('');\r\n\t}\r\n\r\n\tif (!deliveryDate) {\r\n\t\tsetDeliveryDateError('Delivery Date is required');\r\n\t\tisValid = false;\r\n\t} \r\n\telse {\r\n\t\tsetDeliveryDateError('');\r\n\t}\r\n\r\n\tif (!shipmentMode) {\r\n\t\tsetShipmentModeError('Shipment Mode is required');\r\n\t\tisValid = false;\r\n\t}\r\n\telse {\r\n\t\tsetShipmentModeError('');\r\n\t}\r\n\r\n\tconst totalSizes = Object.entries(sizes)\r\n\t.filter(([key]) => key !== 'total') // Exclude 'total' key\r\n\t.reduce((acc, [_, value]) => {\r\n\t\tconst parsedValue = parseInt(value);\r\n\t\treturn acc + (isNaN(parsedValue) ? 0 : parsedValue);\r\n\t}, 0);\r\n\r\n\tif (!isValid) {\r\n\t\treturn;\r\n\t}\r\n\r\n\tconst updatedRows = rows.map((row) => ({\r\n\t\t...row,\r\n\t\tisEditable: false, // Set isEditable to false before saving\r\n\t}));\r\n\r\n\tlet payload = {\r\n\t\t\"PO_Id\":POId,\r\n\t\t\"Style_No\": styleNo,\r\n\t\t\"FPO_No\":fPONo,\r\n\t\t\"PO_No\":PONo,\r\n\t\t\"OC_No\":OCNo,\r\n\t\t\"Emb_Type\": embType,\r\n\t\t\"Print_Type\": printType,\r\n\t\t\"Washing_Type\": washingType,\r\n\t\t\"Others\":others,\r\n\t\t\"Shipment_Mode\" : shipmentMode,\r\n\t\t\"Delivery_Date\" : deliveryDate,\r\n\t\t\"PCD\" : pcd,\r\n\t\t\"Note\": note,\r\n\t\t\"Garment_Data\" : JSON.stringify(updatedRows)\r\n\t}\r\n\r\n\ttrackPromise(styleStoreService.editPODetails({ \"data\": [payload] }).then((response) => {\r\n\t\t//check login response\r\n\t\tif (response.status === 200 && response.data.data.status == \"success\") {\r\n\t\t\t// alert(response.data.result)\r\n\t\t\tgetPOData()\r\n\t\t\tif(data == 'save'){\r\n\r\n\t\t\t\tcloseEditForm()\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tconst updatedRows = [...rows];\r\n    \t\t\tupdatedRows[index].isEditable = !updatedRows[index].isEditable; // Toggle edit mode\r\n    \t\t\tsetRows(updatedRows);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\talert(response.data.data.result);\r\n\t\t}\r\n\r\n\t}).catch((error) => {\r\n\t\t//console.log(error.response.data.error)\r\n\t\talert(error.response.data.error);\r\n\t})\r\n\t);\r\n\t}\r\n\r\nreturn <>\r\n\t\t<div className='row'>\r\n\t\t\t<div className='col-8'>\r\n\t\t\t\t<h1 className='h1'> Order Details </h1>\r\n\t\t\t</div>\r\n\t\t\t<div className='col-4 text-right'>\r\n\t\t\t\t<Button className='primary-btn mt-10' onClick={() => {setShow(true);stateValues(); setSizes({});  setRows([]); }}>\r\n\t\t\t\t<i className='fa fa-plus fa-white'> </i> New PO \r\n\t\t\t\t</Button>\r\n\t\t\t\t\r\n\t\t\t\t<Modal\r\n\t\t\t\t\tshow={show}\r\n\t\t\t\t\tonHide={() => setShow(false)}\r\n\t\t\t\t\tdialogClassName=\"modal-90w\"\r\n\t\t\t\t\tbackdrop=\"static\"\r\n\t\t\t\t\tkeyboard={false}>\r\n\t\t\t\t\t<Modal.Header closeButton>\r\n\t\t\t\t\t\t<Modal.Title> Add New Order  </Modal.Title>\r\n\t\t\t\t\t</Modal.Header>\r\n\t\t\t\t\t<Modal.Body>\r\n\t\t\t\t\t\t<form onSubmit={handlePODetails}>\r\n\t\t\t\t\t\t\t<div className='row'>\r\n\t\t\t\t\t\t\t\t<div className='col-3'>\r\n\t\t\t\t\t\t\t\t\t<Form.Select className='mb-3' tabindex=\"1\" label='DMAPS No.' onChange={(e) => { setStyleNo(e.target.value); \t\t\r\n\t\t\t\t\t\t\t\t\t\thandleSizeGrid(e.target.value)}} value={styleNo} name='styleNo'>\r\n\t\t\t\t\t\t\t\t\t\t\t<option> Select DMAPS No. </option>\r\n\t\t\t\t\t\t\t\t\t\t\t{styleNoList.map((item) => (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<option key={item.Style_No} value={item.Style_No}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{item.Style_No}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t</Form.Select>\r\n\t\t\t\t\t\t\t\t\t{styleNoError && <p style={{ color: 'red' }}>{styleNoError}</p>}\r\n\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t{styleNo || styleNo != '' ? (\r\n\t\t\t\t\t\t\t\t<div className='row'>\r\n\t\t\t\t\t\t\t\t\t<div className='col-3'>\r\n\t\t\t\t\t\t\t\t\t<div className=\"data-row\">\r\n\t\t\t\t\t\t\t\t\t\t<label className='label-read' htmlFor=\"name\">Buyer</label>\r\n\t\t\t\t\t\t\t\t\t\t<span className='span-read'> {BuyerName} </span>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div className='col-3'>\r\n\t\t\t\t\t\t\t\t\t<div className=\"data-row\">\r\n\t\t\t\t\t\t\t\t\t\t<label className='label-read' htmlFor=\"name\">Buyer Style No.</label>\r\n\t\t\t\t\t\t\t\t\t\t<span className='span-read'> {StyleDescription} </span>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div className='col-3'>\r\n\t\t\t\t\t\t\t\t\t<div className=\"data-row\">\r\n\t\t\t\t\t\t\t\t\t\t<label className='label-read' htmlFor=\"name\">Size Grid Name</label>\r\n\t\t\t\t\t\t\t\t\t\t<span className='span-read'> {SizeGridName} </span>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div className='col-12'>\r\n\t\t\t\t\t\t\t\t\t<div className='row'>\r\n\t\t\t\t\t\t\t\t\t\t<div className='col-3'>\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"data-row\">\r\n\t\t\t\t\t\t\t\t\t\t\t<label className='label-read' htmlFor=\"name\">Gender</label>\r\n\t\t\t\t\t\t\t\t\t\t\t<span className='span-read'> {GenderView} </span>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div className='col-3'>\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"data-row\">\r\n\t\t\t\t\t\t\t\t\t\t\t<label className='label-read' htmlFor=\"name\">Product Type</label>\r\n\t\t\t\t\t\t\t\t\t\t\t<span className='span-read'> {ProductType} </span>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div className='col-3'>\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"data-row\">\r\n\t\t\t\t\t\t\t\t\t\t\t<label className='label-read' htmlFor=\"name\">Merchant Name</label>\r\n\t\t\t\t\t\t\t\t\t\t\t<span className='span-read'> {MerchantName} </span>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div className='col-3'>\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"data-row\">\r\n\t\t\t\t\t\t\t\t\t\t\t<label className='label-read' htmlFor=\"name\">Merchant Contact</label>\r\n\t\t\t\t\t\t\t\t\t\t\t<span className='span-read'> {MerchantContact} </span>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t) : null}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<h6 className='h6'> Order Details </h6>\r\n\t\t\t\t\t\t\t<div className='row'>\r\n\t\t\t\t\t\t\t\t<div className='col-3'>\r\n\t\t\t\t\t\t\t\t\t<MDBInput label='F PO No.' type='text' tabindex=\"2\" wrapperClass='mb-3' onChange={(e) => { setFPONo(e.target.value) }} value={fPONo} name='fPONo' />\r\n\t\t\t\t\t\t\t\t\t{fPONoError && <p style={{ color: 'red' }}>{fPONoError}</p>}\r\n\r\n\t\t\t\t\t\t\t\t\t<MDBInput label='Order No.' type='text' tabindex=\"3\" wrapperClass='mb-3' onChange={(e) => { setPONo(e.target.value) }} value={PONo} name='PONo' />\r\n\t\t\t\t\t\t\t\t\t{PONoError && <p style={{ color: 'red' }}>{PONoError}</p>}\r\n\r\n\t\t\t\t\t\t\t\t\t<MDBInput label='OC No.' type='text' tabindex=\"4\" wrapperClass='mb-3' onChange={(e) => { setOCNo(e.target.value) }} value={OCNo} name='OCNo' />\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t<div className='col-3'>\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t<Form.Select className='mb-3' tabindex=\"5\" label='Emb Type' onChange={(e) => { setEmbType(e.target.value) }} value={embType} name='embType'>\r\n\t\t\t\t\t\t\t\t\t\t<option> Select Emb Type </option>\r\n\t\t\t\t\t\t\t\t\t\t{embTypeList.map((item) => (\r\n\t\t\t\t\t\t\t\t\t\t\t<option key={item.id} value={item.Emb_Type}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{item.Emb_Type}\r\n\t\t\t\t\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t</Form.Select>\r\n\t\t\t\t\t\t\t\t\t{embTypeError && <p style={{ color: 'red' }}>{embTypeError}</p>}\r\n\r\n\t\t\t\t\t\t\t\t\t<Form.Select className='mb-3' tabindex=\"6\" label='Print Type' onChange={(e) => { setPrintType(e.target.value) }} value={printType} name='printType'>\r\n\t\t\t\t\t\t\t\t\t\t<option> Select Print Type </option>\r\n\t\t\t\t\t\t\t\t\t\t{printTypeList.map((item) => (\r\n\t\t\t\t\t\t\t\t\t\t\t<option key={item.id} value={item.Print_Type}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{item.Print_Type}\r\n\t\t\t\t\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t</Form.Select>\r\n\t\t\t\t\t\t\t\t\t{printTypeError && <p style={{ color: 'red' }}>{printTypeError}</p>}\r\n\r\n\t\t\t\t\t\t\t\t\t<Form.Select className='mb-3' tabindex=\"7\" label='Washing Type' onChange={(e) => { setWashingType(e.target.value) }} value={washingType} name='washingType'>\r\n\t\t\t\t\t\t\t\t\t\t<option> Select Washing Type </option>\r\n\t\t\t\t\t\t\t\t\t\t{washingTypeList.map((item) => (\r\n\t\t\t\t\t\t\t\t\t\t\t<option key={item.id} value={item.Washing_Type}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{item.Washing_Type}\r\n\t\t\t\t\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t</Form.Select>\r\n\t\t\t\t\t\t\t\t\t{washingTypeError && <p style={{ color: 'red' }}>{washingTypeError}</p>}\r\n\r\n\t\t\t\t\t\t\t\t\t<MDBInput wrapperClass='mb-3' type='text' tabindex=\"9\" label='Shipment Mode' onChange={(e) => { setShipmentMode(e.target.value) }} value={shipmentMode} name='shipmentMode' />\r\n\t\t\t\t\t\t\t\t\t{shipmentModeError && <p style={{ color: 'red' }}>{shipmentModeError}</p>}\r\n\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='col-6'>\r\n\t\t\t\t\t\t\t\t\t<MDBInput wrapperClass='mb-3' type='date' tabindex=\"10\" label='Delivery Date' onChange={(e) => { setDeliveryDate(e.target.value) }} value={deliveryDate} name='deliveryDate' />\r\n\t\t\t\t\t\t\t\t\t{deliveryDateError && <p style={{ color: 'red' }}>{deliveryDateError}</p>}\r\n\r\n\t\t\t\t\t\t\t\t\t<MDBInput wrapperClass='mb-3' type='date' tabindex=\"11\" label='PCD' onChange={(e) => { setPCD(e.target.value) }} value={pcd} name='pcd' />\r\n\t\t\t\t\t\t\t\t\t{pcdError && <p style={{ color: 'red' }}>{pcdError}</p>}\r\n\r\n\t\t\t\t\t\t\t\t\t<MDBInput wrapperClass='mb-3' type='text' tabindex=\"8\" label='Others' onChange={(e) => { setOthers(e.target.value) }} value={others} name='others' />\r\n\r\n\t\t\t\t\t\t\t\t\t<MDBInput wrapperClass='mb-3 ' label='Notes'  type='textarea' tabindex=\"12\"  onChange={(e) => { setNote(e.target.value) }} value={note} name='note' />\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"col-12 mt-20 parentDivStyle\">\r\n\t\t\t\t\t\t\t\t{sizesArray && sizesArray.length > 0 ? (\r\n\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t<table border=\"1\" className='table tableStyle'>\r\n\t\t\t\t\t\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t\t<th className='thTdStyle'>Garment Color</th>\r\n\t\t\t\t\t\t\t\t\t\t\t<th className='thTdStyle'>Destination Country</th>\r\n\t\t\t\t\t\t\t\t\t\t\t{sizesArray.map((sizeKey) => (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<th className='thTdStyle' key={sizeKey}>{sizeKey}</th>\r\n\t\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t\t\t<th className='thTdStyle'>Total</th>\r\n\t\t\t\t\t\t\t\t\t\t\t<th className='thTdStyle'>Actions</th>\r\n\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t\t</thead>\r\n\t\t\t\t\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t\t\t\t\t{rows.map((row, rowIndex) => (\r\n\t\t\t\t\t\t\t\t\t\t\t<tr key={rowIndex}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<td className='thTdStyle'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<input \r\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"color\" \r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={row.garmentColor}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tconst updatedRows = [...rows];\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tupdatedRows[rowIndex].garmentColor = e.target.value;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetRows(updatedRows);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<td className='thTdStyle'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<input \r\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\" \r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={row.destinationCountry}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tconst updatedRows = [...rows];\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tupdatedRows[rowIndex].destinationCountry = e.target.value;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetRows(updatedRows);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{/* Dynamically generate size inputs */}\r\n\t\t\t\t\t\t\t\t\t\t\t\t{sizesArray.map((sizeKey) => (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<td className='thTdStyle' key={sizeKey}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={row.sizes[sizeKey] || ''}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst updatedRows = [...rows];\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tupdatedRows[rowIndex].sizes[sizeKey] = e.target.value;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tupdatedRows[rowIndex].total = calculateTotal(updatedRows[rowIndex].sizes); // Recalculate total\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetRows(updatedRows);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t\t\t\t<td className='thTdStyle'>{row.total}</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<td className='thTdStyle'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<i className='fa fa-trash ml-15 pointer' onClick={() => handleDeleteRow(rowIndex)} title='Delete'> </i>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t\t\t\t\t\t</table>\r\n\t\t\t\t\t\t\t\t\t\t<Button variant=\"success\" onClick={addNewRow} style={{ float: 'right', width: '5%', marginTop: \"0PX\" }}> <i className='fa fa-plus fa-1x white'> </i>   </Button>\r\n\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t\t) : null}\r\n\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</form>\r\n\t\t\t\t\t</Modal.Body>\r\n\t\t\t\t\t<Modal.Footer>\r\n\t\t\t\t\t\t<Button variant=\"secondary\" onClick={handleClose} style={{ width: '15%' }} >\r\n\t\t\t\t\t\t\tCancel\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t<Button variant=\"primary\" type='submit' onClick={handlePODetails}  style={{ width: '15%' }}>\r\n\t\t\t\t\t\t\tSave\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</Modal.Footer>\r\n\t\t\t\t</Modal>\r\n\t\t\t</div>\r\n\t\t\t<div className='col-12'>\r\n\r\n\t\t\t\t<PODetailsTable defaultPageSize={10} data={data} openEditForm={openEditForm} deletePODetails = {deletePODetails} />\r\n\r\n\t\t\t\t<Modal show={isEditFormOpen} onHide={closeEditForm} dialogClassName=\"modal-90w\"\r\n\t\t\t\t\tbackdrop=\"static\">\r\n\t\t\t\t\t<Modal.Header closeButton>\r\n\t\t\t\t\t\t<Modal.Title>Edit Order Details </Modal.Title>\r\n\t\t\t\t\t</Modal.Header>\r\n\t\t\t\t\t<Modal.Body>\r\n\t\t\t\t\t\t<form>\r\n\t\t\t\t\t\t<div className='row'>\r\n\t\t\t\t\t\t\t\t<div className='col-3'>\r\n\t\t\t\t\t\t\t\t<Form.Select className='mb-3' tabindex=\"1\" label='DMAPS No.' onChange={(e) => { setStyleNo(e.target.value); handleSizeGrid(e.target.value)}} value={styleNo} name='styleNo' disabled>\r\n\t\t\t\t\t\t\t\t\t\t<option> Select DMAPS No. </option>\r\n\t\t\t\t\t\t\t\t\t\t{styleNoList.map((item) => (\r\n\t\t\t\t\t\t\t\t\t\t\t<option key={item.Style_No} value={item.Style_No}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{item.Style_No}\r\n\t\t\t\t\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t</Form.Select>\r\n\t\t\t\t\t\t\t\t\t{styleNoError && <p style={{ color: 'red' }}>{styleNoError}</p>}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='row'>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t<div className='col-12'>\r\n\t\t\t\t\t\t\t\t{styleNo || styleNo != '' ? (\r\n\t\t\t\t\t\t\t\t<div className='row'>\r\n\t\t\t\t\t\t\t\t\t<div className='col-3'>\r\n\t\t\t\t\t\t\t\t\t<div className=\"data-row\">\r\n\t\t\t\t\t\t\t\t\t\t<label className='label-read' htmlFor=\"name\">Buyer</label>\r\n\t\t\t\t\t\t\t\t\t\t<span className='span-read'> {BuyerName} </span>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div className='col-3'>\r\n\t\t\t\t\t\t\t\t\t<div className=\"data-row\">\r\n\t\t\t\t\t\t\t\t\t\t<label className='label-read' htmlFor=\"name\">Buyer Style No.</label>\r\n\t\t\t\t\t\t\t\t\t\t<span className='span-read'> {StyleDescription} </span>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div className='col-3'>\r\n\t\t\t\t\t\t\t\t\t<div className=\"data-row\">\r\n\t\t\t\t\t\t\t\t\t\t<label className='label-read' htmlFor=\"name\">Size Grid Name</label>\r\n\t\t\t\t\t\t\t\t\t\t<span className='span-read'> {SizeGridName} </span>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div className='col-12'>\r\n\t\t\t\t\t\t\t\t\t<div className='row'>\r\n\t\t\t\t\t\t\t\t\t\t<div className='col-3'>\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"data-row\">\r\n\t\t\t\t\t\t\t\t\t\t\t<label className='label-read' htmlFor=\"name\">Gender</label>\r\n\t\t\t\t\t\t\t\t\t\t\t<span className='span-read'> {GenderView} </span>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div className='col-3'>\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"data-row\">\r\n\t\t\t\t\t\t\t\t\t\t\t<label className='label-read' htmlFor=\"name\">Product Type</label>\r\n\t\t\t\t\t\t\t\t\t\t\t<span className='span-read'> {ProductType} </span>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div className='col-3'>\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"data-row\">\r\n\t\t\t\t\t\t\t\t\t\t\t<label className='label-read' htmlFor=\"name\">Merchant Name</label>\r\n\t\t\t\t\t\t\t\t\t\t\t<span className='span-read'> {MerchantName} </span>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div className='col-3'>\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"data-row\">\r\n\t\t\t\t\t\t\t\t\t\t\t<label className='label-read' htmlFor=\"name\">Merchant Contact</label>\r\n\t\t\t\t\t\t\t\t\t\t\t<span className='span-read'> {MerchantContact} </span>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t) : null}\r\n\r\n\t\t\t\t\t\t\t\t<h6 className='h6'> Order Details </h6>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t<div className='col-3'>\r\n\t\t\t\t\t\t\t\t\t<MDBInput label='F PO No.' type='text' tabindex=\"2\" wrapperClass='mb-3' onChange={(e) => { setFPONo(e.target.value) }} value={fPONo} name='fPONo' />\r\n\t\t\t\t\t\t\t\t\t{fPONoError && <p style={{ color: 'red' }}>{fPONoError}</p>}\r\n\r\n\t\t\t\t\t\t\t\t\t<MDBInput label='Order No.' type='text' tabindex=\"3\" wrapperClass='mb-3' onChange={(e) => { setPONo(e.target.value) }} value={PONo} name='PONo' />\r\n\t\t\t\t\t\t\t\t\t{PONoError && <p style={{ color: 'red' }}>{PONoError}</p>}\r\n\r\n\t\t\t\t\t\t\t\t\t<MDBInput label='OC No.' type='text' tabindex=\"4\" wrapperClass='mb-3' onChange={(e) => { setOCNo(e.target.value) }} value={OCNo} name='OCNo' />\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t<div className='col-3'>\r\n\t\t\t\t\t\t\t\t\t<Form.Select className='mb-3' tabindex=\"5\" label='Emb Type' onChange={(e) => { setEmbType(e.target.value) }} value={embType} name='embType'>\r\n\t\t\t\t\t\t\t\t\t\t<option> Select Emb Type </option>\r\n\t\t\t\t\t\t\t\t\t\t{embTypeList.map((item) => (\r\n\t\t\t\t\t\t\t\t\t\t\t<option key={item.id} value={item.Emb_Type}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{item.Emb_Type}\r\n\t\t\t\t\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t</Form.Select>\r\n\t\t\t\t\t\t\t\t\t{embTypeError && <p style={{ color: 'red' }}>{embTypeError}</p>}\r\n\r\n\t\t\t\t\t\t\t\t\t<Form.Select className='mb-3' tabindex=\"6\" label='Print Type' onChange={(e) => { setPrintType(e.target.value) }} value={printType} name='printType'>\r\n\t\t\t\t\t\t\t\t\t\t<option> Select Print Type </option>\r\n\t\t\t\t\t\t\t\t\t\t{printTypeList.map((item) => (\r\n\t\t\t\t\t\t\t\t\t\t\t<option key={item.id} value={item.Print_Type}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{item.Print_Type}\r\n\t\t\t\t\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t</Form.Select>\r\n\t\t\t\t\t\t\t\t\t{printTypeError && <p style={{ color: 'red' }}>{printTypeError}</p>}\r\n\r\n\t\t\t\t\t\t\t\t\t<Form.Select className='mb-3' tabindex=\"7\" label='Washing Type' onChange={(e) => { setWashingType(e.target.value) }} value={washingType} name='washingType'>\r\n\t\t\t\t\t\t\t\t\t\t<option> Select Washing Type </option>\r\n\t\t\t\t\t\t\t\t\t\t{washingTypeList.map((item) => (\r\n\t\t\t\t\t\t\t\t\t\t\t<option key={item.id} value={item.Washing_Type}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{item.Washing_Type}\r\n\t\t\t\t\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t</Form.Select>\r\n\t\t\t\t\t\t\t\t\t{washingTypeError && <p style={{ color: 'red' }}>{washingTypeError}</p>}\r\n\r\n\t\t\t\t\t\t\t\t\t<MDBInput wrapperClass='mb-3' type='text' tabindex=\"9\" label='Shipment Mode' onChange={(e) => { setShipmentMode(e.target.value) }} value={shipmentMode} name='shipmentMode' />\r\n\t\t\t\t\t\t\t\t\t{shipmentModeError && <p style={{ color: 'red' }}>{shipmentModeError}</p>}\r\n\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='col-6'>\r\n\r\n\t\t\t\t\t\t\t\t\t<MDBInput wrapperClass='mb-3' type='date' tabindex=\"10\" label='Delivery Date' onChange={(e) => { setDeliveryDate(e.target.value) }} value={deliveryDate} name='deliveryDate' />\r\n\t\t\t\t\t\t\t\t\t{deliveryDateError && <p style={{ color: 'red' }}>{deliveryDateError}</p>}\r\n\r\n\t\t\t\t\t\t\t\t\t<MDBInput wrapperClass='mb-3' type='date' tabindex=\"11\" label='PCD' onChange={(e) => { setPCD(e.target.value) }} value={pcd} name='pcd' />\r\n\t\t\t\t\t\t\t\t\t{pcdError && <p style={{ color: 'red' }}>{pcdError}</p>}\r\n\r\n\t\t\t\t\t\t\t\t\t<MDBInput wrapperClass='mb-3' type='text' tabindex=\"8\" label='Others' onChange={(e) => { setOthers(e.target.value) }} value={others} name='others' />\r\n\r\n\t\t\t\t\t\t\t\t\t<MDBInput wrapperClass='mb-3 ' label='Notes'  type='textarea' tabindex=\"12\"  onChange={(e) => { setNote(e.target.value) }} value={note} name='note' />\r\n\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"col-12 mt-20 parentDivStyle\">\r\n\t\t\t\t\t\t\t\t\t<table border=\"1\" cellPadding=\"10\" className='table tableStyle'>\r\n\t\t\t\t\t\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t\t<th className='thTdStyle'>Garment Color</th>\r\n\t\t\t\t\t\t\t\t\t\t\t<th className='thTdStyle'>Destination Country</th>\r\n\t\t\t\t\t\t\t\t\t\t\t{sizeKeys.map((sizeKey) => (\r\n\t\t\t\t\t\t\t\t\t\t\t<th key={sizeKey} className='thTdStyle'>{sizeKey}</th>\r\n\t\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t\t\t<th className='thTdStyle'>Total</th>\r\n\t\t\t\t\t\t\t\t\t\t\t<th className='thTdStyle'>Actions</th>\r\n\t\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t\t</thead>\r\n\t\t\t\t\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t\t\t\t{rows.map((row, rowIndex) => (\r\n\t\t\t\t\t\t\t\t\t\t\t<tr key={rowIndex}>\r\n\t\t\t\t\t\t\t\t\t\t\t<td className='thTdStyle'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{row.isEditable ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"color\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={row.garmentColor}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst updatedRows = [...rows];\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tupdatedRows[rowIndex].garmentColor = e.target.value;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetRows(updatedRows);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tbackgroundColor: row.garmentColor,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '25px',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\theight: '25px',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tborderRadius: '4px',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tborder: '1px solid #ccc',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t></div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t\t<td className='thTdStyle'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{row.isEditable ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={row.destinationCountry}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst updatedRows = [...rows];\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tupdatedRows[rowIndex].destinationCountry = e.target.value;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetRows(updatedRows);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\trow.destinationCountry\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t\t{/* Dynamically generate size fields */}\r\n\t\t\t\t\t\t\t\t\t\t\t{sizeKeys.map((sizeKey) => (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<td className='thTdStyle' key={sizeKey}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{row.isEditable ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={row.sizes[sizeKey] || ''}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst updatedRows = [...rows];\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tupdatedRows[rowIndex].sizes[sizeKey] = e.target.value;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tupdatedRows[rowIndex].total = calculateTotal(updatedRows[rowIndex].sizes); \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetRows(updatedRows);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\trow.sizes[sizeKey] || ''\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t\t\t<td className='thTdStyle'>{row.total}</td>\r\n\t\t\t\t\t\t\t\t\t\t\t<td className=\"thTdStyle\">\r\n\t\t\t\t\t\t\t\t\t\t\t{/* Toggle between Edit and Save buttons based on isEditable */}\r\n\t\t\t\t\t\t\t\t\t\t\t{row.isEditable ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"fa fa-save pointer\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={(e) => handleEditStyleEntry(e, 'edit', rowIndex)}\r\n\t\t\t\t\t\t\t\t\t\t\t\ttitle=\"Save\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t></i>\r\n\t\t\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"fa fa-edit pointer\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => handleEditRow(rowIndex)}\r\n\t\t\t\t\t\t\t\t\t\t\t\ttitle=\"Edit\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t></i>\r\n\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t{/* Trash icon to delete the row */}\r\n\t\t\t\t\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"fa fa-trash ml-15 pointer\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => handleDeleteRow(rowIndex)}\r\n\t\t\t\t\t\t\t\t\t\t\t\ttitle=\"Delete\"\r\n\t\t\t\t\t\t\t\t\t\t\t></i>\r\n\t\t\t\t\t\t\t\t\t\t\t</td>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t\t\t\t\t</table>\r\n\t\t\t\t\t\t\t\t\t<Button variant=\"success\" onClick={addNewRow} style={{ float: 'right', width: '5%', marginTop: \"0PX\" }}> <i className='fa fa-plus fa-1x white'> </i> </Button>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</form>\r\n\t\t\t\t\t</Modal.Body>\r\n\t\t\t\t\t<Modal.Footer>\t\r\n\t\t\t\t\t\t<Button variant=\"secondary\" onClick={closeEditForm} style={{ width: '15%' }}>\r\n\t\t\t\t\t\t\tCancel\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t<Button variant=\"primary\" onClick={(e) => handleEditStyleEntry(e, 'save', '99999')} style={{ width: '15%' }}>\r\n\t\t\t\t\t\t\tSave\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</Modal.Footer>\r\n\t\t\t\t</Modal>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</>\r\n}","/**\r\n * owner : \r\n * author :\r\n */\r\n\r\nimport { useEffect, useState } from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Form from 'react-bootstrap/Form';\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\r\nimport Tooltip from 'react-bootstrap/Tooltip';\r\n\r\n\r\nimport './StyleEntry.scss';\r\n\r\nimport {\r\n\tMDBTabs,\r\n\tMDBTabsItem,\r\n\tMDBTabsLink,\r\n\tMDBTabsContent,\r\n\tMDBTabsPane,\r\n\tMDBCol,\r\n\tMDBInput\r\n} from 'mdb-react-ui-kit';\r\n\r\nimport styleStoreService from \"../../../../services/styleStoreService\";\r\nimport { trackPromise } from 'react-promise-tracker';\r\nimport StyleEntryTable from './StyleEntryTable';\r\nimport adminService from \"../../../../services/adminService\"\r\n\r\nimport ProductionOrder from './PO_Details/ProductionOrder';\r\n\r\nexport default function StyleEntry() {\r\n\r\n\tconst [show, setShow] = useState(false);\r\n\tconst handleClose = () => setShow(false);\r\n\r\n\tconst [verticalActive, setVerticalActive] = useState('tabV1');\r\n\tconst [buyerOrderRefNo, setBuyerOrderRefNo] = useState('')\r\n\tconst [buyerOrderRefNoError, setBuyerOrderRefNoError] = useState('');\r\n\tconst [season, setSeason] = useState('')\r\n\tconst [seasonError, setSeasonError] = useState('');\r\n\tconst [note, setNote] = useState('')\r\n\tconst [noteError, setNoteError] = useState('');\r\n\tconst [productType, setProductType] = useState('')\r\n\tconst [productTypeError, setProductTypeError] = useState('');\r\n\tconst [gender, setGender] = useState('')\r\n\tconst [genderError, setGenderError] = useState('');\r\n\tconst [marchantName, setMarchantName] = useState('')\r\n\tconst [marchantNameError, setMarchantNameError] = useState('');\r\n\tconst [styleNo, setStyleNo] = useState('')\r\n\tconst [StyleNoError, setStyleNoError] = useState('');\r\n\tconst [styleDescription, setStyleDescription] = useState('')\r\n\tconst [styleDescriptionError, setStyleDescriptionError] = useState('');\r\n\tconst [sizeGrid, setSizeGrid] = useState('')\r\n\tconst [sizeGridError, setSizeGridError] = useState('');\r\n\tconst [marchantContact, setMarchantContact] = useState('')\r\n\tconst [marchantContactError, setMarchantContactError] = useState('');\r\n\tconst [buyer, setBuyer] = useState('');\r\n\tconst [buyerList, setBuyerList] = useState([]);\r\n\tconst [genderList, setGenderList] = useState([]);\r\n\tconst [sizeGridList, setSizeGridList] = useState([]);\r\n\tconst [seasonList, setSeasonList] = useState([]);\r\n\tconst [nextStyleNumber, setNextStyleNumber] = useState([]);\r\n\tconst [productTypeList, setProductTypeList] = useState([]);\r\n\tconst [data, setData] = useState([]);\r\n\tconst [isEditFormOpen, setIsEditFormOpen] = useState(false);\r\n\tconst [styleId, setStyleEntryId] = useState(\"\");\r\n\r\n\tconst [base64Images, setBase64Images] = useState([]);\r\n    const [currentIndex, setCurrentIndex] = useState(0);\r\n    const [imageUploadError, setImageUploadError] = useState(null);\r\n\r\n\r\n\tconst handleVerticalClick = (value) => {\r\n\t\tif (value === verticalActive) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tsetVerticalActive(value);\r\n\t};\r\n\r\n\tconst handleImageUpload = (event) => {\r\n\t\tconst files = event.target.files;\r\n\t\tconst totalFiles = files.length + base64Images.length; // Calculate total number of files after upload\r\n\t\r\n\t\tif (totalFiles > 6) {\r\n\t\t\tsetImageUploadError(\"You can only upload a maximum of 6 images.\");\r\n\t\t\treturn;\r\n\t\t}\r\n\t\r\n\t\t// Reset error if it was previously set\r\n\t\tsetImageUploadError(null);\r\n\t\r\n\t\t// Array to store base64 encoded images\r\n\t\tconst base64ImagesArray = [...base64Images]; // Copy existing images\r\n\t\r\n\t\t// Iterate through each selected file\r\n\t\tfor (let i = 0; i < files.length; i++) {\r\n\t\t\tconst reader = new FileReader();\r\n\t\t\tconst file = files[i];\r\n\t\r\n\t\t\t// Closure to capture the file information\r\n\t\t\treader.onload = (e) => {\r\n\t\t\t\tconst base64Image = e.target.result;\r\n\t\t\t\tbase64ImagesArray.push(base64Image);\r\n\t\r\n\t\t\t\t// Check if all images are processed\r\n\t\t\t\tif (base64ImagesArray.length === totalFiles) {\r\n\t\t\t\t\t// All images are converted to base64\r\n\t\t\t\t\t// Now you can save base64ImagesArray to your state\r\n\t\t\t\t\tsetBase64Images(base64ImagesArray);\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\r\n\t\t\t// Read the image file as a data URL\r\n\t\t\treader.readAsDataURL(file);\r\n\t\t}\r\n\t};\r\n\r\n    const handleNext = () => {\r\n        setCurrentIndex((prevIndex) => (prevIndex === base64Images.length - 1 ? 0 : prevIndex + 1));\r\n    };\r\n\r\n    const handlePrevious = () => {\r\n        setCurrentIndex((prevIndex) => (prevIndex === 0 ? base64Images.length - 1 : prevIndex - 1));\r\n    };\r\n\r\n\tconst handleDeleteImage = (indexToDelete, event) => {\r\n\t\tevent.preventDefault(); // Prevent default form submission\r\n\t\r\n\t\t// Clear file input value\r\n\t\tconst fileInput = document.getElementById('imageUpload');\r\n\t\tfileInput.value = ''; \r\n\t\r\n\t\t// Filter out the image at the specified index\r\n\t\tconst updatedImages = base64Images.filter((_, index) => index !== indexToDelete);\r\n\t\tsetBase64Images(updatedImages);\r\n\t};\r\n\t\r\n\t\r\n\tconst handleStyleEntry = (e) => {\r\n\t\te.preventDefault();\r\n\t\tlet isValid = true;\r\n\r\n\t\tif (!buyerOrderRefNo) {\r\n\t\t\tsetBuyerOrderRefNoError('Buyer Order Ref. No. is required');\r\n\t\t\tisValid = false;\r\n\t\t} else if (/[^a-zA-Z0-9]/.test(buyerOrderRefNo)) {\r\n\t\t\tsetBuyerOrderRefNoError('Short Name cannot contain spaces or special characters');\r\n\t\t\tisValid = false;\r\n\t\t} else {\r\n\t\t\tsetBuyerOrderRefNoError('');\r\n\t\t}\r\n\r\n\t\tif (!season) {\r\n\t\t\tsetSeasonError('Season is required');\r\n\t\t\tisValid = false;\r\n\t\t} else {\r\n\t\t\tsetSeasonError('');\r\n\t\t}\r\n\r\n\t\tif (!productType) {\r\n\t\t\tsetProductTypeError('Product Type is required');\r\n\t\t\tisValid = false;\r\n\t\t} else {\r\n\t\t\tsetProductTypeError('');\r\n\t\t}\r\n\r\n\t\tif (!gender) {\r\n\t\t\tsetGenderError('Gender is required');\r\n\t\t\tisValid = false;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tsetGenderError('');\r\n\t\t}\r\n\r\n\t\tif (!marchantName) {\r\n\t\t\tsetMarchantNameError('Merchant Name is required');\r\n\t\t\tisValid = false;\r\n\t\t} else if (!/^[a-zA-Z0-9 ]+$/.test(marchantName)) {\r\n\t\t\tsetMarchantNameError('Merchant Name must contain only alphanumeric characters and spaces');\r\n\t\t\tisValid = false;\r\n\t\t} else {\r\n\t\t\tsetMarchantNameError('');\r\n\t\t}\r\n\t\t\r\n\r\n\t\tif (!styleDescription) {\r\n\t\t\tsetStyleDescriptionError('Buyer Style No is required');\r\n\t\t\tisValid = false;\r\n\t\t} else {\r\n\t\t\tsetStyleDescriptionError('');\r\n\t\t}\r\n\r\n\t\tif (!sizeGrid) {\r\n\t\t\tsetSizeGridError('Size Grid is required');\r\n\t\t\tisValid = false;\r\n\t\t} else {\r\n\t\t\tsetSizeGridError('');\r\n\t\t}\r\n\t\t\r\n\r\n\t\tif (!marchantContact) {\r\n\t\t\tsetMarchantContactError('Mail id is required');\r\n\t\t\tisValid = false;\r\n\t\t} else if (!/^[6789]\\d{9}$/.test(marchantContact)) {\r\n\t\t\tsetMarchantContactError('Please enter a valid 10-digit Indian mobile number');\r\n\t\t\tisValid = false;\r\n\t\t} else {\r\n\t\t\tsetMarchantContactError('');\r\n\t\t}\r\n\r\n\t\tif (!isValid) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tlet payload = {\r\n\t\t\t\"Buyer_Group_Id\": buyer,\r\n\t\t\t\"Buyer_Order_Ref_No\": buyerOrderRefNo,\r\n\t\t\t\"Season\": season,\r\n\t\t\t\"Product_Type\": productType,\r\n\t\t\t\"Gender\": gender,\r\n\t\t\t\"Marchent_Name\": marchantName,\r\n\t\t\t\"Style_Description\": styleDescription,\r\n\t\t\t\"Size_Grid\": sizeGrid,\r\n\t\t\t\"Marchent_Contact\": marchantContact,\r\n\t\t\t\"Note\":note,\r\n\t\t\t\"Style_Images\" : JSON.stringify(base64Images)\r\n\t\t}\r\n\r\n\t\ttrackPromise(styleStoreService.saveStyleEntry({ \"data\": [payload] }).then((response) => {\r\n\t\t\t//check login response\r\n\t\t\tif (response.status === 200 && response.data.data.status == \"success\") {\r\n\t\t\t\t// alert(response.data.result);\r\n\t\t\t\tstateValues()\r\n\t\t\t\tgetStyleEntryData()\r\n\t\t\t\thandleClose()\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\talert(response.data.data.result);\r\n\t\t\t}\r\n\r\n\t\t}).catch((error) => {\r\n\t\t\t//console.log(error.response.data.error)\r\n\t\t\talert(error.response.data.error);\r\n\t\t})\r\n\t\t);\r\n\r\n\t}\r\n\tconst getStyleEntryData = () => {\r\n\t\ttrackPromise(\r\n\t\t\tstyleStoreService.getStyleEntry().then((response) => {\r\n\t\t\t\tsetData(response.data.Style_Entry)\r\n\t\t\t})\r\n\t\t);\r\n\t}\r\n\r\n\tconst getBasicDetails = () => {\r\n        trackPromise(\r\n            adminService.getBasicDetails().then((response) => {\r\n                setBuyerList(response.data[0].data[0].data.buyer);\r\n\t\t\t\tsetGenderList(response.data[0].data[0].data.gender)\r\n\t\t\t\tsetSizeGridList(response.data[0].data[0].data.sizeGrid)\r\n\t\t\t\tsetProductTypeList(response.data[0].data[0].data.productType)\r\n\t\t\t\tsetSeasonList(response.data[0].data[0].data.season)\r\n\t\t\t\tsetNextStyleNumber(response.data[0].data[0].data.nextStyleNumber[0].Next_Style_No)\r\n\r\n            })\r\n        );\r\n    }\r\n\r\n\tuseEffect(() => {\r\n\t\tgetBasicDetails();\r\n\t\tgetStyleEntryData()\r\n\t}, [])\r\n\r\n\r\n\tfunction stateValues() {\r\n\r\n\t\tsetSeasonError('');\r\n\t\tsetNoteError('');\r\n\t\tsetProductTypeError('');\r\n\t\tsetGenderError('');\r\n\t\tsetMarchantNameError('');\r\n\t\tsetStyleNoError('');\r\n\t\tsetStyleDescriptionError('');\r\n\t\tsetSizeGridError('');\r\n\t\tsetMarchantContactError('');\r\n\t\tsetBuyerOrderRefNo('')\r\n\t\tsetSeason('')\r\n\t\tsetNote('')\r\n\t\tsetProductType('')\r\n\t\tsetGender('')\r\n\t\tsetMarchantName('')\r\n\t\tsetStyleNo('')\r\n\t\tsetStyleEntryId('')\r\n\t\tsetStyleDescription('')\r\n\t\tsetBuyer('')\r\n\t\tsetSizeGrid('')\r\n\t\tsetMarchantContact('')\r\n\t\tsetBase64Images([])\r\n\t}\r\n\r\n\tuseEffect((\r\n\r\n\t) => { }, [])\r\n\r\n\r\n\tconst iconActionHandler = (cell, row, rowIndex) => {\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<i className=\"fas fa-edit action-icon\" title=\"Edit\" > </i>\r\n\t\t\t</>\r\n\t\t);\r\n\t};\r\n\tconst openEditForm = (data) => {\r\n        editFormDetails(data)\r\n        setIsEditFormOpen(true);\r\n    };\r\n\tfunction editFormDetails(data) {\r\n\r\n\t\tsetSeasonError('');\r\n\t\tsetNoteError('');\r\n\t\tsetProductTypeError('');\r\n\t\tsetGenderError('');\r\n\t\tsetMarchantNameError('');\r\n\t\tsetStyleNoError('');\r\n\t\tsetStyleDescriptionError('');\r\n\t\tsetSizeGridError('');\r\n\t\tsetMarchantContactError('');\r\n\t\tsetBuyerOrderRefNo(data.Buyer_Order_Ref_No)\r\n\t\tsetSeason(data.Season)\r\n\t\tsetNote(data.Note)\r\n\t\tsetProductType(data.Product_Type)\r\n\t\tsetGender(data.Gender)\r\n\t\tsetMarchantName(data.Marchent_Name)\r\n\t\tsetStyleNo(data.Style_No)\r\n\t\tsetStyleDescription(data.Style_Description)\r\n\t\tsetBuyer(data.Buyer_Group_Id)\r\n\t\tsetSizeGrid(data.Size_Grid)\r\n\t\tsetMarchantContact(data.Marchent_Contact)\r\n\t\tsetBase64Images(JSON.parse(data.Style_Images))\r\n\t}\r\n    const closeEditForm = () => {\r\n        setIsEditFormOpen(false);\r\n    };\r\n\r\n// Delete Unit Records\r\n\r\nconst deleteStyleEntry = (data) => {\r\n\tif (window.confirm(\"Are you sure to delete the Style Entry ?\"))\r\n    {\r\n\t\tlet payload = {\r\n\t\t\t\"Style_No\":data.Style_No\r\n\t\t}\r\n\t\ttrackPromise(styleStoreService.deleteStyleEntry({ \"data\": [payload] }).then((response) => {\r\n\t\t\t//check login response\r\n\t\t\tif (response.status === 200) {\r\n\t\t\t\tgetStyleEntryData()\r\n\t\t\t}\t\r\n\t\t\telse {\r\n\t\t\t\talert(response.data.message);\r\n\t\t\t}\r\n\r\n\t\t}).catch((error) => {\r\n\t\t\t//console.log(error.response.data.error)\r\n\t\t\talert(error.response.data.error);\r\n\t\t})\r\n\t\t);\r\n\t}\r\n\r\n};\r\n\r\n\tconst handleEditStyleEntry  = (e) => {\r\n\r\n\t\te.preventDefault();\r\n\t\tlet isValid = true;\r\n\r\n\t\tif (!buyerOrderRefNo) {\r\n\t\t\tsetBuyerOrderRefNoError('Buyer Order Ref. No. is required');\r\n\t\t\tisValid = false;\r\n\t\t} else if (/[^a-zA-Z0-9]/.test(buyerOrderRefNo)) {\r\n\t\t\tsetBuyerOrderRefNoError('Short Name cannot contain spaces or special characters');\r\n\t\t\tisValid = false;\r\n\t\t} else {\r\n\t\t\tsetBuyerOrderRefNoError('');\r\n\t\t}\r\n\r\n\t\tif (!season) {\r\n\t\t\tsetSeasonError('Season is required');\r\n\t\t\tisValid = false;\r\n\t\t} else {\r\n\t\t\tsetSeasonError('');\r\n\t\t}\r\n\r\n\t\tif (!productType) {\r\n\t\t\tsetProductTypeError('Product Type is required');\r\n\t\t\tisValid = false;\r\n\t\t} else {\r\n\t\t\tsetProductTypeError('');\r\n\t\t}\r\n\r\n\t\tif (!gender) {\r\n\t\t\tsetGenderError('Gender is required');\r\n\t\t\tisValid = false;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tsetGenderError('');\r\n\t\t}\r\n\r\n\t\tif (!marchantName) {\r\n\t\t\tsetMarchantNameError('Merchant Name is required');\r\n\t\t\tisValid = false;\r\n\t\t} else if (!/^[a-zA-Z0-9 ]+$/.test(marchantName)) {\r\n\t\t\tsetMarchantNameError('Merchant Name must contain only alphanumeric characters and spaces');\r\n\t\t\tisValid = false;\r\n\t\t} else {\r\n\t\t\tsetMarchantNameError('');\r\n\t\t}\r\n\t\t\r\n\r\n\t\tif (!styleDescription) {\r\n\t\t\tsetStyleDescriptionError('Buyer Style No is required');\r\n\t\t\tisValid = false;\r\n\t\t} else {\r\n\t\t\tsetStyleDescriptionError('');\r\n\t\t}\r\n\r\n\t\tif (!sizeGrid) {\r\n\t\t\tsetSizeGridError('Size Grid is required');\r\n\t\t\tisValid = false;\r\n\t\t} else {\r\n\t\t\tsetSizeGridError('');\r\n\t\t}\r\n\t\t\r\n\r\n\t\tif (!marchantContact) {\r\n\t\t\tsetMarchantContactError('Mail id is required');\r\n\t\t\tisValid = false;\r\n\t\t} else if (!/^[6789]\\d{9}$/.test(marchantContact)) {\r\n\t\t\tsetMarchantContactError('Please enter a valid 10-digit Indian mobile number');\r\n\t\t\tisValid = false;\r\n\t\t} else {\r\n\t\t\tsetMarchantContactError('');\r\n\t\t}\r\n\t\t\r\n\r\n\t\tif (!isValid) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tlet payload = {\r\n\t\t\t\"Buyer_Group_Id\": buyer,\r\n\t\t\t\"Buyer_Order_Ref_No\": buyerOrderRefNo,\r\n\t\t\t\"Season\": season,\r\n\t\t\t\"Product_Type\": productType,\r\n\t\t\t\"Gender\": gender,\r\n\t\t\t\"Marchent_Name\": marchantName,\r\n\t\t\t\"Style_No\": styleNo,\r\n\t\t\t\"Style_Description\": styleDescription,\r\n\t\t\t\"Size_Grid\": sizeGrid,\r\n\t\t\t\"Marchent_Contact\": marchantContact,\r\n\t\t\t\"Note\":note,\r\n\t\t\t\"Style_Images\" : JSON.stringify(base64Images)\r\n\t\t}\r\n\r\n\t\ttrackPromise(styleStoreService.editStyleEntry({ \"data\": [payload] }).then((response) => {\r\n\t\t\t//check login response\r\n\t\t\tif (response.status === 200 && response.data.data.status == \"success\") {\r\n\t\t\t\t// alert(response.data.result)\r\n\t\t\t\tgetStyleEntryData()\r\n\t\t\t\tcloseEditForm()\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\talert(response.data.data.result);\r\n\t\t\t}\r\n\r\n\t\t}).catch((error) => {\r\n\t\t\t//console.log(error.response.data.error)\r\n\t\t\talert(error.response.data.error);\r\n\t\t})\r\n\t\t);\r\n\r\n\t}\r\n\r\n\treturn <>\r\n\t\t\t<MDBCol size='1' style={{ width : \"13%\" }} className='no-pad-right'>\r\n\t\t\t\t<MDBTabs className='flex-column text-center vertical-tab'>\r\n\t\t\t\t\t<MDBTabsItem className=\"vertical-link\">\r\n\t\t\t\t\t\t<MDBTabsLink onClick={() => handleVerticalClick('tabV1')} active={verticalActive === 'tabV1'}>\r\n\t\t\t\t\t\t\tStyle Details\r\n\t\t\t\t\t\t</MDBTabsLink>\r\n\t\t\t\t\t</MDBTabsItem>\r\n\r\n\t\t\t\t\t<MDBTabsItem className=\"vertical-link\">\r\n\t\t\t\t\t\t<MDBTabsLink onClick={() => handleVerticalClick('tabV2')} active={verticalActive === 'tabV2'}>\r\n\t\t\t\t\t\t\tOrder Details\r\n\t\t\t\t\t\t</MDBTabsLink>\r\n\t\t\t\t\t</MDBTabsItem>\r\n\r\n\t\t\t\t</MDBTabs>\r\n\t\t\t</MDBCol>\r\n\t\t\t<MDBCol size='11' style={{ width : \"87%\" }} className='no-pad-left'>\r\n\t\t\t\t<MDBTabsContent className='unit-tab-content'>\r\n\t\t\t\t\t<MDBTabsPane show={verticalActive === 'tabV1'}>\r\n\t\t\t\t\t\t<div className='row'>\r\n\t\t\t\t\t\t\t<div className='col-8'>\r\n\t\t\t\t\t\t\t\t<h1 className='h1'> Style Details </h1>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className='col-4 text-right'>\r\n\t\t\t\t\t\t\t\t<Button className='primary-btn mt-10' onClick={() => {setShow(true);stateValues() }}>\r\n\t\t\t\t\t\t\t\t<i className='fa fa-plus fa-white'> </i> New Style \r\n\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t<Modal\r\n\t\t\t\t\t\t\t\t\tshow={show}\r\n\t\t\t\t\t\t\t\t\tonHide={() => setShow(false)}\r\n\t\t\t\t\t\t\t\t\tdialogClassName=\"modal-90w\"\r\n\t\t\t\t\t\t\t\t\tbackdrop=\"static\"\r\n\t\t\t\t\t\t\t\t\tkeyboard={false}>\r\n\r\n\t\t\t\t\t\t\t\t\t<Modal.Header closeButton>\r\n\t\t\t\t\t\t\t\t\t\t<Modal.Title> Add New Style  </Modal.Title>\r\n\t\t\t\t\t\t\t\t\t</Modal.Header>\r\n\t\t\t\t\t\t\t\t\t<Modal.Body>\r\n\t\t\t\t\t\t\t\t\t\t<form onSubmit={handleStyleEntry}>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='row'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className='col-3'>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Form.Select className='mb-3' tabindex=\"1\" label='Buyer' onChange={(e) => { setBuyer(e.target.value) }} value={buyer} name='Buyer'>\r\n                                                        <option> Select Buyer </option>\r\n                                                        {buyerList.map((item) => (\r\n                                                            <option key={item.Buyer_Id} value={item.Buyer_Id}>\r\n                                                                {item.Buyer_Name}\r\n                                                            </option>\r\n                                                        ))}\r\n                                                    </Form.Select>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <MDBInput label='Style No' readonly type='text' tabindex=\"3\" wrapperClass='mb-3' value={nextStyleNumber} name='styleNo' />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{StyleNoError && <p style={{ color: 'red' }}>{StyleNoError}</p>}\r\n\t\t\t\t\t\t\t\t\t\t\t */}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Form.Select className='mb-3' tabindex=\"1\" label='Product Type' onChange={(e) => { setProductType(e.target.value) }} value={productType} name='productType'>\r\n                                                        <option> Select Product Type </option>\r\n                                                        {productTypeList.map((item) => (\r\n                                                            <option key={item.id} value={item.Product_Type}>\r\n                                                                {item.Product_Type}\r\n                                                            </option>\r\n                                                        ))}\r\n                                                    </Form.Select>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{productTypeError && <p style={{ color: 'red' }}>{productTypeError}</p>}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Form.Select className='mb-3' tabindex=\"1\" label='Gender' onChange={(e) => { setGender(e.target.value) }} value={gender} name='gender'>\r\n                                                        <option> Select Gender </option>\r\n                                                        {genderList.map((item) => (\r\n                                                            <option key={item.id} value={item.Gender}>\r\n                                                                {item.Gender}\r\n                                                            </option>\r\n                                                        ))}\r\n                                                    </Form.Select>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{genderError && <p style={{ color: 'red' }}>{genderError}</p>}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<MDBInput wrapperClass='mb-3' tabindex=\"9\" type='text' label='Merchant Name' onChange={(e) => { setMarchantName(e.target.value) }} value={marchantName} name='marchantName' />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{marchantNameError && <p style={{ color: 'red' }}>{marchantNameError}</p>}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<MDBInput wrapperClass='mb-3' type='text' tabindex=\"2\" label='Buyer Order Ref. No.' onChange={(e) => { setBuyerOrderRefNo(e.target.value) }} value={buyerOrderRefNo} name='buyerOrderRefNo' />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{buyerOrderRefNoError && <p style={{ color: 'red' }}>{buyerOrderRefNoError}</p>}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className='col-3'>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<MDBInput wrapperClass='mb-3' tabindex=\"4\" type='text' label='Buyer Style No.' onChange={(e) => { setStyleDescription(e.target.value) }} value={styleDescription} name='styleDescription' />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{styleDescriptionError && <p style={{ color: 'red' }}>{styleDescriptionError}</p>}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Form.Select className='mb-3' tabindex=\"1\" label='Size Grid' onChange={(e) => { setSizeGrid(e.target.value) }} value={sizeGrid} name='sizeGrid'>\r\n                                                        <option> Select Size Grid </option>\r\n                                                        {sizeGridList.map((item) => (\r\n                                                            <option key={item.Size_Grid_Id} value={item.Size_Grid_Id}>\r\n                                                                {item.Size_Grid_Name}\r\n                                                            </option>\r\n                                                        ))}\r\n                                                    </Form.Select>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{sizeGridError && <p style={{ color: 'red' }}>{sizeGridError}</p>}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Form.Select className='mb-3' tabindex=\"1\" label='Season' onChange={(e) => { setSeason(e.target.value) }} value={season} name='season'>\r\n                                                        <option> Select Season </option>\r\n                                                        {seasonList.map((item) => (\r\n                                                            <option key={item.id} value={item.Season_Name}>\r\n                                                                {item.Season_Name}\r\n                                                            </option>\r\n                                                        ))}\r\n                                                    </Form.Select>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{seasonError && <p style={{ color: 'red' }}>{seasonError}</p>}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<MDBInput wrapperClass='mb-3' type='number' tabindex=\"10\" label='Merchant Contact No.' onChange={(e) => { setMarchantContact(e.target.value) }} value={marchantContact} name='marchantContact' />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{marchantContactError && <p style={{ color: 'red' }}>{marchantContactError}</p>}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<MDBInput wrapperClass='mb-3' label='Notes' type='textarea' tabindex=\"12\"  onChange={(e) => { setNote(e.target.value) }} value={note} name='note' />\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className='col-6'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"mb-3\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<label for=\"imageUpload\" class=\"attach-image-button\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i class=\"fa fa-paperclip\" aria-hidden=\"true\"></i> Images (Max 6)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"file\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid=\"imageUpload\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\taccept=\"image/*\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmultiple\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleImageUpload}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{display: 'none'}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{imageUploadError && <p style={{ color: 'red' }}>{imageUploadError}</p>}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* Thumbnail List */}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div style={{ display: 'flex', justifyContent: 'center', marginTop: '20px' }}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{base64Images.map((image, index) => (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div key={index} style={{ position: 'relative' }}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsrc={image}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\talt={`Thumbnail ${index + 1}`}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ width: '80px', height: '80px', borderRadius: '5px', margin: '0 5px', cursor: 'pointer' }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => setCurrentIndex(index)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={index === currentIndex ? 'active' : ''}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={(event) => handleDeleteImage(index, event)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ position: 'absolute', top: '5px', right: '5px', background: 'transparent', border: 'none', cursor: 'pointer' }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fa fa-trash\" style={{ color: 'red', position: 'absolute',  top: '-10px', right: '-10px' }}></i>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</button>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</form>\r\n\r\n\t\t\t\t\t\t\t\t\t</Modal.Body>\r\n\t\t\t\t\t\t\t\t\t<Modal.Footer>\r\n\t\t\t\t\t\t\t\t\t\t<Button variant=\"secondary\" onClick={handleClose} style={{ width: '15%' }} >\r\n\t\t\t\t\t\t\t\t\t\t\tCancel\r\n\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t\t<Button variant=\"primary\" type='submit' onClick={handleStyleEntry}  style={{ width: '15%' }}>\r\n\t\t\t\t\t\t\t\t\t\t\tSave\r\n\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t</Modal.Footer>\r\n\t\t\t\t\t\t\t\t</Modal>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className='col-12'>\r\n\r\n\t\t\t\t\t\t\t\t<StyleEntryTable defaultPageSize={10} data={data} openEditForm={openEditForm} deleteStyleEntry = {deleteStyleEntry} />\r\n\r\n\t\t\t\t\t\t\t\t<Modal show={isEditFormOpen} onHide={closeEditForm} dialogClassName=\"modal-90w\"\r\n\t\t\t\t\t\t\t\t\tbackdrop=\"static\">\r\n\t\t\t\t\t\t\t\t\t<Modal.Header closeButton>\r\n\t\t\t\t\t\t\t\t\t\t<Modal.Title>Edit Style Entry </Modal.Title>\r\n\t\t\t\t\t\t\t\t\t</Modal.Header>\r\n\t\t\t\t\t\t\t\t\t<Modal.Body>\r\n\t\t\t\t\t\t\t\t\t\t<form onSubmit={handleEditStyleEntry}>\r\n\t\t\t\t\t\t\t\t\t\t<div className='row'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className='col-3'>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Form.Select className='mb-3' tabindex=\"1\" label='Buyer' onChange={(e) => { setBuyer(e.target.value) }} value={buyer} name='Buyer'>\r\n                                                        <option> Select Buyer </option>\r\n                                                        {buyerList.map((item) => (\r\n                                                            <option key={item.Buyer_Id} value={item.Buyer_Id}>\r\n                                                                {item.Buyer_Name}\r\n                                                            </option>\r\n                                                        ))}\r\n                                                    </Form.Select>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <MDBInput label='Style No' readonly type='text' tabindex=\"3\" wrapperClass='mb-3' value={nextStyleNumber} name='styleNo' />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{StyleNoError && <p style={{ color: 'red' }}>{StyleNoError}</p>}\r\n\t\t\t\t\t\t\t\t\t\t\t */}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Form.Select className='mb-3' tabindex=\"1\" label='Product Type' onChange={(e) => { setProductType(e.target.value) }} value={productType} name='productType'>\r\n                                                        <option> Select Product Type </option>\r\n                                                        {productTypeList.map((item) => (\r\n                                                            <option key={item.id} value={item.Product_Type}>\r\n                                                                {item.Product_Type}\r\n                                                            </option>\r\n                                                        ))}\r\n                                                    </Form.Select>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{productTypeError && <p style={{ color: 'red' }}>{productTypeError}</p>}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Form.Select className='mb-3' tabindex=\"1\" label='Gender' onChange={(e) => { setGender(e.target.value) }} value={gender} name='gender'>\r\n                                                        <option> Select Gender </option>\r\n                                                        {genderList.map((item) => (\r\n                                                            <option key={item.id} value={item.Gender}>\r\n                                                                {item.Gender}\r\n                                                            </option>\r\n                                                        ))}\r\n                                                    </Form.Select>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{genderError && <p style={{ color: 'red' }}>{genderError}</p>}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<MDBInput wrapperClass='mb-3' tabindex=\"9\" type='text' label='Merchant Name' onChange={(e) => { setMarchantName(e.target.value) }} value={marchantName} name='marchantName' />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{marchantNameError && <p style={{ color: 'red' }}>{marchantNameError}</p>}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<MDBInput wrapperClass='mb-3' type='text' tabindex=\"2\" label='Buyer Order Ref. No.' onChange={(e) => { setBuyerOrderRefNo(e.target.value) }} value={buyerOrderRefNo} name='buyerOrderRefNo' />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{buyerOrderRefNoError && <p style={{ color: 'red' }}>{buyerOrderRefNoError}</p>}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className='col-3'>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<MDBInput wrapperClass='mb-3' tabindex=\"4\" type='text' label='Buyer Style No.' onChange={(e) => { setStyleDescription(e.target.value) }} value={styleDescription} name='styleDescription' />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{styleDescriptionError && <p style={{ color: 'red' }}>{styleDescriptionError}</p>}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Form.Select className='mb-3' tabindex=\"1\" label='Size Grid' onChange={(e) => { setSizeGrid(e.target.value) }} value={sizeGrid} name='sizeGrid'>\r\n                                                        <option> Select Size Grid </option>\r\n                                                        {sizeGridList.map((item) => (\r\n                                                            <option key={item.Size_Grid_Id} value={item.Size_Grid_Id}>\r\n                                                                {item.Size_Grid_Name}\r\n                                                            </option>\r\n                                                        ))}\r\n                                                    </Form.Select>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{sizeGridError && <p style={{ color: 'red' }}>{sizeGridError}</p>}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Form.Select className='mb-3' tabindex=\"1\" label='Season' onChange={(e) => { setSeason(e.target.value) }} value={season} name='season'>\r\n                                                        <option> Select Season </option>\r\n                                                        {seasonList.map((item) => (\r\n                                                            <option key={item.id} value={item.Season_Name}>\r\n                                                                {item.Season_Name}\r\n                                                            </option>\r\n                                                        ))}\r\n                                                    </Form.Select>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{seasonError && <p style={{ color: 'red' }}>{seasonError}</p>}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<MDBInput wrapperClass='mb-3' type='number' tabindex=\"10\" label='Merchant Contact No.' onChange={(e) => { setMarchantContact(e.target.value) }} value={marchantContact} name='marchantContact' />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{marchantContactError && <p style={{ color: 'red' }}>{marchantContactError}</p>}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<MDBInput wrapperClass='mb-3' label='Notes' type='textarea' tabindex=\"12\"  onChange={(e) => { setNote(e.target.value) }} value={note} name='note' />\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className='col-6'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"mb-3\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<label for=\"imageUpload\" class=\"attach-image-button\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i class=\"fa fa-paperclip\" aria-hidden=\"true\"></i> Images (Max 6)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"file\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid=\"imageUpload\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\taccept=\"image/*\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmultiple\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleImageUpload}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{display: 'none'}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{imageUploadError && <p style={{ color: 'red' }}>{imageUploadError}</p>}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* Thumbnail List */}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div style={{ display: 'flex', justifyContent: 'center', marginTop: '20px' }}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{base64Images.map((image, index) => (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div key={index} style={{ position: 'relative' }}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsrc={image}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\talt={`Thumbnail ${index + 1}`}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ width: '80px', height: '80px', borderRadius: '5px', margin: '0 5px', cursor: 'pointer' }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => setCurrentIndex(index)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={index === currentIndex ? 'active' : ''}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={(event) => handleDeleteImage(index, event)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ position: 'absolute', top: '5px', right: '5px', background: 'transparent', border: 'none', cursor: 'pointer' }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fa fa-trash\" style={{ color: 'red', position: 'absolute',  top: '-10px', right: '-10px' }}></i>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</button>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</form>\r\n\t\t\t\t\t\t\t\t\t</Modal.Body>\r\n\t\t\t\t\t\t\t\t\t<Modal.Footer>\r\n                                        <Button variant=\"secondary\" onClick={closeEditForm} style={{ width: '15%' }}>\r\n                                            Cancel\r\n                                        </Button>\r\n                                        <Button variant=\"primary\" onClick={handleEditStyleEntry} style={{ width: '15%' }}>\r\n                                            Save\r\n                                        </Button>\r\n                                    </Modal.Footer>\r\n\t\t\t\t\t\t\t\t</Modal>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</MDBTabsPane>\r\n\r\n\t\t\t\t\t<MDBTabsPane show={verticalActive === 'tabV2'}>\r\n\t\t\t\t\t\t<ProductionOrder />\r\n\t\t\t\t\t</MDBTabsPane>\r\n\t\t\t\t</MDBTabsContent>\r\n\t\t\t</MDBCol>\r\n\r\n\t</>\r\n}","import React from 'react';\r\nimport { useTable } from 'react-table';\r\n\r\nexport default function StyleLookupTable(props) {\r\n    const data = props.data;\r\n\r\n    const columns = React.useMemo(\r\n        () => [\r\n            {\r\n                Header: 'Images',\r\n                accessor: 'Style_Images',\r\n                Cell: ({ row }) => {\r\n                    const firstImage = JSON.parse(row.original.Style_Images)[0];\r\n                    return (\r\n                        <div>\r\n                            <img\r\n                                src={firstImage}\r\n                                alt=\"First Thumbnail\"\r\n                                style={{ width: '25px', height: '25px', marginRight: '5px' }}\r\n                            />\r\n                        </div>\r\n                    );\r\n                },\r\n            },\r\n            {\r\n                Header: 'Buyer',\r\n                accessor: 'Buyer_Name',\r\n            },\r\n            {\r\n                Header: 'Style No.',\r\n                accessor: 'Style_No',\r\n            },\r\n            {\r\n                Header: 'Description',\r\n                accessor: 'Style_Description',\r\n            },\r\n            {\r\n                Header: 'Product Type',\r\n                accessor: 'Product_Type',\r\n            },\r\n            {\r\n                Header: 'Gender',\r\n                accessor: 'Gender',\r\n            },\r\n            {\r\n                Header: 'PO No',\r\n                accessor: 'PO_No',\r\n            },\r\n            // New columns for color and order quantity\r\n\t\t\t{\r\n\t\t\t\tHeader: 'Color',\r\n\t\t\t\taccessor: row => {\r\n\t\t\t\t\tif (row && row.Garment_Data) {\r\n\t\t\t\t\t\tconst garmentData = JSON.parse(row.Garment_Data);\r\n\t\t\t\t\t\tif (garmentData.length > 0) {\r\n\t\t\t\t\t\t\treturn garmentData.map((color, index) => (\r\n\t\t\t\t\t\t\t\t<ul key={index} className='ul-table'>\r\n\t\t\t\t\t\t\t\t\t<li style={{ border: '0px solid #d1cece', textAlign: 'center' }}>{color.garmentColor}</li>\r\n\t\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn ''; // Return an empty string if Garment_Data is undefined, null, or empty\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tHeader: 'Order Qty',\r\n\t\t\t\taccessor: row => {\r\n\t\t\t\t\tif (row && row.Garment_Data) {\r\n\t\t\t\t\t\tconst garmentData = JSON.parse(row.Garment_Data);\r\n\t\t\t\t\t\tif (garmentData.length > 0) {\r\n\t\t\t\t\t\t\treturn garmentData.map((qty, index) => (\r\n\t\t\t\t\t\t\t\t<ul key={index} className='ul-table'>\r\n\t\t\t\t\t\t\t\t\t<li style={{ border: '1px solid #d1cece', textAlign: 'center'}}>{qty.total}</li>\r\n\t\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn ''; // Return an empty string if Garment_Data is undefined, null, or empty\r\n\t\t\t\t},\r\n\t\t\t},\r\n            {\r\n                Header: 'Total',\r\n                accessor: (row) => {\r\n                    if (row && row.Garment_Data) {\r\n                        const garmentData = JSON.parse(row.Garment_Data);\r\n                        if (garmentData.length > 0) {\r\n                            // Calculate the total quantity for each style\r\n                            let totalQty = 0;\r\n                            garmentData.forEach((garment) => {\r\n                                totalQty += parseInt(garment.total);\r\n                            });\r\n                            return totalQty;\r\n                        }\r\n                    }\r\n                    return ''; // Return an empty string if Garment_Data is undefined, null, or empty\r\n                },\r\n            },\r\n            {\r\n                Header: 'Delivery Date',\r\n                accessor: 'Delivery_Date',\r\n            },\r\n            {\r\n                Header: 'Merchant Name',\r\n                accessor: 'Marchent_Name',\r\n            }                           \r\n        ],\r\n        []\r\n    );\r\n\r\n    const {\r\n        getTableProps,\r\n        getTableBodyProps,\r\n        headerGroups,\r\n        rows,\r\n        prepareRow,\r\n    } = useTable({\r\n        columns,\r\n        data,\r\n    });\r\n\r\n    return (\r\n        <div className='mt-4'>\r\n            <table {...getTableProps()} className=\"table table-lookup striped\" striped>\r\n                <thead>\r\n                    {headerGroups.map((headerGroup) => (\r\n                        <tr {...headerGroup.getHeaderGroupProps()}>\r\n                            {headerGroup.headers.map((column) => (\r\n                                <th {...column.getHeaderProps()}>{column.render('Header')}</th>\r\n                            ))}\r\n                        </tr>\r\n                    ))}\r\n                </thead>\r\n                <tbody {...getTableBodyProps()}>\r\n                    {rows.map((row) => {\r\n                        prepareRow(row);\r\n                        return (\r\n                            <tr {...row.getRowProps()}>\r\n                                {row.cells.map((cell) => {\r\n                                    return (\r\n                                        <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\r\n                                    );\r\n                                })}\r\n                            </tr>\r\n                        );\r\n                    })}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n}\r\n","/**\r\n * owner : \r\n * author :\r\n */\r\n\r\nimport { useEffect, useState } from 'react';\r\n\r\nimport './StyleLookup.scss';\r\n\r\n\r\nimport styleStoreService from \"../../../../services/styleStoreService\";\r\nimport { trackPromise } from 'react-promise-tracker';\r\nimport StyleLookupTable from './StyleLookupTable';\r\n\r\nexport default function StyleLookup() {\r\n\r\n\tconst [data, setData] = useState([]);\r\n\t\r\n\tconst getStyleLookupData = () => {\r\n\t\ttrackPromise(\r\n\t\t\tstyleStoreService.getStyleLookupDetails().then((response) => {\r\n\t\t\t\tsetData(response.data.Style_Lookup)\r\n\t\t\t})\r\n\t\t);\r\n\t}\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tgetStyleLookupData()\r\n\t}, [])\r\n\r\n\r\n\treturn <>\r\n\t\t\t <StyleLookupTable defaultPageSize={10} data={data} />\r\n\t</>\r\n}","import React, { useState, useEffect } from \"react\";\r\n\r\nimport { TreeTable, TreeState } from 'cp-react-tree-table';\r\nimport './StyleDashboard.scss';\r\n\r\nimport styleStoreService from \"../../../../services/styleStoreService\";\r\nimport { trackPromise } from 'react-promise-tracker';\r\n\r\nconst MOCK_DATA = genData();\r\n\r\nconst StyleDashboard: React.FC = () => {\r\n  const [treeValue, setTreeValue] = useState(TreeState.create(MOCK_DATA));\r\n  const [data, setData] = useState([]);\r\n\r\n\r\n  const handleOnChange = (newValue: any) => {\r\n    setTreeValue(newValue);\r\n  };\r\n\r\n  const handleOnExpandAll = () => {\r\n    setTreeValue(TreeState.expandAll(treeValue));\r\n  };\r\n\r\n  const handleOnCollapseAll = () => {\r\n    setTreeValue(TreeState.collapseAll(treeValue));\r\n  };\r\n\r\n  const renderIndexCell = (row: any) => {\r\n    return (\r\n      <div style={{ paddingLeft: (row.metadata.depth * 15) + 'px' }}\r\n        className={row.metadata.hasChildren ? 'with-children' : 'without-children'}>        \r\n        {row.metadata.hasChildren &&\r\n          <button className=\"toggle-button\" onClick={row.toggleChildren}></button>}        \r\n        <span>{row.data.name}</span>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const renderEmployeesCell = (row: any) => {\r\n    return (\r\n      <span className=\"employees-cell\">{row.data.employees}</span>\r\n    );\r\n  };\r\n\r\n  const renderExpensesCell = (row: any) => {\r\n    return (\r\n      <span className=\"expenses-cell\">{row.data.expenses}</span>\r\n    );\r\n  };\r\n\r\n  const renderEditableCell = (row: any) => {\r\n    return (\r\n      <input type=\"text\" value={row.data.contact}\r\n        onChange={(event) => {\r\n          const newData = { ...row.data, contact: event.target.value };\r\n          row.updateData(newData);\r\n          handleOnChange(TreeState.create(MOCK_DATA)); // Update the state manually after editing\r\n        }}/>\r\n    );\r\n  };\r\n\r\n  const getStyleEntryData = () => {\r\n\t\ttrackPromise(\r\n\t\t\tstyleStoreService.getStyleEntry().then((response) => {\r\n\t\t\t\tsetData(response.data.Style_Entry)\r\n\t\t\t})\r\n\t\t);\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tgetStyleEntryData()\r\n\t}, [])\r\n\r\n  return (\r\n    <>\r\n      {/* <div className=\"controls\">\r\n        <button onClick={handleOnExpandAll}>Expand all</button>\r\n        <button onClick={handleOnCollapseAll}>Collapse all</button>\r\n      </div>\r\n\r\n      <TreeTable\r\n        value={treeValue}\r\n        onChange={handleOnChange}>\r\n        <TreeTable.Column basis=\"180px\" grow=\"0\"\r\n          renderCell={renderIndexCell}\r\n          renderHeaderCell={() => <span>Name</span>}/>\r\n        <TreeTable.Column\r\n          renderCell={renderEditableCell}\r\n          renderHeaderCell={() => <span>Contact person</span>}/>\r\n        <TreeTable.Column\r\n          renderCell={renderEmployeesCell}\r\n          renderHeaderCell={() => <span className=\"t-right\">Employees</span>}/>\r\n        <TreeTable.Column\r\n          renderCell={renderExpensesCell}\r\n          renderHeaderCell={() => <span className=\"t-right\">Expenses ($)</span>}/>\r\n      </TreeTable> */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default StyleDashboard;\r\n\r\nfunction genData() {\r\n\treturn [\r\n    {\r\n      data: { name: 'Company A', expenses: '60,000', employees: '5', contact: 'Nicholas Watson' },\r\n      height: 32,\r\n    },\r\n    {\r\n      data: { name: 'Company I', expenses: '105,000', employees: '22', contact: 'Makenzie Higgs' },\r\n      children: [\r\n        {\r\n          data: { name: 'Department 1', expenses: '75,000', employees: '18', contact: 'Florence Carter' },\r\n          children: [\r\n            {\r\n              data: { name: 'Group alpha', expenses: '25,000', employees: '8', contact: 'Doug Moss' },\r\n            },\r\n            {\r\n              data: { name: 'Group beta', expenses: '10,000', employees: '6', contact: 'Camila Devonport' },\r\n            },\r\n            {\r\n              data: { name: 'Group gamma', expenses: '40,000', employees: '4', contact: 'Violet Curtis' },\r\n            }\r\n          ],\r\n        },\r\n        {\r\n          data: { name: 'Department 2', expenses: '30,000', employees: '4', contact: 'Selena Rycroft' },\r\n          height: 32,\r\n        }\r\n      ],\r\n    },\r\n    {\r\n      data: { name: 'Company B', expenses: '70,000', employees: '5', contact: 'Dani Hopkinson' },\r\n      height: 32,\r\n    },\r\n    {\r\n      data: { name: 'Company C', expenses: '50,000', employees: '4', contact: 'Jacob Ellery' },\r\n      height: 32,\r\n    },\r\n    {\r\n      data: { name: 'Company D', expenses: '230,000', employees: '9', contact: 'Kate Stewart' },\r\n      height: 32,\r\n    },\r\n    {\r\n      data: { name: 'Company E', expenses: '310,000', employees: '8', contact: 'Louise Fall' },\r\n      height: 32,\r\n    },\r\n    {\r\n      data: { name: 'Company F', expenses: '110,000', employees: '5', contact: 'Owen Thompson' },\r\n      height: 32,\r\n    }, \r\n    {\r\n      data: { name: 'Company G', expenses: '250,000', employees: '18', contact: 'Fred Wilton' },\r\n      height: 32,\r\n    },\r\n    {\r\n      data: { name: 'Company H', expenses: '180,000', employees: '7', contact: 'William Dallas' },\r\n      height: 32,\r\n    },\r\n    {\r\n      data: { name: 'Company J', expenses: '370,000', employees: '13', contact: 'Ron Douglas' },\r\n      height: 32,\r\n    },\r\n    {\r\n      data: { name: 'Company K', expenses: '500,000', employees: '15', contact: 'Michael Jacobs' },\r\n      height: 32,\r\n    },\r\n    {\r\n      data: { name: 'Company L', expenses: '230,000', employees: '10', contact: 'Stephanie Egerton' },\r\n      height: 32,\r\n    },\r\n    {\r\n      data: { name: 'Company M', expenses: '90,000', employees: '25', contact: 'Michael Buckley' },\r\n      height: 32,\r\n    },\r\n    {\r\n      data: { name: 'Company N', expenses: '370,000', employees: '13', contact: 'Sabrina Rowlands' },\r\n      height: 32,\r\n    },\r\n    {\r\n      data: { name: 'Company O', expenses: '500,000', employees: '15', contact: 'Lana Watt' },\r\n      height: 32,\r\n    },\r\n    {\r\n      data: { name: 'Company P', expenses: '230,000', employees: '10', contact: 'Evelynn Calderwood' },\r\n      height: 32,\r\n    },\r\n    {\r\n      data: { name: 'Company Q', expenses: '90,000', employees: '25', contact: 'Jade Morley' },\r\n      height: 32,\r\n    }, \r\n  ];\r\n}\r\n","/**\r\n * owner : \r\n * author :\r\n */\r\n\r\nimport { useEffect, useState } from 'react';\r\nimport './StyleStore.scss';\r\n\r\nimport {\r\n    MDBTabs,\r\n    MDBTabsItem,\r\n    MDBTabsLink,\r\n    MDBTabsContent,\r\n    MDBTabsPane,\r\n    MDBRow\r\n} from 'mdb-react-ui-kit';\r\n\r\nimport StyleEntry from './StyleStoreLayOuts/StyleEntry';\r\n\r\nimport StyleLookup from './StyleStoreLayOuts/StyleLookup';\r\n\r\nimport StyleDashboard from './StyleStoreLayOuts/StyleDashboard';\r\n\r\n\r\nexport default function StyleStore() {\r\n\r\n    const [basicActive, setBasicActive] = useState('tab3');\r\n    const handleBasicClick = (value) => {\r\n        if (value === basicActive) {\r\n            return;\r\n        }\r\n        setBasicActive(value);\r\n    };\r\n\r\n    useEffect(() => {\r\n\r\n    }, [])\r\n\r\n    return <>\r\n        <MDBTabs className=\"admin-tab\">\r\n            <MDBTabsItem>\r\n                <MDBTabsLink  onClick={() => handleBasicClick('tab1')} active={basicActive === 'tab1'}>\r\n                    <i class=\"fa-solid fa-screwdriver-wrench\"></i> Style Dashboard\r\n                </MDBTabsLink>\r\n            </MDBTabsItem>\r\n            <MDBTabsItem>\r\n                <MDBTabsLink  onClick={() => handleBasicClick('tab2')} active={basicActive === 'tab2'}>\r\n                    <i class=\"fa-solid fa-screwdriver-wrench\"></i> Style LookUp\r\n                </MDBTabsLink>\r\n            </MDBTabsItem>\r\n            <MDBTabsItem>\r\n                <MDBTabsLink  onClick={() => handleBasicClick('tab3')} active={basicActive === 'tab3'}>\r\n                    <i class=\"fa-solid fa-screwdriver-wrench\"></i> Style Entry\r\n                </MDBTabsLink>\r\n            </MDBTabsItem>\r\n        </MDBTabs>\r\n\r\n        <MDBTabsContent className='inner-tab-content'>\r\n            <MDBTabsPane className=\"style-entry-tab\" show={basicActive === 'tab1'}>\r\n                <MDBRow>\r\n                 <StyleDashboard />\r\n                </MDBRow>\r\n            </MDBTabsPane>\r\n            <MDBTabsPane className=\"style-lookup-tab\" show={basicActive === 'tab2'}>\r\n                <MDBRow>\r\n                    <StyleLookup />\r\n                </MDBRow>\r\n            </MDBTabsPane>\r\n            <MDBTabsPane className=\"style-dashboard-tab\" show={basicActive === 'tab3'}>\r\n                <MDBRow>\r\n                    <StyleEntry />\r\n                </MDBRow>\r\n            </MDBTabsPane>\r\n        </MDBTabsContent>\r\n    </>\r\n}","/**\r\n * owner : Shree Nidhi\r\n * author :\r\n */\r\n\r\nimport {useEffect} from 'react';\r\nimport './LandingPage.scss';\r\nimport Tabs from 'react-bootstrap/Tabs';\r\nimport Tab from 'react-bootstrap/Tab';\r\n\r\nimport Administrator  from \"./LandingLayOuts/Administrator/Administrator\"\r\nimport StyleStore from \"./LandingLayOuts/StyleStore/StyleStore\"\r\nexport default function LandingPage(){   \r\n     \r\n    useEffect(()=>{\r\n\t},[])\r\n\r\nreturn <>\r\n    <div className=\"container-fluid\">\r\n        <div className='row'>\r\n            <div className='col-12'>\r\n            <Tabs defaultActiveKey=\"third\">\r\n                <Tab eventKey=\"first\" title={<span> <i className=\"fa fa-home\" /> Home </span>}>\r\n                    Home Content\r\n                </Tab>\r\n                <Tab eventKey=\"second\" title={<span> <i class=\"fa fa-table-columns\"></i> Dashboard </span>}>\r\n                    Dashboard Content\r\n                </Tab>\r\n                <Tab eventKey=\"third\" className='admin-tab' title={<span> <i class=\"fa fa-toolbox\"></i> Administrator </span>}>\r\n                    <Administrator />\r\n                </Tab>\r\n                <Tab eventKey=\"Four\" className='style-store-tab' title={<span> <i class=\"fa fa-store\"></i> Style Store </span>}>\r\n                    <StyleStore />\r\n                </Tab>\r\n                 {/*<Tab eventKey=\"Five\" title={<span> <i class=\"fa fa-shop\"></i> Fabric Store </span>}>\r\n                    Fabric Store Content\r\n                </Tab>\r\n                <Tab eventKey=\"Six\" title={<span> <i class=\"fa fa-store\"></i> Cut Stores </span>}>\r\n                    Cut Store Content\r\n                </Tab>\r\n                <Tab eventKey=\"Seven\" title={<span> <i class=\"fa fa-store\"></i> Trim Stores </span>}>\r\n                    Trim Stores Content\r\n                </Tab>\r\n                <Tab eventKey=\"Eight\" title={<span> <i class=\"fa fa-layer-group\"></i> Sewing Area</span>}>\r\n                    Sewing Area Content\r\n                </Tab>\r\n                <Tab eventKey=\"Nine\" title={<span> <i class=\"fa fa-ballot-check\"></i> Finishing Area</span>}>\r\n                    Fininshing Area Content\r\n                </Tab> */}\r\n            </Tabs>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    </>\r\n}"],"names":["CompanyUnitTable","props","data","columns","React","Header","accessor","Cell","_ref","row","_jsx","className","onClick","openEditForm","original","title","children","deleteUnitRecord","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","useTable","_jsxs","striped","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","getRowProps","cells","cell","getCellProps","getBasicDetails","api","get","concat","process","then","response","catch","err","message","alert","UnitSetUp","show","setShow","useState","handleClose","verticalActive","setVerticalActive","unitNameLogo","setUnitNameLogo","unitName","setunitName","unitNameError","setUnitNameError","shortName","setShortName","shortNameError","setShortNameError","group","setGroup","groupError","setGroupError","division","setdivision","divisionError","setDivisionError","tinNo","setTinNo","tinNoError","setTinNoError","regNo","setRegNo","regNoError","setRegNoError","addressLine1","setAddressLine1","addressLine1Error","setAddressLine1Error","city","setCity","cityError","setCityError","pinNo","setPinNO","pinNoError","setPinNoError","contactNo","setContactNo","contactNoError","setContactNoError","mailId","setMailId","mailIdError","setMailIdError","state","setState","stateList","setStateList","stateError","setStateError","setData","isEditFormOpen","setIsEditFormOpen","unitId","setUnitId","handleTinValidation","value","test","handleUnitSetup","e","preventDefault","isValid","length","payload","trackPromise","unitService","saveCompanyUnits","status","stateValues","getCompanyUnitData","result","error","getCompanyUnits","Company_Units","useEffect","adminService","states","closeEditForm","handleEditUnit","editCompanyUnits","_Fragment","MDBCol","size","style","width","MDBTabs","MDBTabsItem","MDBTabsLink","active","MDBTabsContent","MDBTabsPane","Button","Modal","onHide","dialogClassName","backdrop","keyboard","closeButton","Title","Body","onSubmit","MDBInput","wrapperClass","type","tabindex","label","onChange","target","name","color","Form","Select","item","State_Name","Footer","variant","defaultPageSize","Unit_Full_Name","Unit_Short_Name","Group_Id","Division_Id","Tin_Num","Reg_Num","Address_Line_1","City","State","Pin_Code","Contact_No","Email_Id","Unit_Id","editFormDetails","window","confirm","deleteCompanyUnits","readOnly","saveCompanyUsers","post","editCompanyUsers","deleteCompanyUsers","getCompanyUsers","console","CompanyUserTable","deleteUserRecord","UserSetUp","userName","setUserName","userNameError","setUserNameError","empId","setEmpId","empIdError","setEmpIdError","department","setDepartment","departmentError","setDepartmentError","designation","setDesignation","designationError","setDesignationError","mobileNumber","setMobileNumber","mobileNumberError","setMobileNumberError","personalMaildId","setPersonalMaildId","personalMaildIdError","setPersonalMaildIdError","userLevel","setUserLevel","userLevelError","setUserLevelError","setStatus","statusError","setStatusError","loginId","setLoginId","loginIdError","setLoginIdError","basicData","setBasicData","basicDesgination","setbasicDesgination","basicDepartment","setBasicDepartment","selectedUnit","setSelectedUnit","selectedUnitError","setSelectedUnitError","units","userService","getCompanyUserData","Company_Users","paginationFactory","page","sizePerPage","lastPageText","firstPageText","nextPageText","prePageText","showTotal","alwaysShowAllBtns","hideSizePerPage","onPageChange","onSizePerPageChange","handleUserLevel","handleEditUserDetails","MDBRow","Department_Name","Department_Id","Devision_Name","Devision_Id","block","User_Name","User_Employee_Id","Designation_Id","Mobile_Num","Mail_Id","User_Role","Status","User_Login_ID","saveCompanyBuyers","editCompanyBuyers","deleteCompanyBuyers","getCompanyBuyers","BuyerGroupTable","deleteBuyerGroupRecord","BuyerGroup","selectedBuyerGroup","setSelectedBuyerGroup","selectedBuyerGroupError","setSelectedBuyerGroupError","buyerId","setBuyerId","buyerName","setBuyerName","buyerNameError","setBuyerNameError","contactNumber","setcontactNumber","contactNumberError","setContactNumberError","buyerGroupData","setBuyerGroupData","buyerGroups","handleBuyerGroupSetup","buyerService","getCompanyBuyersData","handleEditBuyer","Company_Buyers","required","Buyer_Group_Name","Buyer_Group_Id","Buyer_Contact_No","Buyer_Email_Id","Buyer_Name","Buyer_Id","DataSetUp","addressLine2","setAddressLine2","street","setStreet","contactNoRec","setContactNoRec","faxNo","setFaxNo","website","setWebsite","handleVerticalClick","Administrator","basicActive","setBasicActive","handleBasicClick","class","apiUrl","getStyleEntry","saveStyleEntry","editStyleEntry","deleteStyleEntry","getPODetails","savePODetails","editPODetails","deletePODetails","getStyleLookupDetails","StyleEntryTable","values","Style_No","_ref2","images","JSON","parse","Style_Images","image","index","src","alt","height","marginRight","_ref3","PODetailsTable","PO_No","rowSpans","rowGroups","lastStyleNo","spanCount","groupIndex","forEach","currentStyleNo","calculateRowSpansAndGroups","i","previousStyleNo","rowClass","cellIndex","textAlign","verticalAlign","rowSpan","ProductionOrder","embType","setEmbType","embTypeError","setEmbTypeError","washingType","setWashingType","washingTypeError","setWashingTypeError","note","setNote","styleNo","setStyleNo","styleNoError","setStyleNoError","POId","setPOId","fPONo","setFPONo","PONo","setPONo","PONoError","setPONoError","OCNo","setOCNo","fPONoError","setFPONoError","printType","setPrintType","printTypeError","setPrintTypeError","others","setOthers","shipmentMode","setShipmentMode","shipmentModeError","setShipmentModeError","deliveryDate","setDeliveryDate","deliveryDateError","setDeliveryDateError","pcd","setPCD","pcdError","setPCDError","styleNoList","setStyleNoList","embTypeList","setEmbTypeList","printTypeList","setPrintTypeList","washingTypeList","setWashingTypeList","setRows","sizeKeys","setSizeKeys","garmentColor","setGarmentColor","destinationCountry","setDestinationCountry","sizesArray","setSizesArray","sizes","setSizes","reduce","acc","curr","editingIndex","setEditingIndex","BuyerName","StyleDescription","setStyleDescription","SizeGridName","setSizeGridName","ProductType","setProductType","MerchantName","setMerchantName","MerchantContact","setMerchantContact","GenderView","setGenderView","rowData","setRowData","calculateTotal","Object","sum","parseInt","addNewRow","newSizes","sizeKey","total","isEditable","handleDeleteRow","rowIndex","updatedRows","filter","_","initialSizes","handleSizeGrid","StyleNoList","sessionStorage","getItem","SizeGridList","sizeGridId","find","grid","Style_Description","Size_Grid_Name","Product_Type","Marchent_Name","Marchent_Contact","Gender","sizeGridIdValue","Size_Grid_Id","Size_Grid","SizeGridValue","Size_Grid_Value","selectedSizes","split","trim","handleSizesChange","handlePODetails","entries","key","parsedValue","isNaN","stringify","styleStoreService","getPOData","PO_Details","setItem","sizeGrid","setExistingGarmentData","keys","handleEditStyleEntry","_ref4","htmlFor","Emb_Type","id","Print_Type","Washing_Type","border","float","marginTop","PO_Id","Note","F_PO_No","OC_No","Others","Shipment_Mode","Delivery_Date","PCD","garmentData","Garment_Data","disabled","cellPadding","backgroundColor","borderRadius","handleEditRow","StyleEntry","buyerOrderRefNo","setBuyerOrderRefNo","buyerOrderRefNoError","setBuyerOrderRefNoError","season","setSeason","seasonError","setSeasonError","noteError","setNoteError","productType","productTypeError","setProductTypeError","gender","setGender","genderError","setGenderError","marchantName","setMarchantName","marchantNameError","setMarchantNameError","StyleNoError","styleDescription","styleDescriptionError","setStyleDescriptionError","setSizeGrid","sizeGridError","setSizeGridError","marchantContact","setMarchantContact","marchantContactError","setMarchantContactError","buyer","setBuyer","buyerList","setBuyerList","genderList","setGenderList","sizeGridList","setSizeGridList","seasonList","setSeasonList","nextStyleNumber","setNextStyleNumber","productTypeList","setProductTypeList","styleId","setStyleEntryId","base64Images","setBase64Images","currentIndex","setCurrentIndex","imageUploadError","setImageUploadError","handleImageUpload","event","files","totalFiles","base64ImagesArray","reader","FileReader","file","onload","base64Image","push","readAsDataURL","handleDeleteImage","indexToDelete","document","getElementById","updatedImages","handleStyleEntry","getStyleEntryData","Style_Entry","Next_Style_No","Season_Name","for","accept","multiple","display","justifyContent","position","margin","cursor","top","right","background","Buyer_Order_Ref_No","Season","StyleLookupTable","firstImage","qty","totalQty","garment","StyleLookup","Style_Lookup","MOCK_DATA","expenses","employees","contact","StyleDashboard","treeValue","setTreeValue","TreeState","create","StyleStore","LandingPage","Tabs","defaultActiveKey","Tab","eventKey"],"sourceRoot":""}